<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="/resources/spdi-openaccess-jats.xsl"?>
<!DOCTYPE response [
	
<!ENTITY % article SYSTEM "http://jats.nlm.nih.gov/archiving/1.2/JATS-archivearticle1.dtd">
<!ENTITY % book-part-wrapper SYSTEM "http://jats.nlm.nih.gov/extensions/bits/2.0/BITS-book2.dtd">
	]><response><apiMessage>This XML was provided by Springer Nature</apiMessage><query>doi:10.1007/978-1-4302-5741-7_1</query><apiKey>87ba7cb21f89ce78154df796840621f4</apiKey><result><total>1</total><start>1</start><pageLength>2</pageLength><recordsDisplayed>1</recordsDisplayed></result><records><book-part-wrapper dtd-version="2.0" xml:lang="en" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><book-meta><book-id book-id-type="doi">10.1007/978-1-4302-5741-7</book-id><book-id book-id-type="publisher-id">978-1-4302-5741-7</book-id><book-id book-id-type="book-title-id">314428</book-id><book-title-group><book-title>Rethinking the Internet of Things</book-title><subtitle>A Scalable Approach to Connecting Everything</subtitle></book-title-group><contrib-group><contrib contrib-type="author"><name><surname>daCosta</surname><given-names>Francis</given-names></name></contrib></contrib-group><pub-date date-type="pub"><string-date>2013-01-01</string-date></pub-date><isbn content-type="ppub">978-1-4302-5740-0</isbn><isbn content-type="epub">978-1-4302-5741-7</isbn><publisher><publisher-name>Apress</publisher-name><publisher-loc>Berkeley, CA</publisher-loc></publisher><permissions><copyright-statement content-type="compact">© Francis daCosta and Byron Henderson 2013</copyright-statement><copyright-year>2013</copyright-year><copyright-holder>Francis daCosta and Byron Henderson</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by-nc-nd/4.0/"><license-p><bold>Open Access</bold> This book is licensed under the terms of the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License (<ext-link xlink:href="http://creativecommons.org/licenses/by-nc-nd/4.0/" ext-link-type="uri">http://creativecommons.org/licenses/by-nc-nd/4.0/</ext-link>), which permits any noncommercial use, sharing, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence and indicate if you modified the licensed material. You do not have permission under this licence to share adapted material derived from this book or parts of it.</license-p><license-p>The images or other third party material in this book are included in the book’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the book’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder.</license-p></license></permissions><custom-meta-group><custom-meta><meta-name>publisher-imprint-name</meta-name><meta-value>Apress</meta-value></custom-meta><custom-meta><meta-name>book-chapter-count</meta-name><meta-value>8</meta-value></custom-meta><custom-meta><meta-name>media-type</meta-name><meta-value>eBook</meta-value></custom-meta><custom-meta><meta-name>contains-esm</meta-name><meta-value>No</meta-value></custom-meta><custom-meta><meta-name>book-product-type</meta-name><meta-value>Professional book</meta-value></custom-meta><custom-meta><meta-name>book-subject-primary</meta-name><meta-value>Computer Science</meta-value></custom-meta><custom-meta><meta-name>book-subject-secondary</meta-name><meta-value>Computer Communication Networks</meta-value></custom-meta><custom-meta><meta-name>book-subject-secondary</meta-name><meta-value>Computing Milieux</meta-value></custom-meta><custom-meta><meta-name>book-subject-secondary</meta-name><meta-value>Computer Systems Organization and Communication Networks</meta-value></custom-meta><custom-meta><meta-name>book-subject-collection</meta-name><meta-value>Professional and Applied Computing</meta-value></custom-meta></custom-meta-group></book-meta><book-part book-part-type="chapter" id="Chap1" seq="1"><book-part-meta><book-part-id book-part-id-type="doi">10.1007/978-1-4302-5741-7_1</book-part-id><book-part-id book-part-id-type="chapter">1</book-part-id><title-group><label>Chapter 1</label><title>It’s Different Out Here</title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>daCosta</surname><given-names>Francis</given-names></name><xref ref-type="aff" rid="Aff1">1</xref></contrib><aff id="Aff1"><label>1</label><institution-wrap/><addr-line content-type="city">Santa Clara</addr-line><country country="US">USA</country></aff></contrib-group><pub-date date-type="pub" publication-format="electronic"><day>2</day><month>01</month><year>2014</year></pub-date><fpage>1</fpage><lpage>21</lpage><pub-history><date date-type="online"><day>2</day><month>01</month><year>2014</year></date></pub-history><permissions><copyright-statement content-type="compact">© Francis daCosta 2013</copyright-statement><copyright-year>2013</copyright-year><copyright-holder>Francis daCosta</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by-nc-nd/4.0/"><license-p><bold>Open Access</bold> This chapter is licensed under the terms of the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License (<ext-link xlink:href="http://creativecommons.org/licenses/by-nc-nd/4.0/" ext-link-type="uri">http://creativecommons.org/licenses/by-nc-nd/4.0/</ext-link>), which permits any noncommercial use, sharing, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence and indicate if you modified the licensed material. You do not have permission under this licence to share adapted material derived from this chapter or parts of it.</license-p><license-p>The images or other third party material in this chapter are included in the chapter’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the chapter’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder.</license-p></license></permissions><abstract xml:lang="en" id="Abs1" specific-use="web-only"><title>Abstract</title><p>The emergence of the Internet of Things (IoT) destroys every precedent and preconceived notion of network architecture. To date, networks have been invented by engineers skilled in protocols and routing theory. But the architecture of the Internet of Things will rely much more upon lessons derived from nature than traditional (and ossified, in my opinion) networking schemes. This chapter will consider the reasons why the architecture for the Internet of Things must incorporate a fundamentally different architecture from the traditional Internet, explore the technical and economic foundations of this new architecture, and finally begin to outline a solution to the problem.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Integrator Function</kwd><kwd>Wireless Mesh Networking</kwd><kwd>Software Define Network</kwd><kwd>Diesel Generator</kwd><kwd>IPv6 Address</kwd></kwd-group><custom-meta-group><custom-meta><meta-name>chapter-type</meta-name><meta-value>OriginalPaper</meta-value></custom-meta><custom-meta><meta-name>chapter-grants-type</meta-name><meta-value>OpenChoice</meta-value></custom-meta><custom-meta><meta-name>metadata-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>abstract-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bodypdf-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bodyhtml-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bibliography-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>esm-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>open-access</meta-name><meta-value>true</meta-value></custom-meta><custom-meta><meta-name>online-first</meta-name><meta-value>false</meta-value></custom-meta><custom-meta><meta-name>pdf-file-reference</meta-name><meta-value>BodyRef/PDF/978-1-4302-5741-7_Chapter_1.pdf</meta-value></custom-meta><custom-meta><meta-name>output-medium</meta-name><meta-value>Online</meta-value></custom-meta><custom-meta><meta-name>pdf-type</meta-name><meta-value>Typeset</meta-value></custom-meta><custom-meta><meta-name>target-type</meta-name><meta-value>OnlinePDF</meta-value></custom-meta></custom-meta-group></book-part-meta><body><p>The emergence of the Internet of Things (IoT) destroys every precedent and preconceived notion of network architecture. To date, networks have been invented by engineers skilled in protocols and routing theory. But the architecture of the Internet of Things will rely much more upon lessons derived from nature than traditional (and ossified, in my opinion) networking schemes. This chapter will consider the reasons why the architecture for the Internet of Things must incorporate a fundamentally different architecture from the traditional Internet, explore the technical and economic foundations of this new architecture, and finally begin to outline a solution to the problem.</p><sec id="Sec1"><title>Why the Internet of Things Requires a New Solution</title><p>The architecture of the original Internet was created long before communicating with billions of very simple devices such as sensors and appliances was ever envisioned. The coming explosion of these much simpler devices creates tremendous challenges for the current networking paradigm in terms of the number of devices, unprecedented demands for low-cost connectivity, and impossibility of managing far-flung and diverse equipment. Although these challenges are becoming evident now, they will pose a greater, more severe problem as this revolution accelerates. This book describes a new paradigm for the Internet of Things; but first, the problem.</p><sec id="Sec2"><title>It’s Networking on the Frontier</title><p>The IoT architecture requires a much more organic approach compared with traditional networking because it represents an extreme frontier in communications. The scope and breadth of the devices to be connected are huge, and the connections to the edges of the network where these devices will be arrayed will be “low fidelity”: low-speed, lossy (where attenuation and interference may cause lost but generally insignificant data, as depicted in Figure <xref rid="Fig1" ref-type="fig">1-1</xref>), and intermittent. At the same time, much of the communication will be machine-to-machine and in tiny snatches of data, which is completely the <italic>opposite</italic> of networks such as the traditional Internet.<fig id="Fig1"><label>Figure 1-1.</label><caption xml:lang="en"><p>The results of a lossy connection at an end point</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig1_HTML.jpg" id="MO1"/></fig></p><p>Exploring the characteristics of the traditional Internet highlights the very different requirements for the frontier of the emerging Internet of Things. Conventionally, data networks have been over-provisioned; that is, built with more capacity than is typically required for the amount of information to be carried. Even the nominally “best effort” traditional Internet is massively over-provisioned in many aspects. If it weren’t, the Internet couldn’t work: protocols such as TCP/IP are fundamentally based on a <italic>mostly</italic> reliable connection between sender and receiver.</p><p>Because Moore’s Law provided a “safety valve” in the form of ever-increasing processor speeds and memory capacities, even the explosive growth of the Internet over the last two decades has not exceeded the capabilities of devices such as routers, switches, and PCs, in part because they are continually replaced at 3- to 5-year intervals with devices with more memory and processing power.</p><p>These devices are inherently multipurpose: they are designed with software, hardware, and (often) human access and controls. What is important about this point is that the addition of networking capability, usually in the form of protocol “stacks,” is nearly free. The processor power, memory, and so on already exist as byproducts of the devices’ prime functions.</p><p>But the vast majority of devices to be connected in the coming IoT are very different. They will be moisture sensors, valve controls, “smart dust,” parking meters, home appliances, and so on. These types of end devices almost <italic>never</italic> contain the processors, memory, hard drives, and other features needed to run a protocol stack. These components are not necessary for the end devices’ prime function, and the costs of provisioning them with these features would be prohibitive, or at least high enough to exclude wide use of many applications that could otherwise be well served. So these simpler devices are very much “on their own” at the frontier of the network.</p><p>Today’s Internet doesn’t reach this frontier; it simply isn’t cost-effective to do so, as will be explored later. Thus, it isn’t possible to overprovision in the same way networks have traditionally been built. On the frontier, devices in every aspect should therefore be more self-sufficient, from their naming, to protocols, to security. There simply isn’t the “safety net” of device performance, over-provisioning, a defined end-to-end connection, and management infrastructure as in traditional networking.</p><sec id="Sec3"><title>It Will be (Even) Bigger than Expected</title><p>As a growing number of observers realize, one of the most important aspects of the emerging Internet of Things is its incredible breadth and scope. Within a few years, devices on the IoT will vastly outnumber human beings on the planet—and the number of devices will continue to grow. Billions of devices worldwide will form a network unprecedented in history. Devices as varied as soil moisture sensors, street lights, diesel generators, video surveillance systems—even the legendary Internet-enabled toasters—will all be connected in one fashion or another. See Figure <xref rid="Fig2" ref-type="fig">1-2</xref> for some examples.<fig id="Fig2"><label>Figure 1-2.</label><caption xml:lang="en"><p>A wide variety of end devices will be connected to the Internet of Things</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig2_HTML.jpg" id="MO2"/></fig></p><p>Some pundits have focused only on the myriad addresses necessary for the sheer arithmetic count of devices and have pronounced IPv6 sufficient for the IoT. But this mistakes <italic>address space</italic> for <italic>addressability</italic>. No central address repository or existing address translation scheme can possibly deal with the frontier aspects of the IoT. Nor can addresses alone create the costly needed networking “horsepower” within the appliances, sensors, and actuators.</p><p>Devices from millions of manufacturers based in hundreds of countries will appear on the IoT (and disappear) completely unpredictably. This creates one of the greatest challenges of the IoT: management. This is a matter both of scope and device capabilities.</p><p>Consider smartphones, for example, which are expected to become the most common computing and communications platforms in the world. This number has recently been placed at 1.4 billion, or roughly one for every five persons on the planet. A similar figure has been estimated for PCs, bringing the total worldwide for these two types of devices to about 3 billion.</p><p>These devices incorporate the processors, memory, and human interfaces necessary for traditional networking protocol stacks (typically IPv6 today), the human interfaces necessary for control, and an infrastructure for management (unique addresses, management servers, and so on). The prices (and profit margins) of these devices mean that it is cost-effective for manufacturers (and governments) to keep track of addresses, feature sets, software revisions, and so on.</p><p>But the situation for the actuators, sensors, and appliances of the Internet of Things is vastly different. Considering the number of appliances per citizen in developed countries alone, the number is staggering: each of these individuals probably makes use of dozens of these devices each day. Even residents of <italic>developing</italic> countries interact with multiple end devices and sensors daily—and those numbers are growing with rising standards of living. Add to that a vast array of traffic-light controls, security devices, and status sensors operated by various levels of government, and the number of potential IoT end devices rapidly grows to a couple of orders of magnitude greater than the world’s population (7 billion and counting, as of this writing).</p><p>The estimated 700 billion IoT devices (see Figure <xref rid="Fig3" ref-type="fig">1-3</xref>) cannot be individually managed; they can only be accommodated. It will simply not be possible to administer the addressing of this huge population of communicating machines through traditional means such as IPv6 <italic>nor will it be necessary to do so</italic>. Instead, self-addressing and self-classification will provide the answers, as explained in <ext-link xlink:href="10.1007/978-1-4302-5741-7_3" ext-link-type="doi">Chapter 3</ext-link>.<fig id="Fig3"><label>Figure 1-3.</label><caption xml:lang="en"><p>The quantity of devices in the Internet of Things will dwarf the traditional Internet and thus cannot be networked with current protocols, tools, and techniques</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig3_HTML.jpg" id="MO3"/></fig></p></sec><sec id="Sec4"><title>Terse, Purposeful, and Uncritical</title><p>The kinds of information these hundreds of billions of IoT devices exchange will also be very different from the traditional Internet—at least the Internet we’ve known since the 1990s. Much of today’s Internet traffic is primarily human-to-machine oriented. Applications such as e-mail, web browsing, and video streaming consist of relatively large chunks of data generated by machines and consumed by humans. As such, they tend to be asymmetrical and bursty in data flows, with a relatively large amount of data exchanged in each “session” or “conversation.”</p><p>But the typical IoT data flow will be nearly diametrically opposed to this model. Machine-to-machine communications require minimal packaging and presentation overhead. For example, a moisture sensor in a farmer’s field may have only a single value to send of volumetric water content. It can be communicated in a few characters of data, perhaps with the addition of a location/identification tag. This value might change slowly throughout the day, but the frequency of <italic>meaningful</italic> updates will be low. Similar terse communication forms can be imagined for millions of other types of IoT sensors and devices. Many of these IoT devices may be simplex or nearly simplex in data flows, simply broadcasting a state or reading over and over while switched on without even the capacity to “listen” for a reply.</p><p>This raises another aspect of the typical IoT message: it’s individually <italic>unimportant</italic>. For simple sensors and state machines, the variations in conditions over time may be small. Thus, any individual transmission from the majority of IoT devices is likely completely uncritical. These messages are being collected and interpreted elsewhere in the network, and a gap in data will simply be ignored or extrapolated (see Figure <xref rid="Fig4" ref-type="fig">1-4</xref>).<fig id="Fig4"><label>Figure 1-4.</label><caption xml:lang="en"><p>Multiple identical messages may be received; some are discarded</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig4_HTML.jpg" id="MO4"/></fig></p><p>Even more complex devices, such as a remotely monitored diesel generator, should generate little more traffic, again in terse formats unintelligible to humans, but gathered and interpreted by other devices in the IoT. Overall, the <italic>meaningful</italic> amount of data generated from each IoT device is vanishingly small—nearly exactly the opposite of the trends seen in the traditional Internet. For example, a temperature sensor might generate only a few hundred bytes of useful data per day, about the same as a couple of smartphone text messages. Because of this, very low bandwidth connections might be utilized for savings in cost, battery life, and other factors. On the IoT frontier, just as in the mythical “Old West,” laconic characters will be appreciated.</p></sec><sec id="Sec5"><title>Dealing with Loss</title><p>Today’s traditional Internet is extremely reliable, even if labeled “best effort.” Over-provisioning of bandwidth (for normal situations) and backbone routing diversity have created an expectation of high service levels among Internet users. “Cloud” architectures and the structure of modern business organizations are built on this expectation of Internet quality and reliability.</p><p>But at the extreme edges of the network that will make up the <italic>vast statistical majority of the IoT</italic>, connections may often be intermittent and inconsistent in quality. Devices may be switched off at times or powered by solar cells with limited battery back-up. Wireless connections may be of low bandwidth or shared among multiple devices.</p><p>Traditional protocols such as TCP/IP are designed to deal with lossy and inconsistent connections by resending data. Even though the data flowing to or from any individual IoT device may be exceedingly small, it will grow quite large in aggregate IoT traffic. The inefficiencies of resending vast quantities of <italic>mostly individually unimportant</italic> data are clearly an unnecessary redundancy. Again, recall that for the vast majority of IoT devices, a lost message (or even a substantial string of messages) is not meaningful. (For those devices that are sending or receiving timely mission-critical information, traditional Internet protocols are likely a better fit than the emerging IoT architecture.)</p></sec></sec><sec id="Sec6"><title>The Protocol Trap</title><p>It’s extremely tempting to suggest existing widely deployed protocols such as TCP/IP for the IoT (see the sidebar “ Why not IP for the IoT?” in <ext-link xlink:href="10.1007/978-1-4302-5741-7_2" ext-link-type="doi">Chapter 2</ext-link>). After all, they have already been engineered and are widely available in protocol stacks on billions of devices such as PCs and smartphones. But, as briefly noted, most of these protocols are ill-suited for many of the end devices with potential interest for the IoT.</p><p>The basic problem is the very robustness of these protocols. They are intrinsically designed for high-duty cycles, large data streams, and reliability. Each of these otherwise desirable characteristics is a poor fit for the IoT, as noted previously. But what’s the harm, one might ask? Isn’t more capability a good thing? Not for the Internet of Things.</p><sec id="Sec7"><title>Mind the Overhead</title><p>A key reason why robust protocols aren’t needed (or possible) for the IoT is the overhead they require and the minimal processing, memory, and communications capabilities of many very simple IoT devices. This may come as a shock to some IoT thinkers who envision an IP stack on every light post and refrigerator. But when the IoT is considered from the proper “end of the telescope”—from the <italic>edge</italic> of the network in—this immediately becomes impractical, for all the reasons noted previously. Instead, it makes sense to provide a new solution that can run side by side with existing IP–enabled end devices to efficiently manage the immense amount of data being generated by devices for which IP support is unnecessary and perhaps a liability.</p><p>Much of what has been written to date about the IoT assumes a sophisticated networking stack in every refrigerator, parking meter, and fluid valve, so this may be a difficult idea to abandon. But from the forgoing discussion, it’s obvious that these devices won’t need the decades of built-up network protocol detritus encoded in TCP/IP, for example. One must free his or her thinking from personal experiences and concepts of the networking of computers, smartphones (and, by definition, human users) to address the much simpler needs of the myriad devices at the edge of the IoT.</p><p>Burdening otherwise simple devices such as power line sensors and coffee makers with a full networking protocol stack would serve only to massively increase the cost and complexity of billions of these devices. A traditional networking protocol stack requires a processor, operating system, memory, and other functions. Even if consolidated within a single chip, the complexity, power draw, and cost of this computing power is an unnecessary expense in the IoT. These costs will be considered later in this chapter.</p><p>As noted previously, the vast majority of IoT devices have very basic needs of sending or receiving a miniscule amount of data. The physical requirements may likewise be very simple: an integrated chip containing only the minimal interfaces and a means of transmission or reception.</p></sec><sec id="Sec8"><title>More Smarts, More Risk</title><p>Although it may seem counterintuitive, dumber devices are safer. If every IoT device has some sort of operating system and memory, it becomes a potential subject for hacking or inadvertent misconfiguration. The operating systems and protocol stacks also require updating and management. Providing security and upgrades on the scale of the IoT for a massive number of devices, built and installed by millions of different manufacturers and individuals, is simply an impossible task (see Figure <xref rid="Fig5" ref-type="fig">1-5</xref>).<fig id="Fig5"><label>Figure 1-5.</label><caption xml:lang="en"><p>Contrasting the processor, OS, memory, and power necessary for traditional protocols vs. the IoT protocol</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig5_HTML.jpg" id="MO5"/></fig></p></sec><sec id="Sec9"><title>The Overhead of Overhead</title><p>Beyond the physical costs and management requirements, the <italic>data</italic> overhead of traditional networking is likewise overkill for the majority of the IoT. Traditional protocols are “sender-oriented”; that is, the sender must ensure that its message has been properly transmitted and received. This leads to extensive capabilities in terms of temporary storage of sent data, management of acknowledgments, and resending of lost or corrupted messages. And each of these robust capabilities is reflected in overhead data added to the message payload.</p><p>When this data overhead is considered in relation to the tiny snatches of data sent or received by the typical IoT device, the ratio of overhead to payload becomes ridiculous. Moreover, because each <italic>individual</italic> IoT message is completely <italic>uncritical</italic>, the check-and-retransmit overhead is an unnecessary expense in bandwidth and end device cost. It makes the most sense, therefore, for the emerging IoT architecture to be engineered for an absolute minimum of data overhead.</p></sec><sec id="Sec10"><title>Humans Need Not Apply</title><p>Perhaps most importantly, traditional networking protocols and applications are almost all designed with the expectation of a human being on one end of the “conversation.” These traditional approaches are inherently designed to communicate concepts and context for humans.</p><p>But the networking overhead associated with smooth streaming, echoing of typed characters, and intelligible presentation of data are completely unnecessary at the machine-to-machine device level in the Internet of Things. So a large percentage of the processing and data overhead of traditional protocols is totally redundant for the IoT. An architecture for the Internet of Things should provide only the minimal amount of overhead that is needed—and only at the point that it is needed—to maximize efficiency and minimize costs.</p></sec></sec></sec><sec id="Sec11"><title>Economics and Technology of the Internet of Things</title><p>One of the great promises of bringing IPv6 to the traditional Internet was that it would provide all the address space needed to connect every device ever needed forever—including the Internet of Things, no matter how large it grew. And within that narrow definition, the promise is correct. Because of some quirks in the way that only part of the IPv6 address space has been released, the current theoretical number of hosts (communicating devices) on an IPv6 Internet is 3.4×10*38*.</p><p>This is indeed a huge number, which even the massive Internet of Things is unlikely to surpass. For this reason, many pundits and manufacturers (particularly those with a vested interest) have sanguinely said that IPv6 is already prepared for the Internet of Things. The world simply needs to keep doing what it has always done to incorporate the new IoT—there are more IP addresses available than grains of sand.</p><p>But this “head in the sand” approach ignores the key economic factor that will drive the deployment of the Internet of Things (as it has driven nearly every other networking technology): the cost at the end points. There are three broad areas where these costs accumulate and compel the need for a new approach in the Internet of Things: hardware and software, oversight and management, and security.</p><sec id="Sec12"><title>Functionality Costs Money</title><p>As noted earlier, traditional computing and communications devices such as PCs, tablets, and smartphones already incorporate processors, working memory, and storage in their design. These capabilities are necessary for their primary purpose. Adding IPv6 to these devices requires only the addition of a protocol stack that resides in storage, executes within working memory, and is powered by the processor.</p><p>Thus the incremental cost of adding IPv6 to these devices is indeed negligible, in fact barely measurable, when compared with the profit margins these devices generate. But these devices are <italic>not a significant portion of the Internet of Things</italic>! Numbering in the low billions today, their number will be dwarfed by the <italic>hundreds of billions</italic> of simple sensors and appliances in the IoT.</p><p>The vast majority of these simple end devices contain no processors, memory, or storage; and are not data-connected in any way today. This is a key point: the future of the Internet of Things is networking devices that have never been connected before. These devices are designed to be built and sold, for the most part, at the lowest cost yielding the highest margin. Those sold in developing countries, in particular, must be extremely inexpensive. Yet they are some of the very areas in which the IoT will grow most quickly. To capitalize on the enormous potential of the IoT, creating a standard low-cost solution will enable billions of devices that would otherwise continue to be off the grid, never developed, or added to the massive quantity of one-off solutions that are being spawned even today.</p></sec><sec id="Sec13"><title>Inexpensive Devices Can’t Bear Traditional Protocols</title><p>With a clearer picture of these cost realities in mind, it is immediately obvious that burdening moisture sensors, light bulbs, and the proverbial toaster with the additional hardware and software (not necessary for the basic functions of these sensors and appliances) needed to run traditional protocols such as IPv6 is a show-stopper. It has been estimated that the incremental cost of adding IPv6 to devices can be as much as $50, even in large quantities. (Note that beyond the processors and memory devices, additional Wi-Fi or Ethernet components are needed, and more power and heat dissipation will also be required).</p><p>Fortunately for the expansion of the Internet of Things, these simple devices do not require anything approaching the level of complexity offered by IPv6. Instead, simple modulation, broadcast, and receiving technologies will suffice, even including non-radio-frequency solutions such as infrared and power line networking. Assuming integration into silicon packages, costs for adding simple IoT networking (described in <ext-link xlink:href="10.1007/978-1-4302-5741-7_2" ext-link-type="doi">Chapter 2</ext-link>) to sensors and appliances will quickly approach $1 or less. The key is that this is barely “networking” in the traditional sense: broadcasting a state or receiving a simple instruction with no error correction, routing, or any other traditional networking functions. IoT devices are “dumb” in general, but they are exceedingly well-suited to a narrow task. At a very base level, it is easy to see that this cost argument alone is proof that the costs and the effort in creating a new solution for IoT devices are absolutely necessary. The result in not doing so would be that many of these new technologies and innovations would largely not come to pass. Others would be implemented at a cost that limits their usefulness. At what cost to growth, development, and prosperity?</p><p>And as noted previously, traditional one-size-fits-all networking protocols such as IPv6 burden even the smallest payloads with 1,000 bytes of data. In today’s over-provisioned world, these wasted bytes are unnoticed. But when extrapolated to hundreds of billions of simple end devices sending and receiving hundreds of thousands of times each day, the potential for network congestion and huge expenditures by carriers is significant. New carrier build-outs to support the “plain vanilla” data networking of the IoT will be difficult to cost-justify.</p></sec><sec id="Sec14"><title>Overseeing 700 Billion Devices</title><p>The count of manufacturers building networking equipment likely numbers in the millions. They are relatively easy to find and track because each traditional piece of networking equipment is associated with a MAC ID (Media Access Control Identification) assigned to the manufacturer. A large number, but there is a central database of manufacturers that is maintained by the IEEE (Institute of Electrical and Electronics Engineers).</p><p>For those manufacturers who are today building traditional networking equipment, one may assume a significant amount of networking knowledge. Imagine the impact of a new IoT standard on the number of network-ready manufacturers out there and the boost that would give to the worldwide economy.</p><p>Contrast this with the likely millions of firms and individuals worldwide building the kinds of simple sensors, actuators, and appliances which will be connected to the Internet of Things. It is inconceivable that all those makers of simple devices can be expected to queue up for addresses assigned by any centralized authority—or that rogue states, organizations, or individuals wouldn’t attempt to subvert such systems.</p><p>Extending this thinking, simply scanning for hundreds of billions of IPv6 addresses would take literally hundreds of years. It is one thing to put addresses on nearly a trillion devices, but quite another to find and manage one device out of that constellation. The human cost to manage an Internet of Things made up solely of sophisticated IPv6 devices would exceed the cost of any networking project on earth to date. These costs will fall hardest on already strapped carriers that are already struggling to wring more revenue from expensive physical plant investments.</p></sec><sec id="Sec15"><title>Only Where and When Needed</title><p>Of necessity, the emerging new architecture of the Internet of Things should take an entirely different approach, as described throughout this book. End devices have only locally meaningful and likely non-unique names. This is not a problem because there is networking intelligence elsewhere in the architecture at a much smaller (and thus more manageable) number of points.</p><p>And there is no need to oversee or control every maker of end devices. Because the IoT provides only limited networking capabilities at the end devices, there is little “harm” they can do on the network as a whole, and this is easily controlled through a much smaller number of “smarter” devices.”</p><p>This approach is totally different from IPv6, which demands that every device have the functionality and management to act as a “peer” on the network. The Internet of Things simply cannot scale if built of peers that all must be managed. Like a massive ant colony, the IoT will scale through specialization, individual autonomy, and localized effect. In this way, costs are reduced by orders of magnitude.</p><sec id="Sec16"><title>Security Through Simplicity (and Stupidity)</title><p>A trite statement, but ultimately true. Because the communications with the end devices in this emerging architecture of the Internet of Things are so basic and so specialized, there are limited back doors and security risks. Again, contrast this with the “peer-to-peer” world of the IPv6 Internet where many IP devices are exposed to hacking and cracking attempts from anywhere in the world. The global cost of Internet security breaches has been estimated at $115 billion (Symantec, 2012). With roughly 2.4 billion peer-to-peer nodes on the Internet today, this roughly equates to $50 per node (user) per year in losses. Multiplying that figure times the projected hundreds of billions of Internet of Things devices creates an unsustainably high cost of IPv6 in the IoT.</p><p>By focusing on limited networking capabilities for the end devices as described in this book, the emerging architecture of the Internet of Things drastically reduces the risks and costs associated with networking the huge population of appliances, actuators, and sensors.</p></sec></sec><sec id="Sec17"><title>Cost and Connectivity</title><p>The key for the expected expansion of the Internet of Things is connecting hundreds of billions more devices at far-reduced costs and risks. Only this emerging IoT architecture can accomplish both in a way that is cost-effective for device manufacturers, Internet carriers, and users.</p></sec></sec><sec id="Sec18"><title>Solving the IoT Dilemma</title><p>With the economic and technology challenges posed by the number and unmanageable nature of the end devices of the Internet of Things well-defined, the next step is to investigate solutions. The balance of this chapter, and indeed this book, is devoted to exploring the concepts which may be used to create an architecture (working side by side with, and enhancing the potential of, the traditional IP network) for the Internet of Things that may practically scale to the size and scope required.</p><sec id="Sec19"><title>Inspiration for a New Architecture</title><p>So if traditional networking architectures are not appropriate for all the potential applications of the Internet of Things, where can solutions be found? In addressing this question, fields as diverse as robotics, embedded systems, big data, and wireless mesh networking contribute concepts and technology, although none of these directly addresses the scale and scope of the Internet of Things, nor the simplicity of the vast majority of IoT end points.</p><p>There are no human-produced technology systems that scale to the massive size of the imminent IoT. So when considering techniques and processes, it is necessary to turn to nature, in which systems have evolved that scale to hundreds of billions of individual elements exchanging information (broadly defined) in some fashion. It quickly becomes clear that the only highly optimized systems exhibiting this sort of scope are populations of the natural world: colonies of social insects, the propagation of pollen, the dissemination of larval young, and so on.</p><sec id="Sec20"><title>Nature: The Original Big Data</title><p>The most obvious similarity between the natural systems and the emerging Internet of Things is scale—natural systems are truly massive. Billions and billions of individuals operate and interact as a population (of one species) or an ecosystem (of many species). Visual, aural, and chemical signals are broadcast and interpreted; gametes such as pollen may be distributed over vast areas by wind and currents to interact with other individuals of the same species; and huge groups of similar and dissimilar organisms share information about threats or food sources (intentionally or incidentally).</p><p>Obviously, the communication of these natural systems is not centrally controlled, nor are there elaborate protocols or retransmission schemes in place. Instead, species have evolved within the natural world in ways that make this communication possible. What are these characteristics that make this “networking” possible in the massive systems of nature?</p></sec><sec id="Sec21"><title>Autonomy of Individuals</title><p>One of the most striking things about natural systems is the way in which individuals independently send and receive communications and act on the information. Even seemingly highly organized populations or colonies such as ant and bee colonies are actually made up of individuals making decisions independently. Because individuals make these choices based on simple algorithms (usually dichotomous decision points) that are shared by all, the actions of the colony as a whole are as efficient as if centrally directed.</p><p>Even more remarkably, the actual brain “computing power” available to many species in nature is quite limited. Yet they can act on stimuli, communicate threats, broadcast mating availability, and perform many other tasks vital for survival. In the natural model, the simplicity of the individual is balanced by a narrowly defined purpose to its communications.</p><p>In the same way, most individual end devices in the IoT can be (indeed must be)very simple and autonomous. As noted previously, it will not be economically or architecturally feasible to burden these billions of devices with large amounts of computing power, memory, or protocol sophistication. When powered up, these devices must begin sending or receiving data immediately with no setup, management, or other interaction. It is interesting to note that many social insects operate in much the same way; immediately upon emerging in adult form, they begin a task such as nurturing nearby young. Without this autonomy of function and independence of individuals’ actions, nature would not scale—and neither can the IoT.</p></sec><sec id="Sec22"><title>Zones and Neighborhoods of Interest</title><p>Another aspect of natural systems that allow them to scale is the evolution of “zones” or “neighborhoods” of interest formed by “affinities,” which allow individuals to act upon a specific signal among countless other signals. A bird song is an interesting example of this phenomenon. Walking through a field, one may be struck by the songs being sung by several different bird species simultaneously. These songs can have a variety of purposes, such as advertising mating availability and suitability or defining territories.</p><p>But each individual takes note only of songs from members of its own species (see Figure <xref rid="Fig6" ref-type="fig">1-6</xref>). The zones of interest, or neighborhoods of interest, of various bird species can overlap, and one communications medium (in this case audible frequencies transmitted through the air) is being used for all messages. But each individual bird acts only upon messages within its own group. Similarly, a viable architecture for the IoT must allow interested observers to define a neighborhood of interest (within the much larger Internet) and analyze or send data only from or to that neighborhood.<fig id="Fig6"><label>Figure 1-6.</label><caption xml:lang="en"><p>Although many different species of birds may be singing in a field, only members of the same species listen</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig6_HTML.jpg" id="MO6"/></fig></p></sec><sec id="Sec23"><title>In the Eyes of the Beholder</title><p>Another important aspect of scaling in the natural world is that many communications are receiver-oriented. This is in direct contrast with the sender-oriented nature of many traditional communications protocols, as described previously. Plant pollen represents an interesting example of this highly scalable characteristic of natural systems.</p><p>Many of us view pollen as a (literal) irritant during hay fever season. But pollen’s actual role in nature is in plant reproduction. Pollen released by the male plant is carried indiscriminately by the wind. Because pollen is a lightweight (again, literally) signal, it can be distributed hundreds or even thousands of miles by air currents. At some point, pollen falls randomly out of the air, landing on any surface. The vast majority of released pollen falls on bodies of water, bare ground, streets, or plants of another species, where it deteriorates with no effect. But some tiny portion of the total pollen released falls upon the appropriate flowering parts of a female plant of the same species. At this point, pollination takes place and seeds are generated for the next generation (see Figure <xref rid="Fig7" ref-type="fig">1-7</xref>).<fig id="Fig7"><label>Figure 1-7.</label><caption xml:lang="en"><p>In nature, only the “correct” receivers act on “messages” received, such as pollen. All others discard or ignore the message</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig7_HTML.jpg" id="MO7"/></fig></p><p>The communication of pollen is thus <italic>receiver–oriented</italic>. The zone or neighborhood of interest is defined by the receiving plant, which ignores all other signals (pollen from other species). The overall network (winds and so on) does not discriminate or actively manage the transmission of pollen in any way; it’s merely a transport mechanism. The “intelligence” of nature is applied <italic>only at the receiver</italic>.</p><p>In the same way, a <italic>scalable</italic> architecture for the Internet of Things out of necessity includes many elements that are receiver-oriented, with zones or neighborhoods of interest being applied at the point of data integration and collection. These integrator functions will build interesting streams of data from “neighborhoods” that are geographical, temporal, or functional.</p><p>Another way of expressing these natural-world communications interactions is in term of publishers and subscribers. Many individuals may “publish” information in the form of calls, visual displays, pollen, etc. But these are moot unless other individuals “subscribe” to these messages. There is no set relationship between publisher and subscriber, as there would be in the peer-to-peer world of traditional networking–the natural world is simply too large and (obviously) unmanaged. In the IoT, the principle is the same: the only way to fully extract information from the myriad possible sources is through publish/subscribe relationships, which can scale.</p></sec><sec id="Sec24"><title>Signal Simplicity</title><p>In the preceding examples from nature, most “signals” are simple and have a single purpose. This makes them “lightweight” and easily transported through the environment, even to the fringes or frontiers of a territory. With a single purpose, they are also easily “analyzed” and acted upon at their destination. (Contrast this with the general-purpose nature of traditional networking protocols, designed with overhead sufficient to support transport of a wide variety of payloads).</p><p>Similarly, the vast majority of data transported in the Internet of Things will be very simple and single-purposed in function. Many sensor-type end devices will be communicating only simple states or conditions. If they receive any data at all, it will be simple “sets” defining minor configuration changes. Other types of devices may send nothing and receive only simple instructions or settings from a central source or function.</p><p>Besides being lightweight, another key element of natural communications, such as the broadcast of pollen, is that the individual messages are <italic>self-classified</italic>. Pollen particles exhibit a particular size and shape that “key” them to specific receivers. Bacteria and viruses are likewise structured to interact with specific hosts. These natural messages are classified for type and content <italic>externally</italic>, that is, by their shape or form. Similarly, messages in the emerging IoT will have external markers that will allow action by intermediate network elements.</p></sec></sec><sec id="Sec25"><title>Leveraging Nature</title><p>Bringing all these concepts found in nature into the emerging architecture of the Internet of Things is inherently a more organic approach. The key lesson from nature is that huge scale is possible only with simple building blocks. Rather than building upon already bloated networking protocols, the architecture of the IoT must be based upon the minimum networking requirements—with only the minimal complexity added at the precise points at which it is needed.</p><sec id="Sec26"><title>Peer-to-Peer Is Not Equal</title><p>Because most Internet of Things communications will be machine-to-machine, it can be tempting to consider the IoT a peer-to-peer network: the general concept of peer-to-peer architectures is extremely attractive. The prospect of billions of devices seamlessly interacting with one another would seem to allow the Internet of Things to escape the limitations of centralized command and control, instead taking full advantage of Metcalf’s Law to create more value through more interconnections.</p><p>But true peer-to-peer communication isn’t perfect democracy; it’s senseless cacophony. In the IoT, many devices at the edge of the network have no need to be connected with other devices at the edge of the network—there is zero value in the information (see Figure <xref rid="Fig8" ref-type="fig">1-8</xref>). As described previously, these devices have simple needs to speak and hear: perhaps sharing a few bytes of data <italic>per hour</italic> on bearing temperature and fuel supply for a diesel generator. Again, burdening them with protocol stacks, processing, and memory to allow true peer-to-peer networking is a complete waste of resources and creates more risk of failures, management and configuration errors, and hacking. More-sophisticated end devices may still require IP and they can exist side by side with simpler devices and be optimally served by technologies required to maximize the potential of the Internet of Things (as will be discussed in <ext-link xlink:href="10.1007/978-1-4302-5741-7_7" ext-link-type="doi">Chapter 7</ext-link>).<fig id="Fig8"><label>Figure 1-8.</label><caption xml:lang="en"><p>Machine-to-machine interconnection between devices at the network edge are unnecessary: toaster-to-printer, for example</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig8_HTML.jpg" id="MO8"/></fig></p></sec></sec><sec id="Sec27"><title>Transporting IoT Traffic</title><p>There is obviously a need to transport the data destined to (or originating from) these edge devices. The desired breakthrough for a truly universal IoT is to use increasing degrees of intelligence and networking capability to manage that transportation of data at various points in the network—but not to burden <italic>every</italic> device with the <italic>same</italic> degree of networking capability.</p></sec></sec><sec id="Sec28"><title>Billions of Devices; Three Functional Levels</title><p>To this point, the economic and practical reasons for a new architecture for the Internet of Things have been described. In addition, lessons from massively scaling systems in nature have been explored as possible models for communications in the IoT, along with the arguments for keeping the burden of communications very low on the simple end devices that will form the vast majority of the Internet of Things.</p><p>But if the communications intelligence and functionality does not exist within the end devices, other devices to transport data efficiently must be found elsewhere in the network. And if the data being sent and received by end devices is to be of any use, there must be elements of the network outside of the end devices to manage that data flow.</p><p>The most powerful concept of the emerging architecture of the Internet of Things is division of the network into three functional classes, allowing deployment of networking functionality (and cost and complexity) only where and when needed. These three classes are:
<list list-type="bullet"><list-item><p>The end devices</p></list-item><list-item><p><italic>Propagator nodes</italic> providing transport and gateways to the traditional Internet</p></list-item><list-item><p><italic>Integrator functions</italic> offering analysis, control, and human interfaces to the IoT</p></list-item></list></p><p>At the edge of the network are the simple end devices, which are represented on the left in Figure <xref rid="Fig9" ref-type="fig">1-9</xref>. They transmit or receive their small amounts of data in a variety of ways: wirelessly over any number of protocols, via power line networking, or by being directly connected to a higher-level device. These edge devices simply “speak” their small amounts of data or listen for data directed toward them. (The means of handling this addressing will be discussed in detail in <ext-link xlink:href="10.1007/978-1-4302-5741-7_6" ext-link-type="doi">Chapter 6</ext-link>.)</p><p>Unlike traditional protocols such as IPv6, the IoT architecture involves no error-checking, routing, higher-level addressing, or anything of the sort at the end devices. That’s because none of these is needed. Edge devices (Level I, so to speak) are fairly mindless “worker bees” existing on a minimum of data flow. This will suffice for the overwhelming majority of devices connected to the IoT.<fig id="Fig9"><label>Figure 1-9.</label><caption xml:lang="en"><p>The emerging architecture for the Internet of Things includes end devices, propagator nodes, and integrator functions</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig9_HTML.jpg" id="MO9"/></fig></p><sec id="Sec29"><title>Propagator Nodes Add Networking Functionality</title><p>The protocol intelligence resides elsewhere in the IoT network: within the Level II <italic>propagator nodes shown in the mesh in Figure</italic><xref rid="Fig9" ref-type="fig">1-9</xref>. They are technologically a bit more like familiar traditional networking equipment such as routers, but they operate in a different way. Propagator nodes listen for data originating from any device. Based on a simple set of rules regarding the “arrow” of transmission (toward devices or away from devices), propagator nodes decide how to broadcast these transmissions to other propagator nodes or to the higher-level <italic>integrator</italic> devices discussed in the next section.</p><p>In order to scale to the immense size of the Internet of Things, these propagator nodes must be capable of a great deal of discovery and self-organization. They will recognize other propagator nodes within range, set up simple routing tables of adjacencies, and discover likely paths to the appropriate integrators. Similar challenges have been solved before with wireless mesh networking technology (among many others), and although the topology algorithms are complex, the amount of data exchange needed is small.</p><p>One of the important capabilities of propagator nodes is being able to prune and optimize broadcasts. Data passing from and to end devices may be combined with other traffic and forwarded in the general direction of their transmission “arrow.” Propagator nodes are perhaps the closest functional elements to the traditional idea of peer-to-peer networking, but they provide networking on behalf of end devices and integrator functions at levels “above” and “below” themselves. Any of the standard networking protocols can be used, and propagator nodes will perform important translation functions between different networks (power line or Bluetooth to ZigBee or Wi-Fi, for example).</p><p>Although the preceding describes the generic function of the propagator nodes, many will also incorporate an important additional capability: the capacity to be managed and “tuned” by integrator functions across the network. This will take the form of a software <italic>publishing agent</italic> within fully featured propagator nodes. As more fully described in <ext-link xlink:href="10.1007/978-1-4302-5741-7_4" ext-link-type="doi">Chapters 4</ext-link> and <ext-link xlink:href="10.1007/978-1-4302-5741-7_5" ext-link-type="doi">5</ext-link>, this publishing agent will become part of the information “neighborhood” created by one or more integrator functions. In much the same manner as a Software Defined Network, the integrator function will apply higher-level management to particular propagator nodes, controlling functions such as frequency of data transmission, network topology, and other networking functionality.</p></sec><sec id="Sec30"><title>Collecting, Integrating, Acting</title><p><italic>Integrator functions</italic> are where the data streams from hundreds to millions of devices are analyzed and acted upon. Integrator functions also send their own transmissions to get information or set values at devices—of course, the transmission arrow of this data is pointed toward devices. Integrator functions may also incorporate a variety of inputs, from big data to social networking trends, and from Facebook “likes” to weather reports.</p><p>In this emerging architecture, integrator functions are the <italic>human</italic> interface to the IoT. As such, they will be built to reduce the unfathomably large amounts of data collected over a period of time to a simple set of alarms, exceptions, and other reports for consumption by humans. In the other direction, they will be used to manage the IoT by biasing devices to operate within certain desired parameters.</p><p>Using simple concepts such as “cluster” and “avoid” (discussed in <ext-link xlink:href="10.1007/978-1-4302-5741-7_5" ext-link-type="doi">Chapter 5</ext-link>), integrated scheduling and decision-making processes within the integrator functions allow much of the IoT to operate transparently and <italic>without human intervention</italic>. One integrator function might be needed for an average household operating on a smartphone, computer, or home entertainment device. Or the integrator function could be scaled up to a huge global enterprise, tracking and managing energy usage across a corporation, for example. (Integrator functions are fully explored in <ext-link xlink:href="10.1007/978-1-4302-5741-7_5" ext-link-type="doi">Chapter 5</ext-link>.)</p></sec><sec id="Sec31"><title>When the Scope Is Too Massive</title><p>An additional device at this third level of the architecture is the <italic>filter gateway</italic>. Filter gateways are notionally two-armed routers, with a connection to the Internet and a connection to the integrator function. Integrator functions are general purpose processors like PCs and can be overwhelmed by very large amounts of data, denial-of-service attacks, and so on. So the filter gateway is an appliance that ensures that only meaningful data is forwarded to the integrator function. Filter gateways may use a simple set of rules (set by the attached integrator function) to filter the traffic presented to the integrator, restricting it to the “neighborhood of interest” only. These neighborhoods again can be geographic, functional, time-based, or some combination of many other factors.</p></sec><sec id="Sec32"><title>Functional vs. Physical Packaging</title><p>When it comes to actually packaging and delivering products, some physical devices will certainly be combinations of architectural elements. Propagator nodes combined with one or more end devices certainly make sense, as will other combinations (see Figure <xref rid="Fig10" ref-type="fig">1-10</xref>). But the important concept here is to replace the idea of peer-to-peer for everything with a <italic>graduated</italic> amount of networking delivered <italic>as needed</italic> and <italic>where needed</italic>. In the Internet of Things, a division of labor is required (such as in ant and bee colonies) so that devices with not much to say or hear receive only the amount of networking they need–and no more.<fig id="Fig10"><label>Figure 1-10.</label><caption xml:lang="en"><p>Some devices incorporate multiple IoT functions in a single package. Here multiple end devices are combined with a propagator node that may provide networking services for additional nearby end devices</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/978-1-4302-5741-7_1_Fig10_HTML.jpg" id="MO10"/></fig></p></sec><sec id="Sec33"><title>Connecting to the “Big I”</title><p>To this point, this chapter has focused on the characteristics and functions that differentiate the Internet of Things from the traditional Internet (or “Big I”).</p><p>Despite the clear and compelling reasons for a new architecture and protocol at the very <italic>edge</italic> of the Internet of Things, it is not possible to escape a fundamental truth: in order to scale to billions of devices worldwide, the traditional Internet is the <italic>only viable</italic> backbone for transporting IoT traffic. So at some point, the lightweight IoT protocols must be packaged or converted to traditional Internet protocols that may take advantage of the deployed worldwide Internet architecture.</p><p>As briefly noted previously and more fully explored in <ext-link xlink:href="10.1007/978-1-4302-5741-7_6" ext-link-type="doi">Chapter 6</ext-link>, the architecture of the Internet of Things provides trunking and conversion functionality at richly featured propagator nodes. Less-featured propagator nodes also exist that communicate only with lightweight IoT protocols, depending on other propagator nodes for IP conversion. This is described in detail in <ext-link xlink:href="10.1007/978-1-4302-5741-7_4" ext-link-type="doi">Chapter 4</ext-link>.</p><p>Thus, connections between propagator nodes may be either traditional protocols such as IPv6 or lightweight IoT protocols. More importantly, richly featured propagator nodes will provide conversion to IPv6 for routing data between end devices and their associated integrator functions. In turn, integrator functions also typically include IPv6 for direct Internet connectivity (or it can be provided by a filter gateway).</p></sec><sec id="Sec34"><title>Smaller Numbers, Bigger Functionality</title><p>In addition, there is a relatively small number (still billions) of more-sophisticated end devices connected to the Internet of Things that incorporate mission-critical data, greater data requirements, and/or real–time data needs. These devices can justify the costs and complexity of processing, memory, and a full protocol stack, so they will connect directly via IPv6. An example is a video surveillance camera or complex process controller.</p><p>IPv6 data to and from these devices may still be combined with lightweight IoT data streams at the same integrator functions. In addition, interesting hybrid devices can develop that include both a lightweight IoT interface <italic>and</italic> a traditional IPv6 connection. In these situations, the lightweight IoT protocols might be used for normal or routine communications, with the IPv6 connections becoming active based on a particular event or condition.</p><p>Fundamentally, the IoT network protocols must coexist and interoperate with the traditional Internet and other networks such as Cellular 4G and LTE. The key challenge for the emerging Internet of Things architecture is to allow this interoperability without burdening the billions and billions of simpler end devices. The next chapter describes the simple “chirp” structure of IoT data and how it is delivered across the Internet of Things.</p></sec></sec></body></book-part></book-part-wrapper></records><facets><facet name="subject"><facet-value count="1">Computer Communication Networks</facet-value><facet-value count="1">Computer Science</facet-value><facet-value count="1">Computer Systems Organization and Communication Networks</facet-value><facet-value count="1">Computing Milieux</facet-value></facet><facet name="keyword"><facet-value count="1">Diesel Generator</facet-value><facet-value count="1">Integrator Function</facet-value><facet-value count="1">IPv6 Address</facet-value><facet-value count="1">Software Define Network</facet-value><facet-value count="1">Wireless Mesh Networking</facet-value></facet><facet name="pub"><facet-value count="1">Rethinking the Internet of Things</facet-value></facet><facet name="year"><facet-value count="1">2013</facet-value></facet><facet name="country"><facet-value count="1">United States</facet-value></facet><facet name="type"><facet-value count="1">Book</facet-value></facet></facets></response>
