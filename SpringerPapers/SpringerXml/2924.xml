<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="/resources/spdi-openaccess-jats.xsl"?>
<!DOCTYPE response [
	
<!ENTITY % article SYSTEM "http://jats.nlm.nih.gov/archiving/1.2/JATS-archivearticle1.dtd">
<!ENTITY % book-part-wrapper SYSTEM "http://jats.nlm.nih.gov/extensions/bits/2.0/BITS-book2.dtd">
	]><response><apiMessage>This XML was provided by Springer Nature</apiMessage><query>doi:10.1186/s13638-015-0490-3</query><apiKey>87ba7cb21f89ce78154df796840621f4</apiKey><result><total>1</total><start>1</start><pageLength>2</pageLength><recordsDisplayed>1</recordsDisplayed></result><records><article dtd-version="1.2" article-type="research-article" xml:lang="en" specific-use="web-only" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="publisher-id">13638</journal-id><journal-id journal-id-type="doi">10.1007/13638.1687-1499</journal-id><journal-title-group><journal-title>EURASIP Journal on Wireless Communications and Networking</journal-title><abbrev-journal-title abbrev-type="publisher">J Wireless Com Network</abbrev-journal-title></journal-title-group><issn pub-type="epub">1687-1499</issn><publisher><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Cham</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">s13638-015-0490-3</article-id><article-id pub-id-type="manuscript">490</article-id><article-id pub-id-type="doi">10.1186/s13638-015-0490-3</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group><subj-group subj-group-type="article-collection" specific-use="SubjectSection"><subject>Energy Harvesting Wireless Communications</subject></subj-group></article-categories><title-group><article-title xml:lang="en">Energy-aware task allocation for energy harvesting sensor networks</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>Edalat</surname><given-names>Neda</given-names></name><address><email>neda@u.nus.edu</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="corresp" rid="IDs1363801504903_cor1">a</xref></contrib><contrib contrib-type="author"><name><surname>Motani</surname><given-names>Mehul</given-names></name><address><email>motani@nus.edu.sg</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.4280.e</institution-id><institution-id institution-id-type="ISNI">0000000121806431</institution-id><institution content-type="org-division">Department of Electrical and Computer Engineering</institution><institution content-type="org-name">National University of Singapore</institution></institution-wrap><addr-line content-type="city">Singapore</addr-line><country country="SG">Singapore</country></aff></contrib-group><author-notes><corresp id="IDs1363801504903_cor1"><label>a</label><email>neda@u.nus.edu</email></corresp></author-notes><pub-date date-type="pub" publication-format="electronic"><day>23</day><month>1</month><year>2016</year></pub-date><pub-date date-type="collection" publication-format="electronic"><month>12</month><year>2016</year></pub-date><volume>2016</volume><issue seq="28">1</issue><elocation-id>28</elocation-id><history><date date-type="registration"><day>1</day><month>12</month><year>2015</year></date><date date-type="received"><day>23</day><month>9</month><year>2014</year></date><date date-type="accepted"><day>1</day><month>12</month><year>2015</year></date><date date-type="online"><day>23</day><month>1</month><year>2016</year></date></history><permissions><copyright-statement content-type="compact">© Edalat and Motani. 2015</copyright-statement><copyright-year>2015</copyright-year><copyright-holder>Edalat and Motani.</copyright-holder><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link xlink:href="http://creativecommons.org/licenses/by/4.0/" ext-link-type="uri">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made.</license-p></license></permissions><abstract xml:lang="en" id="Abs1"><title>Abstract</title><p>Ambient energy harvesting is a solution to mitigate the typical finite energy supply of sensor nodes in wireless sensor networks (WSNs). On the one hand, the uncertainty of energy availability in energy harvesting systems makes network protocol design challenging. On the other hand, the fact that energy is continuously replenished opens up avenues for protocol design based on prediction of future energy arrivals. One of the key application scenarios for sensor networks is task allocation, in which a central entity allocates tasks to a set of geographically distributed sensor nodes to accomplish an overall objective. In this work, we consider a scenario in which the sensor nodes are equipped with devices capable of harvesting ambient energy, e.g., solar panels to harvest the Sun’s energy, and focus on energy-aware strategies for adaptive task allocation. We decompose the static task allocation problem into two phases: scheduling of the task graph and task mapping to the appropriate sensor nodes. The solution objectives are to minimize the makespan and maximize the fairness in energy-driven task mapping (i.e., energy-balancing), while satisfying the task precedence constraints and energy harvesting causality constraints. We employ a novel energy prediction model which incorporates seasonal changes in solar energy harvesting as well as sudden weather changes. In case of an error in available energy prediction, a dynamic adaptation phase runs to avoid violation of the task allocation objectives. The performance of our proposed algorithms, in terms of energy-balancing and scheduling length, is evaluated through simulation and compared with other approaches, including a genetic algorithm as a baseline. We achieve more balanced residual energy levels across the network while attaining a near optimum scheduling length. By utilizing the dynamic adaptation phase, for certain runs of simulation, the missing ratio, which is the percentage of times in which the task allocation fails due to a temporal shortage of energy availability, is dramatically decreased.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Energy harvesting wireless sensor networks (EH-WSNs)</kwd><kwd>Task allocation algorithms</kwd><kwd>Solar-powered sensor nodes</kwd><kwd>Energy harvesting prediction</kwd></kwd-group><custom-meta-group><custom-meta><meta-name>publisher-imprint-name</meta-name><meta-value>Springer</meta-value></custom-meta><custom-meta><meta-name>volume-issue-count</meta-name><meta-value>1</meta-value></custom-meta><custom-meta><meta-name>issue-article-count</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>issue-toc-levels</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>issue-pricelist-year</meta-name><meta-value>2016</meta-value></custom-meta><custom-meta><meta-name>issue-copyright-holder</meta-name><meta-value>The Author(s)</meta-value></custom-meta><custom-meta><meta-name>issue-copyright-year</meta-name><meta-value>2016</meta-value></custom-meta><custom-meta><meta-name>article-contains-esm</meta-name><meta-value>No</meta-value></custom-meta><custom-meta><meta-name>article-numbering-style</meta-name><meta-value>ContentOnly</meta-value></custom-meta><custom-meta><meta-name>article-registration-date-year</meta-name><meta-value>2015</meta-value></custom-meta><custom-meta><meta-name>article-registration-date-month</meta-name><meta-value>12</meta-value></custom-meta><custom-meta><meta-name>article-registration-date-day</meta-name><meta-value>1</meta-value></custom-meta><custom-meta><meta-name>article-toc-levels</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>toc-levels</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>volume-type</meta-name><meta-value>Regular</meta-value></custom-meta><custom-meta><meta-name>journal-product</meta-name><meta-value>ArchiveJournal</meta-value></custom-meta><custom-meta><meta-name>numbering-style</meta-name><meta-value>ContentOnly</meta-value></custom-meta><custom-meta><meta-name>article-grants-type</meta-name><meta-value>OpenChoice</meta-value></custom-meta><custom-meta><meta-name>metadata-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>abstract-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bodypdf-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bodyhtml-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bibliography-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>esm-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>online-first</meta-name><meta-value>false</meta-value></custom-meta><custom-meta><meta-name>pdf-file-reference</meta-name><meta-value>BodyRef/PDF/13638_2015_Article_490.pdf</meta-value></custom-meta><custom-meta><meta-name>pdf-type</meta-name><meta-value>Typeset</meta-value></custom-meta><custom-meta><meta-name>target-type</meta-name><meta-value>OnlinePDF</meta-value></custom-meta><custom-meta><meta-name>issue-type</meta-name><meta-value>Regular</meta-value></custom-meta><custom-meta><meta-name>article-type</meta-name><meta-value>OriginalPaper</meta-value></custom-meta><custom-meta><meta-name>journal-subject-primary</meta-name><meta-value>Engineering</meta-value></custom-meta><custom-meta><meta-name>journal-subject-secondary</meta-name><meta-value>Signal,Image and Speech Processing</meta-value></custom-meta><custom-meta><meta-name>journal-subject-secondary</meta-name><meta-value>Communications Engineering, Networks</meta-value></custom-meta><custom-meta><meta-name>journal-subject-secondary</meta-name><meta-value>Information Systems Applications (incl.Internet)</meta-value></custom-meta><custom-meta><meta-name>journal-subject-collection</meta-name><meta-value>Engineering</meta-value></custom-meta><custom-meta><meta-name>open-access</meta-name><meta-value>true</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1" sec-type="introduction"><title>Introduction</title><p>A sensor network, which is a network of collaborating embedded devices with capabilities of sensing, computing, and communicating, is used to run specific applications (such as target tracking and event detection). Energy is a most precious resource in running these applications [<xref ref-type="bibr" rid="CR1">1</xref>]. Hence, nodes will operate for a finite duration which implies a finite lifetime of the applications of interest or additional cost to regularly change batteries. An alternative technique is the use of energy harvesting as a source of powering sensor nodes. This ensures sustainable operation of such systems. However, the harvested energy is usually not sufficient to allow the sensor nodes to stay active all the time. Moreover, the time-varying availability of environmental energy results in dynamic changes of the system’s available energy. Therefore, the dynamic resource and task allocation for energy harvesting wireless sensor networks (EH-WSNs) are required, presenting a new set of problems in the area of networking and communication [<xref ref-type="bibr" rid="CR2">2</xref>].</p><p>In wireless sensor networks (WSNs), energy-aware task allocation algorithms deal with energy availability of batteries, which typically have a monotonically decreasing energy profile. However, in EH-WSNs, due to the fluctuating energy sources, the energy availability profile is uncertain, making task allocation a challenging problem.</p><p>Generally, two design considerations for energy harvesting systems are maximizing performance and ensuring energy-neutral operation. Energy-neutral operation means operating the network such that, at all times, the energy used is less than the harvested energy. Also, while ensuring energy-neutral operation, “what is the <italic>best performance</italic> level that can be achieved in a given harvesting environment?”</p><p>In this paper, we address the task allocation problem which allocates and schedules a set of tasks represented by a task graph to a set of geographically distributed sensor nodes to achieve an overall system objective. Such a scenario is depicted in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. We consider a scenario in which the sensor nodes are equipped with solar panels.
<fig id="Fig1"><label>Fig. 1</label><caption xml:lang="en"><p>An illustration of the task allocation problem. The task graph is shown, along with the mapping of tasks to nodes in the wireless sensor network</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig1_HTML.gif" id="MO1"/></fig></p><sec id="Sec2"><title>Related works</title><p>Many applications for energy harvesting sensor networks, such as structural health monitoring [<xref ref-type="bibr" rid="CR3">3</xref>], disaster recovery [<xref ref-type="bibr" rid="CR4">4</xref>], and health monitoring [<xref ref-type="bibr" rid="CR5">5</xref>], require real-time reliable network protocols and efficient task scheduling. In such networks, it is important to dynamically schedule node and network tasks based on the remaining energy and current energy intake, as well as predictions about future energy availability.</p><p>In the literature on task allocation for WSNs [<xref ref-type="bibr" rid="CR7">7</xref>–<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR13">13</xref>], given a directed acyclic graph (DAG) and initial available resources, the set of tasks is assigned to sensor nodes based on a known static energy model. However, the time-varying nature of EH-WSNs brings new considerations for energy model and designing task allocation schemes.</p><p>There is some existing work on resource management for real-time energy harvesting embedded systems in the literature. In some works, such as [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>], dynamic voltage scaling policies are used to reduce the energy consumption; however, they may violate the scheduling length constraint for the case of task allocation to the multiple sensor nodes. In [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR17">17</xref>], the authors constructed lazy scheduling algorithms (LSA), which are energy-clairvoyant, i.e., the energy generated in the future is known. Lazy scheduling algorithms can be categorized as non-work conserving scheduling disciplines where a lazy scheduler may be idle although waiting tasks are ready to be processed. Moreover, there is an assumption that tasks are independent from each other and preemptive. More precisely, the currently active task may be preempted at any time and have its execution resumed later, at no additional cost. Also, since LSA is only based on a “as late as possible” heuristic, it is more likely that the battery overflows from harvested energy which results in missed-recharging opportunities. Moreover, the abovementioned works mainly focused on the task allocation to a single processor with the energy harvesting capability but not on the allocation of a task graph with precedence constraints to multiple nodes.</p><p>The most closely related works are [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR11">11</xref>]. The work in [<xref ref-type="bibr" rid="CR10">10</xref>] proposes a dynamic energy-oriented scheduling algorithm. By conducting decomposition, combination, concurrent execution, and admission control, their proposed method allocates tasks based on the dynamically changed available energy. The work in [<xref ref-type="bibr" rid="CR11">11</xref>] presents a distributed mission assignment scheme for wireless sensor nodes with rechargeable batteries.</p><p>Our approach differs from these works in two ways. First, the problem we address is energy harvesting aware task allocation at the network level, i.e., how to assign nodes in the network to the tasks from the task graph with precedence constraints. Such problem is quite different from the task allocation problem tackled by those works, which instead focus on individual task scheduling at the node level. Second, they maximize the network profit within a given time horizon, rather than enabling the network to operate perennially.</p><p>In this paper, we propose task allocation algorithms to deal with these issues. These algorithms account for the energy harvesting characteristics of sensor nodes (i.e., uncertainty in energy availability) and make the best use of available energy. The solution objectives are to minimize the scheduling length of the task graph and maximize the fairness in energy-driven task mapping, while satisfying energy harvesting causality constraints and the task precedence constraints. The fairness in task mapping means tasks with longer task lengths are assigned to the nodes with higher energy levels. The proposed solution results in the balanced energy levels among all the nodes in the network and minimum schedule length.</p></sec><sec id="Sec3"><title>Contributions of this paper</title><p>In this paper, we propose the task allocation algorithms for EH-WSNs. The main contributions of this work are summarized as follows: 
<list list-type="bullet"><list-item><p>We propose a novel task allocation algorithm for energy harvesting wireless sensor networks that operates in two phases: task scheduling of DAG and task mapping to the solar-powered sensor nodes. To the best of our knowledge, this is the first work on energy harvesting aware task allocation <italic>to multiple solar-powered sensor nodes</italic>.</p></list-item><list-item><p>The problem is formulated in an optimization framework as an integer linear program. The proposed framework for our scheme is operated in two stages consisting of static and dynamic adaptation specialized for energy harvesting systems.</p></list-item><list-item><p>An appropriate energy prediction model and algorithm are incorporated to increase the accuracy of our task allocation scheme.</p></list-item><list-item><p>A genetic algorithm based multi-objective task allocation strategy has been implemented for the comparison purpose.</p></list-item><list-item><p>The performance of our proposed algorithms in terms of the scheduling length and fairness in the energy-driven task mapping objectives is evaluated through simulation.</p></list-item></list></p><p>This paper is structured as follows. In Section <xref rid="Sec4" ref-type="sec">2</xref>, we introduce the system overview considering the task and application model, prediction model, and proposed framework for our task allocation scheme in EH-WSNs. This is followed by the problem formulation in the form of integer linear programming in Section <xref rid="Sec7" ref-type="sec">4</xref>. In Sections <xref rid="Sec10" ref-type="sec">5</xref> and <xref rid="Sec15" ref-type="sec">6</xref>, the energy harvesting aware task scheduling and mapping algorithms are described. The simulation results are discussed in Section <xref rid="Sec16" ref-type="sec">7</xref>. Section <xref rid="Sec20" ref-type="sec">8</xref> provides a summary and conclusion.</p></sec></sec><sec id="Sec4"><title>System overview</title><p>In this section, the model for the task allocation problem in EH-WSNs is explained. Figure <xref rid="Fig2" ref-type="fig">2</xref> shows the overall structure of this model. The centralized manager collects some initial data from the energy harvesting source. It then runs the energy prediction algorithms. Given the predicted energy and the task graph from WSNs’ application, the task allocation algorithm can be run. The output of this algorithm is the set of actions for sensor nodes. The main objective is to minimize the scheduling length of the task graph and maximize the lifetime of the sensor nodes. We assume the communication among the centralized manager and sensor nodes is done in most energy-efficient way such that this communication can be ignored.
<fig id="Fig2"><label>Fig. 2</label><caption xml:lang="en"><p>Structure of resource management for EH-WSNs</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig2_HTML.gif" id="MO2"/></fig></p><p>We consider a discrete time model. The network consists of multiple solar-powered sensor nodes denoted as <inline-formula id="IEq1"><alternatives><mml:math id="IEq1_Math"><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi></mml:math><tex-math id="IEq1_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$n \in \mathcal {N}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq1.gif"/></alternatives></inline-formula> where <inline-formula id="IEq2"><alternatives><mml:math id="IEq2_Math"><mml:mi mathvariant="script">N</mml:mi></mml:math><tex-math id="IEq2_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {N}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq2.gif"/></alternatives></inline-formula> is a set of all available sensor nodes. Tasks are units of execution that make up an application. The application for wireless sensor networks can be target tracking, event detection, etc. A single application may perform a variety of tasks such as sensing, computation, storage, and communication. Applications are represented by a DAG, composed of all tasks <inline-formula id="IEq3"><alternatives><mml:math id="IEq3_Math"><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi></mml:math><tex-math id="IEq3_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$m \in \mathcal {M}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq3.gif"/></alternatives></inline-formula> where <inline-formula id="IEq4"><alternatives><mml:math id="IEq4_Math"><mml:mi mathvariant="script">ℳ</mml:mi></mml:math><tex-math id="IEq4_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {M}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq4.gif"/></alternatives></inline-formula> is the set of tasks that must be completed for the application. <italic>L</italic><sub><italic>m</italic></sub> denotes the size of the task <italic>m</italic> which refers to the number of time slots required to accomplish that task (<inline-formula id="IEq5"><alternatives><mml:math id="IEq5_Math"><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi>ℤ</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:math><tex-math id="IEq5_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$L_{m} \in \mathbb {Z^{+}}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq5.gif"/></alternatives></inline-formula>). Tasks must be sequentially executed to satisfy the precedence constraints. A task has one or more inputs and once all inputs are available, the task is triggered to execute.</p><p>The harvesting period is divided into equal-length time slots which are indexed as <inline-formula id="IEq6"><alternatives><mml:math id="IEq6_Math"><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:math><tex-math id="IEq6_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$t \in \mathcal {T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq6.gif"/></alternatives></inline-formula> where <inline-formula id="IEq7"><alternatives><mml:math id="IEq7_Math"><mml:mi mathvariant="script">T</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi>ℤ</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:math><tex-math id="IEq7_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {T} \in \mathbb {Z^{+}}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq7.gif"/></alternatives></inline-formula>. We consider an energy storage device with capacity <italic>B</italic> and discharge efficiency <italic>η</italic><sub><italic>d</italic></sub>&lt;1. <inline-formula id="IEq8"><alternatives><mml:math id="IEq8_Math"><mml:msubsup><mml:mrow><mml:mi mathvariant="script">ℋ</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq8_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {H}^{n}_{t}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq8.gif"/></alternatives></inline-formula> is the amount of harvested energy in slot <italic>t</italic> in node <italic>n</italic>. The available energy at each node <italic>n</italic> and time slot <italic>t</italic> is denoted as <inline-formula id="IEq9"><alternatives><mml:math id="IEq9_Math"><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq9_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}^{n}_{t}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq9.gif"/></alternatives></inline-formula> and calculated as 
<disp-formula id="Equa"><alternatives><mml:math id="Equa_Math"><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mspace width="0.3em"/><mml:msubsup><mml:mrow><mml:mfenced close="]" open="[" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">ℋ</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>η</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi>.</mml:mi><mml:msubsup><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mrow></mml:math><tex-math id="Equa_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \mathcal{A}^{n}_{t+1}=\, \left[\mathcal{A}^{n}_{t} + \mathcal{H}^{n}_{t} - \eta_{d}.E_{0}.Y^{m,n}_{t}\right]^{B}_{0}, $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equa.gif"/></alternatives></disp-formula> where <italic>E</italic><sub>0</sub> denotes the energy which is drained from the battery during each busy slot. <italic>E</italic><sub>0</sub> is assumed to be constant for each node and task. <inline-formula id="IEq10"><alternatives><mml:math id="IEq10_Math"><mml:msubsup><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq10_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$Y^{m,n}_{t}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq10.gif"/></alternatives></inline-formula> is a boolean function indicating whether node <italic>n</italic> is busy with task <italic>m</italic> in time slot <italic>t</italic>. The available energy is bounded by the capacity of battery <italic>B</italic>.</p><sec id="Sec5"><title>Framework of task allocation in EH-WSNs</title><p>In this part, the framework of our proposed task allocation scheme for EH-WSNs is described. It is a hybrid framework of static and dynamic stages.</p><p>The static stage is executed <italic>offline</italic> in the centralized manager which can be a node with the high computational capability such as Stargate (<ext-link xlink:href="http://platformx.sourceforge.net/home.html" ext-link-type="uri">http://platformx.sourceforge.net/home.html</ext-link>). In this stage, the centralized manager runs the prediction algorithm to extrapolate information about the harvested energy in the next harvesting period. It then allocates an energy budget in terms of the harvesting rate for each time slot of the next period. The predicted information and the task graph are the inputs to our static allocation algorithm. The allocation outcomes and energy budget for each slots are then communicated to sensor nodes.</p><p>The dynamic stage is executed <italic>online</italic> in the sensor nodes. This stage may modify the real-time execution of the task allocations from the previous stage to adapt to unpredictable fluctuation in energy availability. At the beginning of each time slot, the corresponding energy budget is retrieved from the memory and is compared with the corresponding baseline error margin. If the energy budgets from the prediction do not match with actual harvested energy and the error margin is higher than the predefined threshold, then the dynamic adaptation method is executed. Adaptation allows the system to cope with variation in renewable energy source and maintain sustainable operation. Moreover, energy harvesting statistics are sent to the centralized manager to update the data for the energy harvesting prediction for the next harvesting period.</p></sec></sec><sec id="Sec6"><title>Prediction algorithm</title><p>In this section, the energy harvesting prediction method is described. An accurate prediction of the near-future harvested energy has a critical effect on decision-making for task allocation procedure in energy harvesting systems. A time series [<xref ref-type="bibr" rid="CR22">22</xref>] is a sequence of observations of a random variable such as energy harvesting rate. A time series analysis provides a proper tool for forecasting future events. There are several methods for forecasting the near future of real data such as regression analysis, exponential smoothing, and moving average [<xref ref-type="bibr" rid="CR22">22</xref>]. Weather-conditioned moving average (WCMA) is the common approach adopted for the weather prediction. It first introduced in [<xref ref-type="bibr" rid="CR19">19</xref>] and then extended for cloud cover case and wind energy prediction in [<xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR21">21</xref>]. Our prediction model called autoregressive weather-conditioned moving average (AR-WCMA) has its foundation on WCMA which is a low overhead solar energy prediction algorithm. The key idea of our prediction model is to apply an autoregressive (AR) time series model at the beginning of each day, since the sun irradiance is a periodic phenomena. It has been proven in [<xref ref-type="bibr" rid="CR23">23</xref>] that a simple linear regression model is an appropriate model for real-time and random data. Then, the model is further improved by utilizing the moving average of the information from past days.</p><p>For this prediction algorithm, a day is divided into <italic>T</italic> equal duration of time slots. The power sampling and prediction are performed once per slot. To predict the harvesting energy in the next slot, the algorithm uses the values of power measurement <inline-formula id="IEq11"><alternatives><mml:math id="IEq11_Math"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mtext mathvariant="italic">E</mml:mtext></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq11_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {e}(j) \in \tilde {\textit {E}}_{T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq11.gif"/></alternatives></inline-formula> of the current day. It also utilizes the values of power measurement <inline-formula id="IEq12"><alternatives><mml:math id="IEq12_Math"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>×</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq12_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {e}(i, j)\in \tilde {E}_{D \times T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq12.gif"/></alternatives></inline-formula> of the last <italic>D</italic> days, <inline-formula id="IEq13"><alternatives><mml:math id="IEq13_Math"><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi>ℤ</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:math><tex-math id="IEq13_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$D \in \mathbb {Z^{+}}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq13.gif"/></alternatives></inline-formula>. The unit of power measurements and accordingly the prediction values are irradiance (<italic>W</italic>/<italic>m</italic><sup>2</sup>). The matrix <inline-formula id="IEq14"><alternatives><mml:math id="IEq14_Math"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>D</mml:mi><mml:mo>×</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq14_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {E}_{D \times T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq14.gif"/></alternatives></inline-formula> and the vector <inline-formula id="IEq15"><alternatives><mml:math id="IEq15_Math"><mml:msub><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq15_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {E}_{T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq15.gif"/></alternatives></inline-formula> are shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. Assume that <italic>t</italic> slots have elapsed on the current day shown shaded in Fig. <xref rid="Fig3" ref-type="fig">3</xref> and <inline-formula id="IEq16"><alternatives><mml:math id="IEq16_Math"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:math><tex-math id="IEq16_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {e}(t+1)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq16.gif"/></alternatives></inline-formula> is the estimation of the power value at the start of slot <italic>t</italic>+1.
<fig id="Fig3"><label>Fig. 3</label><caption xml:lang="en"><p>Prediction framework for solar-powered sensor nodes</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig3_HTML.gif" id="MO3"/></fig></p><p>The time series analysis begins with some response measurements of the structure at a particular sensor location. Assuming the response to be stationary, an AR process model is used to fit the discrete measurement data to a set of linear coefficients from past time history observations as follows: 
<disp-formula id="Equ1"><label>(1)</label><alternatives><mml:math id="Equ1_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ1_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \tilde{e}(t+1)=\sum_{i=1}^{k} b_{i} \tilde{e}(t+1-i)+r_{k}.  \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ1.gif"/></alternatives></disp-formula></p><p>The response of the structure at sample index <italic>t</italic>, as denoted by <inline-formula id="IEq17"><alternatives><mml:math id="IEq17_Math"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math><tex-math id="IEq17_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {e}(t)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq17.gif"/></alternatives></inline-formula>, is a function of <italic>k</italic> previous observations of the system response, plus a residual constant term, <italic>r</italic><sub><italic>k</italic></sub>. Weights of the previous observations <inline-formula id="IEq18"><alternatives><mml:math id="IEq18_Math"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:math><tex-math id="IEq18_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {e}(t+1-i)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq18.gif"/></alternatives></inline-formula> are denoted by the <italic>b</italic><sub><italic>i</italic></sub> coefficients which are calculated daily based on the available information of last <italic>D</italic> days.</p><p>The goal is to predict the power <inline-formula id="IEq19"><alternatives><mml:math id="IEq19_Math"><mml:mi>ê</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:math><tex-math id="IEq19_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\hat {e}(t+1)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq19.gif"/></alternatives></inline-formula> at the beginning of slot <italic>t</italic>+1 (marked with a “?” in Fig. <xref rid="Fig3" ref-type="fig">3</xref>). In Fig. <xref rid="Fig3" ref-type="fig">3</xref>, <italic>μ</italic>(<italic>t</italic>+1) represents average of power measured at beginning of all <italic>t</italic>+1 slots for last <italic>D</italic> days. The predicted power for the next slot considers the power measurement from the present information of last <italic>k</italic> slots <inline-formula id="IEq20"><alternatives><mml:math id="IEq20_Math"><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo></mml:math><tex-math id="IEq20_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\tilde {e}(t+1)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq20.gif"/></alternatives></inline-formula> and the average power <italic>μ</italic>(<italic>t</italic>+1) of the same slot (<italic>t</italic>+1) for past <italic>D</italic> days: 
<disp-formula id="Equ2"><label>(2)</label><alternatives><mml:math id="Equ2_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:mi>ê</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>α.</mml:mi><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mo>)</mml:mo><mml:mi>.</mml:mi><mml:msub><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>)</mml:mo><mml:msub><mml:mrow><mml:mi>Φ</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ2_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \hat{e}(t+1)=\alpha. \tilde{e}(t+1)+(1-\alpha). \mu_{D}(t+1)\Phi_{K}.  \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ2.gif"/></alternatives></disp-formula></p><p>The prediction algorithm consists of two terms as shown in (<xref rid="Equ2" ref-type="disp-formula">2</xref>). The first term is the effect of the AR, and the latter one is the conditioned average term. The AR term determines the effect of the current day to the predicted value, while the conditioned average term is the average of past <italic>D</italic> days on time slot (<italic>t</italic>+1) which scaled by the conditioning factor <italic>Φ</italic><sub><italic>K</italic></sub>. The parameter <italic>α</italic> shows the trade-off between these two terms (0≤<italic>α</italic>≤1).</p><p>In (<xref rid="Equ2" ref-type="disp-formula">2</xref>), <italic>μ</italic><sub><italic>D</italic></sub>(<italic>j</italic>) is the average of power measured at beginning of slots <italic>j</italic> in the past <italic>D</italic> days: 
<disp-formula id="Equ3"><label>(3)</label><alternatives><mml:math id="Equ3_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msub><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:munderover><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ3_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \mu_{D}(j)=\frac{\sum_{i=1}^{D}e(i,j)}{D}  \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ3.gif"/></alternatives></disp-formula></p><p><italic>Φ</italic><sub><italic>K</italic></sub> is a conditioning factor for <italic>μ</italic>(<italic>t</italic>+1), and it is a function of previous <italic>K</italic> (<inline-formula id="IEq21"><alternatives><mml:math id="IEq21_Math"><mml:mtext mathvariant="italic">K</mml:mtext><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi>ℤ</mml:mi></mml:mrow><mml:mrow><mml:mo>+</mml:mo></mml:mrow></mml:msup></mml:math><tex-math id="IEq21_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\textit {K}\in \mathbb {Z}^{+}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq21.gif"/></alternatives></inline-formula>) time slots before time slot (<italic>t</italic>+1) of current day (can be seen in Fig. <xref rid="Fig3" ref-type="fig">3</xref>). <italic>Φ</italic><sub><italic>K</italic></sub> shows how much brighter or cloudy the current day is compared to previous days. It is calculated using (<xref rid="Equ4" ref-type="disp-formula">4</xref>), which is a weighted average of ratio <italic>η</italic>(<italic>K</italic>)∈<italic>H</italic><sub><italic>k</italic></sub>, (shown in (<xref rid="Equ5" ref-type="disp-formula">5</xref>)), where each ratio <italic>η</italic>(<italic>k</italic>) compares the current day measured power of one particular slot to the average of the past days. Since the slots earlier than <italic>t</italic> are assumed to be less correlated to the future slot <italic>t</italic>+1, the weights <italic>θ</italic>(<italic>k</italic>)∈<italic>Θ</italic> calculated in <xref rid="Equ6" ref-type="disp-formula">6</xref> decrease from 1 to 1/<italic>K</italic> starting at the slot <italic>t</italic>. 
<disp-formula id="Equ4"><label>(4)</label><alternatives><mml:math id="Equ4_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msub><mml:mrow><mml:mi>Φ</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>Θ</mml:mi></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi>T</mml:mi></mml:mrow></mml:msup><mml:mi>.</mml:mi><mml:msub><mml:mrow><mml:mtext mathvariant="italic">H</mml:mtext></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>K</mml:mi></mml:mrow></mml:munderover><mml:mi>θ</mml:mi><mml:mo>(</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ4_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \Phi_{K}=\frac{\left(\Theta_{K}\right)^{T}.\textit{H}_{K}}{\sum_{k=1}^{K}\theta(k)}  \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ4.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ5"><label>(5)</label><alternatives><mml:math id="Equ5_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:mi>η</mml:mi><mml:mo>(</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>−</mml:mo><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ5_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \eta(k)=\frac{\tilde{e}(t-K+k)}{\mu_{D}(t-K+k)}  \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ5.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ6"><label>(6)</label><alternatives><mml:math id="Equ6_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:mi>θ</mml:mi><mml:mo>(</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>/</mml:mo><mml:mi>K</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ6_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \theta(k)=k/K  \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ6.gif"/></alternatives></disp-formula></p><p>The estimated value <inline-formula id="IEq22"><alternatives><mml:math id="IEq22_Math"><mml:mi>ê</mml:mi><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:math><tex-math id="IEq22_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\hat {e}(t)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq22.gif"/></alternatives></inline-formula> in following sections are denoted as <inline-formula id="IEq23"><alternatives><mml:math id="IEq23_Math"><mml:msub><mml:mrow><mml:mi mathvariant="script">ℋ</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq23_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {H}_{t}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq23.gif"/></alternatives></inline-formula>. All measurements and estimations are in irradiance unit (<italic>W</italic>/<italic>m</italic><sup>2</sup>) which can be converted to the energy unit <italic>Ah</italic>. The details are explained in the simulation section.</p></sec><sec id="Sec7"><title>Problem formulation</title><p>In this section, we explain the problem formulation for the task allocation in sensor networks equipped with energy harvesting devices. Task allocation problem which consists of task scheduling and mapping plays an essential role in parallel processing. Solving this problem results in execution sequence of tasks and assignment of tasks to the sensor nodes. The main objectives are to minimize the makespan and maximize the fairness (energy-balancing), while satisfying the task precedence constraints and energy harvesting causality constraints.</p><sec id="Sec8"><title>Decision variables</title><p>The decision variable for this problem is defined as follows: <italic>X</italic>: valid mapping and scheduling of tasks <inline-formula id="IEq24"><alternatives><mml:math id="IEq24_Math"><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi></mml:math><tex-math id="IEq24_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$m \in \mathcal {M}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq24.gif"/></alternatives></inline-formula> to the sensor nodes <inline-formula id="IEq25"><alternatives><mml:math id="IEq25_Math"><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi></mml:math><tex-math id="IEq25_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$n\in \mathcal {N}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq25.gif"/></alternatives></inline-formula> at time slot <inline-formula id="IEq26"><alternatives><mml:math id="IEq26_Math"><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:math><tex-math id="IEq26_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$t \in \mathcal {T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq26.gif"/></alternatives></inline-formula>: 
<disp-formula id="Equ7"><label>(7)</label><alternatives><mml:math id="Equ7_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mspace width="1em"/><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if task</mml:mtext><mml:mspace width="1em"/><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi><mml:mspace width="1em"/><mml:mtext>is assigned to sensor</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>node</mml:mtext><mml:mspace width="1em"/><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mspace width="1em"/><mml:mtext>at time slot</mml:mtext><mml:mspace width="1em"/><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ7_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \small X_{t}^{m,n}=~\left\{ \begin{array}{ll} \small 1, &amp; \text{if task}\ m \in \mathcal{M}\ \text{is assigned to sensor}\\ &amp; \text{node}\ n \in \mathcal{N}\ \text{at time slot} \ t \in \mathcal{T} \\ 0, &amp; \text{otherwise.} \end{array}\right. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ7.gif"/></alternatives></disp-formula></p><p>Although, we have one decision variable, it is useful to define the following quantities, which depend upon <italic>X</italic>. <italic>S</italic><sup><italic>m</italic></sup>: start time slot of scheduled task <inline-formula id="IEq27"><alternatives><mml:math id="IEq27_Math"><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi></mml:math><tex-math id="IEq27_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$m \in \mathcal {M}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq27.gif"/></alternatives></inline-formula>. It can be calculated as follows: 
<disp-formula id="Equ8"><label>(8)</label><alternatives><mml:math id="Equ8_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>arg</mml:mo><mml:mspace width="0.3em"/><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munder><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:munderover><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ8_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} S_{m}=\arg\!\max_{t} \left(\max_{n} X_{t}^{m,n}\right) \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ8.gif"/></alternatives></disp-formula></p><p><italic>Y</italic>: an indicator function to show the busy time slot. 
<disp-formula id="Equ9"><label>(9)</label><alternatives><mml:math id="Equ9_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mspace width="1em"/><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if node</mml:mtext><mml:mspace width="1em"/><mml:mi>n</mml:mi><mml:mspace width="1em"/><mml:mtext>is busy with task</mml:mtext><mml:mspace width="1em"/><mml:mi>m</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>at time slot</mml:mtext><mml:mspace width="1em"/><mml:mi>t</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ9_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \small Y_{t}^{m,n}=~\left\{ \begin{array}{ll} 1, &amp; \text{if node}\ n\ \text{is busy with task}\ m\\ &amp; \text{at time slot}\ t\\ 0, &amp; \text{otherwise.} \end{array}\right. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ9.gif"/></alternatives></disp-formula></p><p>This value can be calculated as a function of <italic>S</italic><sub><italic>m</italic></sub> and <inline-formula id="IEq28"><alternatives><mml:math id="IEq28_Math"><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq28_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$X_{t}^{m,n}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq28.gif"/></alternatives></inline-formula> as follows: 
<disp-formula id="Equ10"><label>(10)</label><alternatives><mml:math id="Equ10_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mspace width="1em"/><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>;</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mo>arg</mml:mo><mml:mspace width="0.3em"/><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munder><mml:munderover><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ10_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \small Y_{t}^{m,n}=~\left\{ \begin{array}{ll} 1, &amp; t=S_{m}, S_{m}+1, \ldots, (S_{m}+L_{m});\\ &amp;\forall~n= \arg\!\max_{m}\max_{t} X_{t}^{m,n} \\ 0, &amp; \text{otherwise.} \end{array}\right. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ10.gif"/></alternatives></disp-formula></p></sec><sec id="Sec9"><title>Objective function and constraints</title><p>The following objective function and linear-integer constraints describe the optimization problem to be solved in order to compute an optimal task allocation. 
<disp-formula id="Equ11"><label>(11)</label><alternatives><mml:math id="Equ11_Math"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:munder><mml:mrow><mml:mo>min</mml:mo></mml:mrow><mml:mrow><mml:mi>X</mml:mi></mml:mrow></mml:munder><mml:mspace width="1em"/><mml:mspace width="1em"/></mml:mtd><mml:mtd class="align-2"><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mi>.</mml:mi><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ11_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l}  \min_{X}~~&amp; w_{1} \left(\max_{m \in M}(S_{m}+L_{m}) \right) + w_{2} \sum_{ \begin{array}{ll} &amp; t \in \mathcal{T} \\ &amp; n \in \mathcal{N} \\ &amp; m \in \mathcal{M} \end{array}} g_{t}^{m,n}. X_{t}^{m,n} \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ11.gif"/></alternatives></disp-formula></p><p>Subject to: 
<disp-formula id="Equ12"><label>(12)</label><alternatives><mml:math id="Equ12_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mo>(</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>P</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ12_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}  S_{k}\geq S_{j}+ L_{j}+T_{c},~~~~\forall (j,k)\in \mathcal{M},~P_{j,k}&gt;0. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ12.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ13"><label>(13)</label><alternatives><mml:math id="Equ13_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>}</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ13_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}  X^{m,n}_{t} \in \{0,1\}~~~ \forall n \in \mathcal{N},~~\forall m \in \mathcal{M},~~\forall t \in \mathcal{T}. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ13.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ14"><label>(14)</label><alternatives><mml:math id="Equ14_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ.</mml:mi><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ14_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}  \sum_{t\in T} \sum_{n\in N}X_{t}^{m,n}= 1, ~~~~ \forall m \in \mathcal{M}.~~~~ \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ14.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ15"><label>(15)</label><alternatives><mml:math id="Equ15_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>≤</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T.</mml:mi><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/><mml:mspace width="1em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ15_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}  \sum_{m\in M}Y_{t}^{m,n} \leq 1, ~~~~ \forall n \in \mathcal{N}~~\forall t \in \mathcal{T}.~~~~ \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ15.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ16"><label>(16)</label><alternatives><mml:math id="Equ16_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mspace width="0.3em"/><mml:msubsup><mml:mrow><mml:mo>[</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi mathvariant="script">ℋ</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>η</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mi>.</mml:mi><mml:msubsup><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mn>0</mml:mn></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mo>∀</mml:mo><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ16_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}  {}\mathcal{A}^{n}_{t+1}=\,[ \mathcal{A}^{n}_{t} + \mathcal{H}^{n}_{t} - \eta_{d}.E_{0}.Y^{m,n}_{t}]^{B}_{0}, \forall n \in \mathcal{N}, \forall t \in \mathcal{T}. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ16.gif"/></alternatives></disp-formula></p><p>where <italic>T</italic><sub><italic>c</italic></sub> is the communication cost between immediate tasks precedence. <inline-formula id="IEq29"><alternatives><mml:math id="IEq29_Math"><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq29_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$g_{t}^{m,n}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq29.gif"/></alternatives></inline-formula> is the cost associated with assigning task <inline-formula id="IEq30"><alternatives><mml:math id="IEq30_Math"><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi></mml:math><tex-math id="IEq30_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$m \in \mathcal {M}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq30.gif"/></alternatives></inline-formula> to sensor node <inline-formula id="IEq31"><alternatives><mml:math id="IEq31_Math"><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi></mml:math><tex-math id="IEq31_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$n \in \mathcal {N}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq31.gif"/></alternatives></inline-formula>, at time slot <inline-formula id="IEq32"><alternatives><mml:math id="IEq32_Math"><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:math><tex-math id="IEq32_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$t \in \mathcal {T}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq32.gif"/></alternatives></inline-formula>. This cost value is a linear function of <inline-formula id="IEq33"><alternatives><mml:math id="IEq33_Math"><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq33_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}_{t}^{n}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq33.gif"/></alternatives></inline-formula> and task size <inline-formula id="IEq34"><alternatives><mml:math id="IEq34_Math"><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><tex-math id="IEq34_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left (L_{m}\right)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq34.gif"/></alternatives></inline-formula>. The cost function is defined as follows: 
<disp-formula id="Equ17"><label>(17)</label><alternatives><mml:math id="Equ17_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ17_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}  g_{t}^{m,n}=L_{m} \times \left(\mathcal{A}_{t}^{n}\right)^{-1}. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ17.gif"/></alternatives></disp-formula></p><p>The objective function shows the trade-off between the two task allocation objectives with weights <italic>w</italic><sub>1</sub> and <italic>w</italic><sub>2</sub>. The first part corresponds to minimizing the scheduling length by minimizing the maximum of the finish times of all the tasks. The second part relates to minimizing the task mapping cost in order to achieve a balanced energy availability through the network.</p><p>The constraint in (<xref rid="Equ12" ref-type="disp-formula">12</xref>) states the precedence constraint where a task cannot start until its predecessors are completed, and data has been communicated to it if the preceding job were executed on different node, illustrated as a constant value <italic>T</italic><sub><italic>c</italic></sub>. As stated before, <italic>L</italic><sub><italic>m</italic></sub> is the size of task <italic>m</italic>, which refers to the number of time slots required to accomplish that task.</p><p>The constraint in (<xref rid="Equ13" ref-type="disp-formula">13</xref>) refers to boolean task mapping constraint. (<xref rid="Equ14" ref-type="disp-formula">14</xref>) and (<xref rid="Equ15" ref-type="disp-formula">15</xref>) show task allocation constraints. More precisely, (<xref rid="Equ14" ref-type="disp-formula">14</xref>) specifies that each task must be assigned once to exactly one node and (<xref rid="Equ15" ref-type="disp-formula">15</xref>) specifies that at most one task can be assigned to each sensor node at each time slot. The constraint shown in (<xref rid="Equ16" ref-type="disp-formula">16</xref>) indicates the energy harvesting causality constraint. This constraint keeps track of energy availability at each time. Moreover, this constraint avoids the energy harvesting overflow at each node by considering the capacity of the battery (<italic>B</italic>) as an upper bound for energy availability.</p><p>Altogether, the task allocation problem for wireless sensor networks equipped with energy harvesting systems is described in the abovementioned objective function and constraints. This problem is NP-complete in general [<xref ref-type="bibr" rid="CR24">24</xref>], and heuristic algorithms are applied to obtain a practical solution. Our proposed heuristic approach is presented in the next section.</p></sec></sec><sec id="Sec10"><title>Proposed algorithm for task allocation in EH-WSNs</title><p>This section describes our solution approach for task allocation. The proposed scheme consists of a hybrid framework of static and dynamic stages. The static task allocation problem is divided into two phases. The first one is the task scheduling phase to determine the proper sequence of tasks. The main objective for the first phase is to minimize the scheduling length (shown in the first part of the objective function) and also satisfy the precedence constraint (<xref rid="Equ12" ref-type="disp-formula">12</xref>). This phase, which is explained in Section <xref rid="Sec11" ref-type="sec">5.1</xref>, results in the lower and upper bounds for the starting time of each task.</p><p>Given the bounds from the first phase, the second phase, explained in Section <xref rid="Sec12" ref-type="sec">5.2</xref>, runs the task mapping to the appropriate sensor nodes. The objective of the second phase is to maximize the energy-balancing among the nodes, considering the energy harvesting characteristics. It addresses the second part of the objective function as well as the constraints (<xref rid="Equ13" ref-type="disp-formula">13</xref>) to (<xref rid="Equ16" ref-type="disp-formula">16</xref>).</p><p>If the error margin, which is the difference between the energy predicted value and the actual harvested energy, is higher than some predefined thresholds, the dynamic adaptation stage (Section <xref rid="Sec13" ref-type="sec">5.3</xref>) is executed. Adaptation allows the system to cope with variation in renewable energy supply and maintain the system’s sustainability.</p><sec id="Sec11"><title>List scheduling and critical nodes path tree (CNPT) Heuristic</title><p>This part presents the list scheduling algorithm. It uses to satisfy the first constraint (<xref rid="Equ12" ref-type="disp-formula">12</xref>) while optimizing the first part of the objective function. It computes a task sequence provided by a DAG to obtain the earliest start time (EST) and the latest start time (LST) of each task considering a critical path (CP). A CP of a task graph is defined as a path with the maximum sum of node and edge weights from an entry node to an exit node. Given these values, the tasks are queued into a list. The EST and LST for a task <italic>i</italic> can be computed recursively by traversing the DAG downward from the entry node and upward from the exit node respectively as follows: 
<disp-formula id="Equ18"><label>(18)</label><alternatives><mml:math id="Equ18_Math"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:mtext mathvariant="italic">ES</mml:mtext><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd class="align-2"><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mtext>pred</mml:mtext><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mtext mathvariant="italic">ES</mml:mtext><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ18_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} EST_{m} &amp;= \max_{i \in \text{pred}(m)} { EST_{i} + L_{i}} \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ18.gif"/></alternatives></disp-formula></p><p><disp-formula id="Equ19"><label>(19)</label><alternatives><mml:math id="Equ19_Math"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:mtext mathvariant="italic">LS</mml:mtext><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd class="align-2"><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>min</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mtext>succ</mml:mtext><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mtext mathvariant="italic">LS</mml:mtext><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ19_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} LST_{m} &amp;= \min_{i \in \text{succ}(m)} { LST_{i} - L_{i} } \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ19.gif"/></alternatives></disp-formula></p><p>where pred(<italic>m</italic>) and succ(<italic>m</italic>) are the set of immediate predecessors and successors of <italic>m</italic> respectively and <italic>L</italic><sub><italic>i</italic></sub> is the length of the task <italic>i</italic>. After the listing phase, the task graph is sequentialized into a queue and ready for the task assignment phase. The main objective of this part of the scheduling process is to determine the minimum scheduling length (makespan) while satisfying all precedence constraints. The tasks are queued for assignment to sensor nodes based on LST. This is because it may give a sensor node the chance to harvest more energy before the task is assign to it.</p></sec><sec id="Sec12"><title>Energy harvesting aware task assignment heuristic</title><p>In this phase, the proposed heuristic algorithm assigns the tasks to maximize the energy-balancing considering the energy harvesting characteristics. It satisfies the energy-neutral constraint and avoids the energy overflows.</p><p>The following steps describe the basic idea of our proposed energy harvesting aware task allocation heuristic: 
<list list-type="bullet"><list-item><p>Step 1. Sort all the tasks based on <italic>LST</italic> from List Scheduling and CNPT in queue <inline-formula id="IEq35"><alternatives><mml:math id="IEq35_Math"><mml:mi mathvariant="script">Q</mml:mi></mml:math><tex-math id="IEq35_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {Q}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq35.gif"/></alternatives></inline-formula></p></list-item><list-item><p>Step 2. Update the energy availability <inline-formula id="IEq36"><alternatives><mml:math id="IEq36_Math"><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq36_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}^{n}_{t}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq36.gif"/></alternatives></inline-formula> of all nodes based on the predicted energy for the current slot</p></list-item><list-item><p>Step 3. For the task dequeued from queue <inline-formula id="IEq37"><alternatives><mml:math id="IEq37_Math"><mml:mi mathvariant="script">Q</mml:mi></mml:math><tex-math id="IEq37_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {Q}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq37.gif"/></alternatives></inline-formula>, calculate the cost associated with assigning the correspond task <italic>m</italic> to all sensor nodes <inline-formula id="IEq38"><alternatives><mml:math id="IEq38_Math"><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi></mml:math><tex-math id="IEq38_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$n \in \mathcal {N}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq38.gif"/></alternatives></inline-formula> at the current time slot <italic>t</italic> as 
<disp-formula id="Equb"><alternatives><mml:math id="Equb_Math"><mml:mrow><mml:msubsup><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math><tex-math id="Equb_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$C_{t}^{m,n}= g_{t}^{m,n} {a_{t}^{n}} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equb.gif"/></alternatives></disp-formula> where <inline-formula id="IEq39"><alternatives><mml:math id="IEq39_Math"><mml:msubsup><mml:mrow><mml:mi>g</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq39_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$g_{t}^{m,n}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq39.gif"/></alternatives></inline-formula> cab be calculated from (3.10). <inline-formula id="IEq40"><alternatives><mml:math id="IEq40_Math"><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:math><tex-math id="IEq40_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}${a_{t}^{n}}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq40.gif"/></alternatives></inline-formula> is an indicator defined as 
<disp-formula id="Equ20"><label>(20)</label><alternatives><mml:math id="Equ20_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mspace width="1em"/><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mn>0</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:msubsup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>≥</mml:mo><mml:mi>B</mml:mi><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mtext>node</mml:mtext><mml:mspace width="1em"/><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mspace width="1em"/><mml:mtext>at time slot</mml:mtext><mml:mspace width="1em"/><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">T</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ20_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \small {a_{t}^{n}}=~\left\{ \begin{array}{ll} \small 0, &amp; \mathcal{A}^{n}_{t} \geq B\forall \ \text{node}\ n\in \mathcal{N}\ \text{at time slot}\ t \in \mathcal{T}\\ 1, &amp; \text{otherwise.} \end{array}\right. \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ20.gif"/></alternatives></disp-formula></p><p>This indicators shows that the cost is zero if the overflow occurs at the node. Hence, we immediately allocate the first task from the queue to that node.</p></list-item></list></p><p>As a result, since the listing in the queue is based on <italic>LST</italic>, it increases the chance that the node can harvest enough energy and gains the failure tolerance. In the other word, the task scheduling is <italic>as late as possible</italic> but within a boundary that results in the minimum schedule length. Since the task mapping is based on the available energy, in “STEP 2” the available energy for each slot is updated. “STEP 3” assigns the task based on the cost associated with each node for accomplishing the corresponding task and handles the overflow situation when the harvested energy may become greater than the maximum capacity. The proposed algorithm is shown in <italic>Algorithm 1</italic>.</p><p><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Figa_HTML.gif" id="MO4"/></p><p>We briefly explain a potential extension of the current model to multi-hop scenario. In this case, a task <italic>i</italic> and its immediate predecessor task <italic>j</italic> might be allocated to nodes that are in one or more hops away of each other. Assume that <italic>j</italic> needs the data from <italic>i</italic> for execution. Hence, one needs to find the way to communicate this data through multi-hop. In WSNs, the communication is broadcast in nature. To represent the broadcast feature of wireless communication, the DAG representation of application is extended to Hyper-DAG. The weight of edges between two computation tasks is represented as a separate communication task. Unlike in single-hop networks, there might be multiple simultaneous communications in multi-hop networks. In order to schedule the communication task, one models multi-hop channel as a virtual node on which only the communication task can be scheduled. To avoid the interference between simultaneous communication tasks, one may consider the penalty of infinity cost for the case of interference and zero otherwise. In case that the source and destination of a communication task are one or more hop away from each other, one can schedule based on the path generated by a low complexity routing algorithm [<xref ref-type="bibr" rid="CR25">25</xref>].</p></sec><sec id="Sec13"><title>Online dynamic adaptation stage</title><p>This stage is based on the real-time execution of these tasks allocated to the sensor nodes based on the actual energy harvesting data. At the beginning of each time slot, the corresponding energy budget is retrieved from memory and a corresponding baseline error margin is looked up. If the energy budget from the prediction does not match with actual harvested energy and the error margin is higher than predefined threshold, the dynamic adaptation phase is executed. Adaptation allows the system to cope with the variation in the renewable energy and maintain system sustainability. In addition, energy harvesting statistics with new updates are sent to the centralized manager to update energy harvesting prediction of the next harvesting period.</p><p>The basic idea is that if a sensor node due to an environmental uncertainty does not have enough energy to execute the task, then it slows down the processor rate and stretches the execution time of that task. As a result, one may gain more time for the sensor node to harvest energy from environment at the price of operating at the lower processor power. This technique is called dynamic voltage and frequency scaling (DVFS)[<xref ref-type="bibr" rid="CR6">6</xref>]. Based on the initial schedule, all tasks are executed at the full speed of the processor (<italic>P</italic><sub>max</sub>), which is not an energy-efficient scheme. We need to make use of the task slacks for the energy saving. DVFS is applied to stretch the execution time of each task and slow down the power of processor. Then, we shift all other potentially affected tasks accordingly. Assume the DVFS-enabled processor has <italic>K</italic> discrete operating frequencies <italic>f</italic><sub><italic>k</italic></sub>:{<italic>f</italic><sub><italic>k</italic></sub>|1≤<italic>k</italic>≤<italic>K</italic>,<italic>f</italic><sub><italic>min</italic></sub>=<italic>f</italic><sub>1</sub>&lt;<italic>f</italic><sub>2</sub>&lt;...&lt;<italic>f</italic><sub><italic>K</italic></sub>=<italic>f</italic><sub><italic>max</italic></sub>} and the power consumption with regards to <italic>f</italic><sub><italic>k</italic></sub> is denoted as <italic>P</italic><sub><italic>k</italic></sub>. We assume a linear relationship between the power <italic>P</italic><sub><italic>k</italic></sub> used for executing tasks and their execution time <italic>L</italic>. We can say the higher the power <italic>P</italic><sub><italic>k</italic></sub>, the shorter the execution time <italic>L</italic>.</p><p>We define a decelerate factor <italic>ν</italic><sub><italic>k</italic></sub> as the normalized frequency of <italic>f</italic><sub><italic>k</italic></sub> with respect to the maximum frequency <italic>f</italic><sub><italic>max</italic></sub>, that is: 
<disp-formula id="Equ21"><label>(21)</label><alternatives><mml:math id="Equ21_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ21_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \nu_{k}= f_{k}/f_{\text{max}} \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ21.gif"/></alternatives></disp-formula></p><p>If task <italic>m</italic> is stretched by a slowdown factor <italic>ν</italic><sub><italic>k</italic></sub>, then its actual execution time at frequency <italic>f</italic><sub><italic>k</italic></sub> is <italic>L</italic><sub><italic>m</italic></sub>/<italic>ν</italic><sub><italic>k</italic></sub>.</p><p>Assume that initially the task <italic>m</italic> is assigned to the sensor node <italic>n</italic> considering the full speed of the processor. Let <italic>s</italic><italic>t</italic><sub><italic>m</italic></sub> and <italic>f</italic><italic>t</italic><sub><italic>m</italic></sub> denote the starting time and finish time of the task <italic>m</italic> accordingly. The task <italic>m</italic> has enough energy to finish its execution if the following inequality holds: 
<disp-formula id="Equ22"><label>(22)</label><alternatives><mml:math id="Equ22_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:mi mathvariant="script">A</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi mathvariant="script">ℋ</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>≥</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ22_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}} \mathcal{A}(st_{m})+\mathcal{H}(st_{m},ft_{m})\geq \mathcal{D}\left(st_{m},ft_{m}\right) \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ22.gif"/></alternatives></disp-formula></p><p>where <inline-formula id="IEq41"><alternatives><mml:math id="IEq41_Math"><mml:mi mathvariant="script">C</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><tex-math id="IEq41_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {C}(st_{m})$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq41.gif"/></alternatives></inline-formula> is the energy available at time instant <italic>s</italic><italic>t</italic><sub><italic>m</italic></sub> and <inline-formula id="IEq42"><alternatives><mml:math id="IEq42_Math"><mml:mi mathvariant="script">ℋ</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><tex-math id="IEq42_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {H}(st_{m},ft_{m})$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq42.gif"/></alternatives></inline-formula> is the harvested energy during task execution and <inline-formula id="IEq43"><alternatives><mml:math id="IEq43_Math"><mml:mi mathvariant="script">D</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>f</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><tex-math id="IEq43_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$ \mathcal {D}(st_{m},ft_{m})$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq43.gif"/></alternatives></inline-formula> is the energy demand of executing task. If this inequality does not hold, the decelerate factor is adjusted until the following equality holds, 
<disp-formula id="Equ23"><label>(23)</label><alternatives><mml:math id="Equ23_Math"><mml:mtable class="eqnarray" columnalign="left center right"><mml:mtr><mml:mtd class="eqnarray-1"><mml:mtable><mml:mtr><mml:mtd><mml:mi mathvariant="script">A</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi mathvariant="script">ℋ</mml:mi><mml:mo>(</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>f</mml:mi><mml:mspace width="0.3em"/><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>f</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mi>s</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mspace width="0.3em"/></mml:mrow></mml:mfenced><mml:mspace width="0.3em"/><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math><tex-math id="Equ23_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{@{}rcl@{}}{} \small{\begin{array}{ll} \mathcal{A}(st_{m})+\mathcal{H}(st_{m},st_{m}+\frac{f\,t_{m} - st_{m}}{\nu_{n}})= \mathcal{D}\left(st_{m},st_{m}+\frac{ft_{m} - st_{m}}{\nu_{n}}\!\right)\!. \end{array}} \end{array} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ23.gif"/></alternatives></disp-formula></p><p>Subsequently, all of the tasks <italic>τ</italic>∈succ(<italic>m</italic>) need to be delayed <italic>d</italic><italic>l</italic><sub><italic>m</italic></sub> which is the delay caused by stretching the task via DVFS. The result of this dynamic adaptation phase is to reserve time for the sensor node with lack of energy to harvest from the environment and execute with lower CPU frequency. Note that the schedule length in our formulation is not a hard constraint (or deadline). In the dynamic adaptation phase, the task is missed only if extending the task length to meet the energy-neutral condition causes the frequency <italic>f</italic><sub><italic>k</italic></sub> to be below <italic>f</italic><sub>min</sub>. The sequence of the algorithm is shown in <italic>Algorithm 2</italic>.</p><p><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Figb_HTML.gif" id="MO5"/></p></sec><sec id="Sec14"><title>Computational complexity</title><p>In this part, the complexity of the proposed heuristics is calculated. Considering an application with <italic>m</italic> tasks, a network with <italic>n</italic> sensors and <italic>ε</italic> which is defined as <inline-formula id="IEq44"><alternatives><mml:math id="IEq44_Math"><mml:mi>ε</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="0"><mml:mtr><mml:mtd><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℳ</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mtext mathvariant="italic">LS</mml:mtext><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mtext mathvariant="italic">ES</mml:mtext><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><tex-math id="IEq44_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\varepsilon = \max _{\substack {m \in \mathcal {M}}}\left (LST_{m}-EST_{m}\right)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq44.gif"/></alternatives></inline-formula> the complexity of the listing stage is <italic>O</italic>(<italic>m</italic>) and the energy harvesting aware task assignment heuristic has the complexity of <italic>O</italic>(<italic>n</italic><italic>m</italic><italic>ε</italic>) for the worst case. Hence, worst-case total complexity is <italic>O</italic>(<italic>m</italic>)+<italic>O</italic>(<italic>n</italic><italic>m</italic><italic>ε</italic>)≃<italic>O</italic>(<italic>n</italic><italic>m</italic><italic>ε</italic>). The dynamic adaptation phase has a low complexity of <italic>O</italic>(<italic>k</italic><italic>l</italic>) where <italic>k</italic> is the number of tasks mapped to the sensor node which has the energy prediction error higher than predefined threshold and <italic>l</italic> is the number of those tasks’ successors in the DAG.</p></sec></sec><sec id="Sec15"><title>Multi-objective genetic algorithm for task allocation</title><p>The task scheduling and mapping into a parallel and distributed computing system is a well-defined NP-complete problem. It is considered as one of the most challenging problems in parallel computing [<xref ref-type="bibr" rid="CR29">29</xref>]. The task allocation problem is included in this class of combinatorial optimization problems.</p><p>Genetic algorithms (GAs) have been widely used as beneficial meta-heuristics for obtaining high-quality solutions for a broad range of combinatorial optimization problems including the task allocation problem [<xref ref-type="bibr" rid="CR30">30</xref>]. Another distinct feature of the genetic search is that its inherent parallelism can be exploited to further reduce its running time. Hence, as a baseline, with which to compare our task allocation scheme, we implement a multi-objective genetic algorithm. This algorithm starts with an initial population of feasible solutions. Then, by applying some operators, the best solution can be found after some generations. The selection of the best solution is determined according to the value of the fitness function. In this section, the detailed implementation is presented.</p><p><italic>Representation</italic>: The first step in designing a genetic algorithm for a particular problem is to develop a suitable representation scheme, i.e., a way to represent individuals in the GA population. A chromosome represents a mapping of tasks to sensor nodes. Figure <xref rid="Fig4" ref-type="fig">4</xref> shows an example of such a representation of the chromosome. Tasks 2, 3, 6, and 9 will be scheduled on sensor node 1, tasks 5 and 8 on sensor node 2, and tasks 1, 4, and 7 on sensor node 3.
<fig id="Fig4"><label>Fig. 4</label><caption xml:lang="en"><p>Representation of a chromosome and crossover operation</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig4_HTML.gif" id="MO6"/></fig></p><p><italic>Fitness function</italic>: A fitness function attaches a value to each chromosome in the population, which indicates the quality of the schedule. The main objectives of the task allocation, which are minimizing scheduling length and maximizing energy-balancing considering the energy harvesting, are represented in the fitness function. In this case, the fitness function (<inline-formula id="IEq45"><alternatives><mml:math id="IEq45_Math"><mml:mi mathvariant="fraktur">F</mml:mi></mml:math><tex-math id="IEq45_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathfrak {F}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq45.gif"/></alternatives></inline-formula>) needs to express two different objectives as follows: 
<disp-formula id="Equ24"><label>(24)</label><alternatives><mml:math id="Equ24_Math"><mml:mi mathvariant="fraktur">F</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mover accent="false"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><tex-math id="Equ24_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \mathfrak{F}= w_{1}\left(\max_{m \in M}(S_{m}+L_{m})\right)+ w_{2} \left(\frac{1}{n}\sum_{i=1}^{n}\left(\mathcal{A}_{i}- \overline{\mathcal{A}}\right)^{2}\right)  $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equ24.gif"/></alternatives></disp-formula></p><p>where <italic>S</italic><sub><italic>m</italic></sub>+<italic>L</italic><sub><italic>m</italic></sub> is the finish time of task <italic>m</italic> and <inline-formula id="IEq46"><alternatives><mml:math id="IEq46_Math"><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>L</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><tex-math id="IEq46_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\max _{m \in M}(S_{m}+L_{m})$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq46.gif"/></alternatives></inline-formula> is the schedule length of a task graph. <inline-formula id="IEq47"><alternatives><mml:math id="IEq47_Math"><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq47_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}_{i}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq47.gif"/></alternatives></inline-formula> is the available energy level of sensor node <italic>i</italic> considering the recharging with the energy harvester. <inline-formula id="IEq48"><alternatives><mml:math id="IEq48_Math"><mml:mover accent="false"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover></mml:math><tex-math id="IEq48_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\overline {\mathcal {A}}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq48.gif"/></alternatives></inline-formula> is the mean value which is calculated as <inline-formula id="IEq49"><alternatives><mml:math id="IEq49_Math"><mml:mover accent="false"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:munderover><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq49_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\overline {\mathcal {A}}=\frac {1}{n}\sum _{i=1}^{n}\mathcal {A}_{i}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq49.gif"/></alternatives></inline-formula> where <italic>n</italic> is the number of sensor nodes. In order to show how balanced the energy levels are, the deviation from the mean of the remaining energy level of all the sensor nodes is evaluated. The lower this value is, the more balanced available energy level among all the sensor nodes. Also, the lower scheduling length is better. So, our objective is to minimize the defined fitness function which is proportional to the schedule length and the energy variance. <italic>w</italic><sub>1</sub> and <italic>w</italic><sub>2</sub> are the weights to set the priority for the objectives.</p><p><italic>Selection operator</italic>: There are two selection phases used for the genetic algorithm. The first one is <italic>parent selection</italic>. This selection phase is used to select the parents for mutation and crossover based on the fitness. We have applied the fitness-proportional roulette wheel selection and tournament selection. The second selection phase is survival selection among the reproductive chromosome after crossover. For this phase, we use the Genitor selection, a.k.a. “delete worst” which means among parents and offsprings deleting the worst.</p><p><italic>Crossover and mutation operator</italic>: Each chromosome in the population is subjected to crossover with probability <italic>P</italic><sub><italic>c</italic></sub>. Two chromosomes are selected from the population, and a random number <italic>r</italic>∈ [ 0,1] is generated for each chromosome. If <italic>r</italic>&lt;<italic>P</italic><sub><italic>c</italic></sub>, these chromosomes are subjected to the crossover operation using single point crossover as shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>. For this work, the <italic>non-uniform self-adaptation mutation</italic>, which is a fitness-dependent mutation rate, is utilized. The mutation rate initially set to be some high values then the lower value once it reaches to near to optimal fitness.
<fig id="Fig5"><label>Fig. 5</label><caption xml:lang="en"><p>Convergence of multi-objective fitness function of genetic algorithm-based task allocation</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig5_HTML.gif" id="MO7"/></fig></p></sec><sec id="Sec16"><title>Simulation results</title><p>The performance of our proposed algorithms are evaluated through simulation. We have run several sets of simulations to investigate the following aspects: 
<list list-type="bullet"><list-item><p>Performance of the energy harvesting prediction algorithm</p></list-item><list-item><p>Performance of the task allocation scheme in terms of energy balancing and scheduling length objectives</p></list-item><list-item><p>Performance of the dynamic adaptation phase</p></list-item></list></p><p>To the best of our knowledge, this is the first work that addresses an energy harvesting aware task allocation at the network level. For small scale problems, we are able to solve mixed-integer linear programming (MILP) by the optimization toolbox in Matlab using syntax intlinprog. The results can be used as a baseline for our proposed heuristic. A multi-objective genetic algorithm based task allocation scheme (explained in details in Section <xref rid="Sec15" ref-type="sec">6</xref>) is also implemented. For large scale problems, the proposed scheme is validated by comparing the results of the genetic algorithm approach and some modified heuristics such as the critical node path tree (CNPT) algorithm [<xref ref-type="bibr" rid="CR18">18</xref>] and extended CNPT (E-CNPT) algorithm [<xref ref-type="bibr" rid="CR13">13</xref>]. The strategy for extended CNPT (E-CNPT) algorithm in [<xref ref-type="bibr" rid="CR13">13</xref>] is to assign the tasks along the most critical path first to the nodes with earliest execution start times. This algorithm operates by adjusting the number of sensors in each scheduling iteration and then choosing the schedule with the minimum energy consumption.</p><p>The energy harvesting profile is retrieved from the National Renewable Energy Lab website [<xref ref-type="bibr" rid="CR26">26</xref>]. The data for the power consumption of a sensor node is extracted from the Mica-2 data sheet [<xref ref-type="bibr" rid="CR27">27</xref>]. Some of the implementation specifications are shown in Table <xref rid="Tab1" ref-type="table">1</xref>.
<table-wrap id="Tab1"><label>Table 1</label><caption xml:lang="en"><p>Simulation configuration</p></caption><table frame="hsides" rules="groups"><tbody><tr><td align="left"><p>Recombination</p></td><td align="left"><p>Single point crossover with probability 0.6−0.9</p></td></tr><tr><td align="left"><p>Parent selection</p></td><td align="left"><p>a) roulette wheel b) binary tournament</p></td></tr><tr><td align="left"><p>Survivor selection</p></td><td align="left"><p>GENITOR, a.k.a. “delete worst”</p></td></tr><tr><td align="left"><p>Population size</p></td><td align="left"><p>10 chromosomes</p></td></tr><tr><td align="left"><p>Number of task in the task graph</p></td><td align="left"><p>7−30</p></td></tr><tr><td align="left"><p>Number of sensor nodes</p></td><td align="left"><p>2−50</p></td></tr><tr><td align="left"><p>Maximum number of predecessors in task graph</p></td><td align="left"><p>2 or 3</p></td></tr><tr><td align="left"><p>Stopping criterion for genetic algorithm</p></td><td align="left"><p>10 unchanging generations</p></td></tr></tbody></table></table-wrap></p><p>The example of a task graph and its corresponding task allocation to five sensor nodes are shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>. The results from the convergence of a genetic algorithm based multi-objective fitness function for the minimum and average value after several generations are shown in the Fig. <xref rid="Fig6" ref-type="fig">6</xref>.
<fig id="Fig6"><label>Fig. 6</label><caption xml:lang="en"><p>Task graph and corresponding task allocation based on our scheme</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig6_HTML.gif" id="MO8"/></fig></p><sec id="Sec17"><title>Simulation results for the energy harvesting prediction algorithm</title><p>To evaluate the performance of the proposed algorithm, simulations are carried out based on the available solar irradiance data from the solar energy received at different times of day and night. We consider the measurement trace of a solar panel in four consecutive days, with both the sunny and cloudy conditions from National Renewable Energy Lab [<xref ref-type="bibr" rid="CR26">26</xref>]. The reported data is from California Solar Initiative (CSI) from 26 October 2011 for 4 days. The unit of this data is an average solar irradiance <inline-formula id="IEq50"><alternatives><mml:math id="IEq50_Math"><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mtext mathvariant="italic">mW</mml:mtext><mml:mo>/</mml:mo><mml:msup><mml:mrow><mml:mi>m</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><tex-math id="IEq50_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left (mW/m^{2}\right)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq50.gif"/></alternatives></inline-formula>, and it is for every 1 h. An irradiance unit is converted to an energy unit by linear conversion considering a solar panel size 9.6 × 6.4 cm, a solar cell efficiency 10 <italic>%</italic> and a harvesting efficiency 80 <italic>%</italic>. We use “<italic>Ah</italic>” as the unit of the energy quantity because the voltage is fixed at 1.2 V.</p><p>To present the algorithm evaluation results, the following values used as algorithm parameters are as follows: <italic>T</italic>=24, <italic>α</italic>=0.7, <italic>D</italic>=4, and <italic>K</italic>=4. Recall that <italic>α</italic>, <italic>K</italic>, and <italic>D</italic> denote weighing factor, number of previous slots, and number of previous days for each solar power data set. Figure <xref rid="Fig7" ref-type="fig">7</xref> shows how closely our prediction algorithm can track the actual measured data. The evaluation metric used for this part is the average prediction error. It is computed as 
<disp-formula id="Equc"><alternatives><mml:math id="Equc_Math"><mml:mrow><mml:mi>ε</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>100</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo><mml:mo>−</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mo>~</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>i</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math><tex-math id="Equc_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \epsilon = \frac{100}{n}\sum_{i=1}^{n} \frac{|e(i)-\tilde{e}(i)|}{e(i)} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equc.gif"/></alternatives></disp-formula> where <italic>n</italic> is the time horizon of the predication which is <italic>D</italic>×<italic>T</italic>.
<fig id="Fig7"><label>Fig. 7</label><caption xml:lang="en"><p>Predicted value for four consecutive days</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig7_HTML.gif" id="MO9"/></fig></p><p>We compare the energy prediction accuracy of WCMA, ARMA, and AR-WCMA. WCMA and AR-WCMA are addressed in the prediction algorithm part. ARMA refers to autoregressive moving average. This comparison can be seen in Fig. <xref rid="Fig8" ref-type="fig">8</xref> for the different weather conditions (i.e., sunny day and cloudy day).
<fig id="Fig8"><label>Fig. 8</label><caption xml:lang="en"><p>Comparison of prediction results</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig8_HTML.gif" id="MO10"/></fig></p><p>ARMA only uses values from the previous day; hence, if the weather conditions change from one slot to another, this method has a large error in prediction (i.e., close to 30 <italic>%</italic>). On the other hand, WCMA only takes into account the last few slots but not the useful information about the weather condition of the past few days. AR-WCMA produces much better results because it uses the values of the same slot over previous days and also the previous slots of the same day, which helps to calibrate against the actual weather condition. To conclude, WCMA, ARMA, and AR-WCMA results in the average error of 23.6, 28.6 and 8.7 <italic>%</italic>, respectively.</p></sec><sec id="Sec18"><title>Discussion on results for energy-balancing and scheduling length objectives</title><p>In this section, the performance evaluation of our scheme in terms of our objectives which are minimizing the scheduling length and maximizing the energy-balancing considering energy harvesting characteristics are presented. The quantity that used for energy-balancing evaluation is the energy variance over all nodes which calculated as follows: 
<disp-formula id="Equd"><alternatives><mml:math id="Equd_Math"><mml:mrow><mml:mi>ν</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:mfrac><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mover accent="false"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><tex-math id="Equd_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\nu = \frac{1}{n}\sum_{i=1}^{n} (\mathcal{A}_{i}- \overline{\mathcal{A}})^{2} $$ \end{document}</tex-math><graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_Equd.gif"/></alternatives></disp-formula> where <inline-formula id="IEq51"><alternatives><mml:math id="IEq51_Math"><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:math><tex-math id="IEq51_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}_{i}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq51.gif"/></alternatives></inline-formula> is the energy availability level of sensor node <italic>i</italic> after the allocation and <inline-formula id="IEq52"><alternatives><mml:math id="IEq52_Math"><mml:mover accent="false"><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo accent="true">¯</mml:mo></mml:mover></mml:math><tex-math id="IEq52_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\overline {\mathcal {A}}$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq52.gif"/></alternatives></inline-formula> is the mean value. We first conducted simulations for small scale problems, with 3–4 sensor nodes and 7–10 tasks with maximum 2 predecessors. The results are averaged over more than 100 instances where each point has a 95 <italic>%</italic> confidence interval with a 10 <italic>%</italic> precision. The optimization toolbox in Matlab is used that calls the solver by syntax intlinprog to solve MILP for this small scale problem. The performance ratios of our proposed heuristic <inline-formula id="IEq53"><alternatives><mml:math id="IEq53_Math"><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><tex-math id="IEq53_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left (\nu _{h}\right)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq53.gif"/></alternatives></inline-formula> and genetic algorithm <inline-formula id="IEq54"><alternatives><mml:math id="IEq54_Math"><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><tex-math id="IEq54_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left (\nu _{g}\right)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq54.gif"/></alternatives></inline-formula> over the optimum solution <inline-formula id="IEq55"><alternatives><mml:math id="IEq55_Math"><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>ν</mml:mi></mml:mrow><mml:mrow><mml:mi>o</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><tex-math id="IEq55_TeX">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym}
				\usepackage{amsfonts}
				\usepackage{amssymb}
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left (\nu _{o}\right)$\end{document}</tex-math><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="13638_2015_490_Article_IEq55.gif"/></alternatives></inline-formula> are shown in Fig. <xref rid="Fig9" ref-type="fig">9</xref>. We can see that the heuristic achieved up to 70 <italic>%</italic> of the solution obtained by the MILP-based approach for the conducted simulations. Moreover, the results from the genetic algorithm are good enough (up to 82 <italic>%</italic>) that can be later used as a baseline for the larger scale problem.
<fig id="Fig9"><label>Fig. 9</label><caption xml:lang="en"><p>Performance comparison of optimum approach with genetic algorithm and the heuristic approach</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig9_HTML.gif" id="MO11"/></fig></p><p>We then consider the simulations for larger scale problems. Task graph with 30 tasks and the maximum 3 predecessors are generated randomly. Similarly, the results shown in Fig. <xref rid="Fig10" ref-type="fig">10</xref> are averaged over more than 100 instances so that each point has a 95 <italic>%</italic> confidence interval with a 10 <italic>%</italic> precision. This result shows the variance of energy level over 2 to 16 nodes. The lower energy variance means achieving the more balanced energy level among the nodes. This result shows that the energy level of nodes using our scheme is more balanced than the E-CNPT algorithm in [<xref ref-type="bibr" rid="CR13">13</xref>]. This is because although the E-CNPT is an energy-efficient algorithm which schedules based on the the energy consumption of tasks, it considers constant energy profiles for nodes and it does not consider the energy variation of the harvested energy. The energy-balancing results from the GA-based scheme with optimum result and our heuristic are fairly close to each other.
<fig id="Fig10"><label>Fig. 10</label><caption xml:lang="en"><p>Energy variance level over different number of nodes</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig10_HTML.gif" id="MO12"/></fig></p><p>In Fig. <xref rid="Fig11" ref-type="fig">11</xref>, the scheduling length resulted from our scheme is compared with the CNPT algorithm proposed in [<xref ref-type="bibr" rid="CR18">18</xref>], whose only objective is to minimize the scheduling length for each energy budget. Hence, in the best case, we can have the scheduling length near to the optimum scheduling length over different energy budgets as can be seen in Fig. <xref rid="Fig11" ref-type="fig">11</xref>. It is observed that for the different number of available sensor nodes, the results are fairly near to the CNPT and GA-based schemes.
<fig id="Fig11"><label>Fig. 11</label><caption xml:lang="en"><p>Scheduling length over different number of nodes</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig11_HTML.gif" id="MO13"/></fig></p><p>In order to validate the performance of our approach, more complex system parameters such as the number of tasks and precedences in DAG and number of sensor nodes are considered. This result is shown in Table <xref rid="Tab2" ref-type="table">2</xref>. Our method attains more balanced residual energy level while achieving a near optimum scheduling lengths, for different system parameter settings.
<table-wrap id="Tab2"><label>Table 2</label><caption xml:lang="en"><p>Results from different system parameters</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left"><p>Number of sensor nodes</p></th><th align="left"><p>Number of tasks</p></th><th align="left"><p>Number of precedence</p></th><th align="left"><p>Schedule length (ms)</p></th><th align="left"><p>Variance</p></th></tr></thead><tbody><tr><td align="justify"><p>Our approach</p></td><td align="justify"><p>30</p></td><td align="justify"><p>15</p></td><td align="justify"><p>2</p></td><td align="justify"><p>29</p></td><td align="justify"><p>0.23</p></td></tr><tr><td align="justify"><p>GA</p></td><td align="justify"><p>30</p></td><td align="justify"><p>15</p></td><td align="justify"><p>2</p></td><td align="justify"><p>29</p></td><td align="justify"><p>0.19</p></td></tr><tr><td align="justify"><p>E-CNPT</p></td><td align="justify"><p>30</p></td><td align="justify"><p>15</p></td><td align="justify"><p>2</p></td><td align="justify"><p>29</p></td><td align="justify"><p>0.37</p></td></tr><tr><td align="justify"><p>Our approach</p></td><td align="justify"><p>40</p></td><td align="justify"><p>22</p></td><td align="justify"><p>3</p></td><td align="justify"><p>36</p></td><td align="justify"><p>0.27</p></td></tr><tr><td align="justify"><p>GA</p></td><td align="justify"><p>40</p></td><td align="justify"><p>22</p></td><td align="justify"><p>3</p></td><td align="justify"><p>35</p></td><td align="justify"><p>0.24</p></td></tr><tr><td align="justify"><p>E-CNPT</p></td><td align="justify"><p>40</p></td><td align="justify"><p>22</p></td><td align="justify"><p>3</p></td><td align="justify"><p>35</p></td><td align="justify"><p>0.48</p></td></tr><tr><td align="justify"><p>Our approach</p></td><td align="justify"><p>50</p></td><td align="justify"><p>30</p></td><td align="justify"><p>3</p></td><td align="justify"><p>48</p></td><td align="justify"><p>0.32</p></td></tr><tr><td align="justify"><p>GA</p></td><td align="justify"><p>50</p></td><td align="justify"><p>30</p></td><td align="justify"><p>3</p></td><td align="justify"><p>47</p></td><td align="justify"><p>0.28</p></td></tr><tr><td align="justify"><p>E-CNPT</p></td><td align="justify"><p>50</p></td><td align="justify"><p>30</p></td><td align="justify"><p>3</p></td><td align="justify"><p>46</p></td><td align="justify"><p>0.55</p></td></tr></tbody></table></table-wrap></p></sec><sec id="Sec19"><title>Discussion on results for dynamic adaptation stage</title><p>In this section, the performance of our proposed dynamic adaptation algorithm in the presence of the variable solar-based energy harvesting is evaluated. For this evaluation, we consider eight different prediction error ratios between 0 and 40 percentage points. For each error ratio point, 100 runs of the task allocation simulation with the random initial available energy of all the nodes are executed. Then, the percentage of the allocation failure, called <italic>missing ratio</italic>, is measured for the “static allocation” and “static allocation with the dynamic phase.” An allocation failure occurs once tasks and their precedences are missed due to unavailability of resources. In the dynamic adaptation phase, the task is missed only if stretching the task length to meet the energy-neutral condition causes the frequency <italic>f</italic><sub><italic>k</italic></sub> to be below <italic>f</italic><sub><italic>min</italic></sub>. Figure <xref rid="Fig12" ref-type="fig">12</xref> shows the significant improvement in terms of the missing ratio by implementing the dynamic adaptation phase.
<fig id="Fig12"><label>Fig. 12</label><caption xml:lang="en"><p>Allocation missing ratio with different prediction error ratio</p></caption><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2015_490_Fig12_HTML.gif" id="MO14"/></fig></p></sec></sec><sec id="Sec20" sec-type="conclusion"><title>Conclusions</title><p>In this paper, the task allocation problem for a sensor network powered by harvesting energy from natural environmental phenomenon is considered. The goals are to minimize the makespan and maximize the fairness in energy-driven task mapping (i.e., energy-balancing), while satisfying the task precedence constraints and energy harvesting causality constraints. The problem is precisely formulated as a mixed integer linear problem. The proposed framework for this problem has a hybrid framework of static and dynamic adaptation stages. Heuristic algorithms are proposed to solve the static problem in two phases: scheduling of the task graph and mapping to the appropriate solar-powered sensor nodes. The performance of our proposed algorithms, in terms of energy-balancing and scheduling length, is evaluated through simulation and compared with other approaches, including a genetic algorithm as a baseline. We achieve more balanced residual energy levels across the network while attaining a near optimum scheduling length. The results also show the significant improvement in terms of allocation failure ratio due to implementing the dynamic adaptation stage.</p></sec></body><back><ref-list id="Bib1"><title>References</title><ref-list><ref id="CR1"><label>1</label><mixed-citation publication-type="other">B Stefano, M Yousof Naderi, Ch Petrioli, D Spenza, <italic>Wireless sensor networks with energy harvesting, Mobile Ad Hoc Networking: The Cutting Edge Directions</italic>, (2013).</mixed-citation></ref><ref id="CR2"><label>2</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kansal</surname><given-names>A</given-names></name><name><surname>Hsu</surname><given-names>J</given-names></name><name><surname>Zahedi</surname><given-names>S</given-names></name><name><surname>Srivastava</surname><given-names>MB</given-names></name></person-group><article-title xml:lang="en">Power management in energy harvesting sensor networks</article-title><source>ACM Trans. Embedded Comput. Syst.(TECS)</source><year>2007</year><volume>6</volume><issue>4</issue><fpage>136</fpage><lpage>142</lpage></mixed-citation></ref><ref id="CR3"><label>3</label><mixed-citation publication-type="other">A Cammarano, D Spenza, C Petrioli, Energy-harvesting WSNs for structural health monitoring of underground train tunnels. IEEE Conference on. Computer Communications Workshops (INFOCOM WKSHPS), 75–77 (2007).</mixed-citation></ref><ref id="CR4"><label>4</label><mixed-citation publication-type="other">M Gorlatova, P Kinget, I Kymissis, D Rubenstein, X Wang, in <italic>Proc. of annual international conference on Mobile computing and networking</italic>. Challenge: ultra low power energy-harvesting active networked tags (EnHANTs) (ACM, 2009), pp. 253–260.</mixed-citation></ref><ref id="CR5"><label>5</label><mixed-citation publication-type="other">G Virone, A Wood, L Selavo, Q Cao, L Fang, T Doan, in <italic>Proc. of Conference on Distributed Diagnosis and Home Healthcare (D2H2)</italic>. An advanced wireless sensor network for health monitoring, (2006), pp. 23–27.</mixed-citation></ref><ref id="CR6"><label>6</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhuo</surname><given-names>J</given-names></name><name><surname>Chakrabarti</surname><given-names>C</given-names></name></person-group><article-title xml:lang="en">Energy-Efficient Dynamic Task Scheduling Algorithms for DVS Systems</article-title><source>ACM Trans. Embedded Comput. Syst.(TECS)</source><year>2008</year><volume>7</volume><issue>2</issue><fpage>234</fpage><lpage>250</lpage></mixed-citation></ref><ref id="CR7"><label>7</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>W</given-names></name><name><surname>Delicato</surname><given-names>FC</given-names></name><name><surname>Zomaya</surname><given-names>AY</given-names></name></person-group><article-title xml:lang="en">Adaptive energy-efficient scheduling for hierarchical wireless sensor networks</article-title><source>ACM Trans. Sensor Netw. (TOSN)</source><year>2013</year><volume>9</volume><issue>3</issue><fpage>23</fpage><lpage>30</lpage></mixed-citation></ref><ref id="CR8"><label>8</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>AbdelSalam</surname><given-names>HS</given-names></name><name><surname>Olariu</surname><given-names>S</given-names></name></person-group><article-title xml:lang="en">Toward efficient task management in wireless sensor networks</article-title><source>IEEE Trans. Comput</source><year>2011</year><volume>60</volume><issue>11</issue><fpage>78</fpage><lpage>96</lpage><pub-id pub-id-type="doi">10.1109/TC.2010.264</pub-id><pub-id pub-id-type="other" assigning-authority="American Mathematical Society">2830040</pub-id></mixed-citation></ref><ref id="CR9"><label>9</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Edalat</surname><given-names>N</given-names></name><name><surname>Chen-Khong</surname><given-names>T</given-names></name><name><surname>Wendong</surname><given-names>X</given-names></name></person-group><article-title xml:lang="en">An auction-based strategy for distributed task allocation in wireless sensor networks</article-title><source>Comput. Commun</source><year>2012</year><volume>35</volume><issue>8</issue><fpage>916</fpage><lpage>928</lpage><pub-id pub-id-type="doi">10.1016/j.comcom.2012.02.004</pub-id></mixed-citation></ref><ref id="CR10"><label>10</label><mixed-citation publication-type="other">T Zhu, A Mohaisen, Y Ping, D Towsley, DEOS: Dynamic energy-oriented scheduling for sustainable wireless sensor networks. INFOCOM, 2363–2371 (2012).</mixed-citation></ref><ref id="CR11"><label>11</label><mixed-citation publication-type="other">T La Porta, C Petrioli, D Spenza, Sensor-mission assignment in wireless sensor networks with energy harvesting. IEEE SECON, 413–421 (2011).</mixed-citation></ref><ref id="CR12"><label>12</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pathak</surname><given-names>A</given-names></name><name><surname>Prasanna</surname><given-names>VK</given-names></name></person-group><article-title xml:lang="en">Energy-efficient task mapping for data-driven sensor network macroprogramming</article-title><source>IEEE Trans. Comput</source><year>2010</year><volume>59</volume><issue>7</issue><fpage>955</fpage><lpage>968</lpage><pub-id pub-id-type="doi">10.1109/TC.2009.168</pub-id><pub-id pub-id-type="other" assigning-authority="American Mathematical Society">2999452</pub-id></mixed-citation></ref><ref id="CR13"><label>13</label><mixed-citation publication-type="other">Y Tian, J Boangoat, E Ekici, F Ozguner, in <italic>Proc. of 20th International Parallel and Distributed Processing Symposium</italic>. Real-time task mapping and scheduling for collaborative in-network processing in DVS-enabled wireless sensor networks, (2006), pp. 15–23.</mixed-citation></ref><ref id="CR14"><label>14</label><mixed-citation publication-type="other">S Liu, Q Qiu, Q WU, in <italic>Proc. of Design, Automation, and Test in Europe</italic>. Energy Aware Dynamic Voltage and Frequency Selection for Real-Time Systems with Energy Harvesting, (2008).</mixed-citation></ref><ref id="CR15"><label>15</label><mixed-citation publication-type="other">S Liu, Q WU, Q Qiu, in <italic>Proc. of Design Automation Conference</italic>. An Adaptive Scheduling and VoltagelFrequency Selection Algorithm for Real-time Energy Harvesting Systems, (2009).</mixed-citation></ref><ref id="CR16"><label>16</label><mixed-citation publication-type="other">C Moser, D Brunelli, L Thiele, L Benini, in <italic>Proc. of Conference on Distributed and Parallel Embedded Systems</italic>. Lazy Scheduling for Energy Harvesting Sensor Nodes, (2006).</mixed-citation></ref><ref id="CR17"><label>17</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moser</surname><given-names>C</given-names></name><name><surname>Brunelli</surname><given-names>D</given-names></name><name><surname>Thiele</surname><given-names>L</given-names></name><name><surname>Benini</surname><given-names>L</given-names></name></person-group><article-title xml:lang="en">Real-time scheduling for energy harvesting sensor nodes</article-title><source>Real-Time Syst. J</source><year>2007</year><volume>37</volume><issue>3</issue><fpage>233</fpage><lpage>260</lpage><pub-id pub-id-type="doi">10.1007/s11241-007-9027-0</pub-id><pub-id pub-id-type="other" assigning-authority="Zentralblatt MATH">1125.68016</pub-id></mixed-citation></ref><ref id="CR18"><label>18</label><mixed-citation publication-type="other">T Hagres, J Janecek, in <italic>Proc. of International Conference on Parallel Processing Workshops</italic>. A high performance, low complexity algorithm for compile-time job scheduling in homogeneous computing environments, (2003), pp. 56–62.</mixed-citation></ref><ref id="CR19"><label>19</label><mixed-citation publication-type="other">J Recas, C Bergonzini, D Atienza, TS Rosing, in <italic>Proc. of VITAE’09</italic>. Prediction and Management in Energy Harvested Wireless Sensor Nodes, (2009).</mixed-citation></ref><ref id="CR20"><label>20</label><mixed-citation publication-type="other">C Renner, Solar harvest prediction supported by cloud cover forecasts. IEEE ENSSys, 45–50 (2013).</mixed-citation></ref><ref id="CR21"><label>21</label><mixed-citation publication-type="other">A Cammarano, C Petrioli, D Spenza, in <italic>IEEE International Conference on Mobile Adhoc and Sensor Systems (MASS)</italic>. Pro-Energy: A novel energy prediction model for solar and wind energy-harvesting wireless sensor networks, (2012), pp. 234–240.</mixed-citation></ref><ref id="CR22"><label>22</label><mixed-citation publication-type="other">RH Shumway, DS Stoffer, <italic>Time Series Analysis and Its Applications</italic> (Springer-Verlag, 2000).</mixed-citation></ref><ref id="CR23"><label>23</label><mixed-citation publication-type="other">DC Montgomery, LA Johnson, JS Gardiner, <italic>Forecasting and Time Series Analysis</italic> (McGraw-Hill, 1990).</mixed-citation></ref><ref id="CR24"><label>24</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Garey</surname><given-names>MR</given-names></name><name><surname>Johnson</surname><given-names>DS</given-names></name></person-group><source><italic>Computers and Intractability: A Guide to the Theory of NP-Completeness</italic></source><year>1979</year><publisher-loc>WH Freeman &amp; Co</publisher-loc><publisher-name>San Francisco</publisher-name><pub-id pub-id-type="other" assigning-authority="Zentralblatt MATH">0411.68039</pub-id></mixed-citation></ref><ref id="CR25"><label>25</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Al-Karaki</surname><given-names>JN</given-names></name><name><surname>Kamal</surname><given-names>AE</given-names></name></person-group><article-title xml:lang="en">Routing techniques in wireless sensor networks: a survey</article-title><source>IEEE Wireless Commun</source><year>2004</year><volume>11</volume><issue>6</issue><fpage>6</fpage><lpage>28</lpage><pub-id pub-id-type="doi">10.1109/MWC.2004.1368893</pub-id></mixed-citation></ref><ref id="CR26"><label>26</label><mixed-citation publication-type="other">National Renewable Energya Lab website. <ext-link xlink:href="http://www.nrel.gov/midc/" ext-link-type="uri">http://www.nrel.gov/midc/</ext-link>. Access date July 2014.</mixed-citation></ref><ref id="CR27"><label>27</label><mixed-citation publication-type="other">Crossbow Technology INC. Mica-2 Data Sheet. [Online] Crossbow. <ext-link xlink:href="http://www.xbow.com" ext-link-type="uri">http://www.xbow.com</ext-link>. Access date July 2014.</mixed-citation></ref><ref id="CR28"><label>28</label><mixed-citation publication-type="other">DK Noh, L Wang, Y Yang, H Khac, L Tarek, in <italic>Proc. of 5th IEEE International Conference on Distributed Computing in Sensor Systems</italic>. Minimum variance energy allocation for a solar-powered sensor system (DCOSS, 2009), pp. 67–88.</mixed-citation></ref><ref id="CR29"><label>29</label><mixed-citation publication-type="other">H El-Rewini, TG Lewis, HH Ali, <italic>Task Scheduling in Parallel and Distributed Systems</italic> (Prentice-Hall International Editions, 1994).</mixed-citation></ref><ref id="CR30"><label>30</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>AS</given-names></name><name><surname>Yu</surname><given-names>H</given-names></name><name><surname>Jin</surname><given-names>S</given-names></name><name><surname>Lin</surname><given-names>K-C</given-names></name><name><surname>Schiavone</surname><given-names>G</given-names></name></person-group><article-title xml:lang="en">An incremental genetic algorithm approach to multiprocessor scheduling</article-title><source>IEEE Trans. Parallel Distributed Syst</source><year>2004</year><volume>15</volume><issue>9</issue><fpage>824</fpage><lpage>834</lpage><pub-id pub-id-type="doi">10.1109/TPDS.2004.38</pub-id></mixed-citation></ref></ref-list></ref-list><notes notes-type="Misc"><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></notes></back></article></records><facets><facet name="subject"><facet-value count="1">Communications Engineering, Networks</facet-value><facet-value count="1">Engineering</facet-value><facet-value count="1">Information Systems Applications (incl.Internet)</facet-value><facet-value count="1">Signal,Image and Speech Processing</facet-value></facet><facet name="keyword"><facet-value count="1">Energy harvesting prediction</facet-value><facet-value count="1">Energy harvesting wireless sensor networks (EH-WSNs)</facet-value><facet-value count="1">Solar-powered sensor nodes</facet-value><facet-value count="1">Task allocation algorithms</facet-value></facet><facet name="pub"><facet-value count="1">EURASIP Journal on Wireless Communications and Networking</facet-value></facet><facet name="year"><facet-value count="1">2016</facet-value></facet><facet name="country"><facet-value count="1">Singapore</facet-value></facet><facet name="type"><facet-value count="1">Journal</facet-value></facet></facets></response>
