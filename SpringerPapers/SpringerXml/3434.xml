<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="/resources/spdi-openaccess-jats.xsl"?>
<!DOCTYPE response [
	
<!ENTITY % article SYSTEM "http://jats.nlm.nih.gov/archiving/1.2/JATS-archivearticle1.dtd">
<!ENTITY % book-part-wrapper SYSTEM "http://jats.nlm.nih.gov/extensions/bits/2.0/BITS-book2.dtd">
	]><response><apiMessage>This XML was provided by Springer Nature</apiMessage><query>doi:10.1155/2010/343690</query><apiKey>87ba7cb21f89ce78154df796840621f4</apiKey><result><total>1</total><start>1</start><pageLength>2</pageLength><recordsDisplayed>1</recordsDisplayed></result><records><article dtd-version="1.2" article-type="research-article" xml:lang="en" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink"><front><journal-meta><journal-id journal-id-type="publisher-id">13638</journal-id><journal-id journal-id-type="doi">10.1007/13638.1687-1499</journal-id><journal-title-group><journal-title>EURASIP Journal on Wireless Communications and Networking</journal-title><abbrev-journal-title abbrev-type="publisher">J Wireless Com Network</abbrev-journal-title></journal-title-group><issn pub-type="epub">1687-1499</issn><publisher><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Cham</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="publisher-id">BMC1687-1499-2010-343690</article-id><article-id pub-id-type="manuscript">1870</article-id><article-id pub-id-type="doi">10.1155/2010/343690</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="article-collection" specific-use="Regular"><subject>Design, Implementation, and Evaluation of Wireless Sensor Network Systems</subject></subj-group></article-categories><title-group><article-title xml:lang="en">Design and Implementation of a Generic Energy-Harvesting Framework Applied to the Evaluation of a Large-Scale Electronic Shelf-Labeling Wireless Sensor Network</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>De Mil</surname><given-names>Pieter</given-names></name><address><email>pieter.demil@intec.ugent.be</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="corresp" rid="IDBMC168714992010343690_cor1">a</xref></contrib><contrib contrib-type="author"><name><surname>Jooris</surname><given-names>Bart</given-names></name><address><email>bart.jooris@intec.ugent.be</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Tytgat</surname><given-names>Lieven</given-names></name><address><email>lieven.tytgat@intec.ugent.be</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Catteeuw</surname><given-names>Ruben</given-names></name><address><email>ruben.catteeuw@ugent.be</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Moerman</surname><given-names>Ingrid</given-names></name><address><email>ingrid.moerman@intec.ugent.be</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Demeester</surname><given-names>Piet</given-names></name><address><email>piet.demeester@intec.ugent.be</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Kamerman</surname><given-names>Ad</given-names></name><address><email>ad.kamerman@greenpeak.com</email></address><xref ref-type="aff" rid="Aff2">2</xref></contrib><aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.5342.0</institution-id><institution-id institution-id-type="ISNI">0000000120697798</institution-id><institution content-type="org-division">Department of Information Technology (INTEC)</institution><institution content-type="org-name">Broadband Communication Networks (IBCN), Ghent University</institution></institution-wrap><addr-line content-type="street">G. Crommenlaan 8 (bus 201)</addr-line><addr-line content-type="postcode">9050</addr-line><addr-line content-type="city">Gent</addr-line><country country="BE">Belgium</country></aff><aff id="Aff2"><label>2</label><institution-wrap><institution content-type="org-name">GreenPeak Technologies</institution></institution-wrap><addr-line content-type="street">Vinkenburgstraat 2a</addr-line><addr-line content-type="postcode">3512</addr-line><addr-line content-type="city">Utrecht</addr-line><country country="NL">The Netherlands</country></aff></contrib-group><author-notes><corresp id="IDBMC168714992010343690_cor1"><label>a</label><email>pieter.demil@intec.ugent.be</email></corresp></author-notes><pub-date date-type="pub" publication-format="electronic"><day>27</day><month>7</month><year>2010</year></pub-date><pub-date date-type="collection" publication-format="electronic"><month>12</month><year>2010</year></pub-date><volume>2010</volume><issue seq="83">1</issue><elocation-id>343690</elocation-id><history><date date-type="registration"><day>16</day><month>2</month><year>2010</year></date><date date-type="received"><day>16</day><month>2</month><year>2010</year></date><date date-type="accepted"><day>24</day><month>6</month><year>2010</year></date><date date-type="online"><day>27</day><month>7</month><year>2010</year></date></history><permissions><copyright-statement content-type="compact">Â© Pieter De Mil et al. 2010</copyright-statement><copyright-statement content-type="comment">This article is published under license to BioMed Central Ltd. This is an open access article distributed under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</copyright-statement><copyright-year>2010</copyright-year><copyright-holder>Pieter De Mil et al.</copyright-holder><license license-type="open-access" xlink:href="https://creativecommons.org/licenses/by/2.0"><license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 2.0 International License (<ext-link xlink:href="https://creativecommons.org/licenses/by/2.0" ext-link-type="uri">https://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract xml:lang="en" id="Abs1"><title>Abstract</title><p>Most wireless sensor networks (WSNs) consist of battery-powered nodes and are limited to hundreds of nodes. Battery replacement is a very costly operation and a key factor in limiting successful large-scale deployments. The recent advances in both energy harvesters and low-power communication systems hold promise for deploying large-scale wireless green-powered sensor networks (WGSNs). This will enable new applications and will eliminate environmentally unfriendly battery disposal. This paper explores the use of energy harvesters to scavenge power for nodes in a WSN. The design and implementation of a generic energy-harvesting framework, suited for a WSN simulator as well as a real-life testbed, are proposed. These frameworks are used to evaluate whether a carrier sense multiple access with collision avoidance scheme is sufficiently reliable for use in emerging large-scale energy harvesting electronic shelf label (EHESL) systems (i.e., 12000 labels in a star topology). Both the simulator and testbed experiments yielded an average success rate up to 92%, with an arrival rate of 40 transceive cycles per second. We have demonstrated that our generic energy-harvesting framework is useful for WGSN research because the simulator allowed us to verify the achieved results on the real-life testbed and vice versa.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Sensor Network</kwd><kwd>Sensor Node</kwd><kwd>Wireless Sensor Network</kwd><kwd>Energy Harvester</kwd><kwd>Receive Signal Strength Indication</kwd></kwd-group><custom-meta-group><custom-meta><meta-name>publisher-imprint-name</meta-name><meta-value>Springer</meta-value></custom-meta><custom-meta><meta-name>volume-issue-count</meta-name><meta-value>1</meta-value></custom-meta><custom-meta><meta-name>issue-article-count</meta-name><meta-value>299</meta-value></custom-meta><custom-meta><meta-name>issue-toc-levels</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>issue-copyright-holder</meta-name><meta-value>The Author(s)</meta-value></custom-meta><custom-meta><meta-name>issue-copyright-year</meta-name><meta-value>2010</meta-value></custom-meta><custom-meta><meta-name>article-contains-esm</meta-name><meta-value>No</meta-value></custom-meta><custom-meta><meta-name>article-numbering-style</meta-name><meta-value>Unnumbered</meta-value></custom-meta><custom-meta><meta-name>article-registration-date-year</meta-name><meta-value>2010</meta-value></custom-meta><custom-meta><meta-name>article-registration-date-month</meta-name><meta-value>2</meta-value></custom-meta><custom-meta><meta-name>article-registration-date-day</meta-name><meta-value>16</meta-value></custom-meta><custom-meta><meta-name>article-toc-levels</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>toc-levels</meta-name><meta-value>0</meta-value></custom-meta><custom-meta><meta-name>volume-type</meta-name><meta-value>Regular</meta-value></custom-meta><custom-meta><meta-name>journal-product</meta-name><meta-value>ArchiveJournal</meta-value></custom-meta><custom-meta><meta-name>numbering-style</meta-name><meta-value>Unnumbered</meta-value></custom-meta><custom-meta><meta-name>article-grants-type</meta-name><meta-value>OpenChoice</meta-value></custom-meta><custom-meta><meta-name>metadata-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>abstract-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bodypdf-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bodyhtml-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>bibliography-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>esm-grant</meta-name><meta-value>OpenAccess</meta-value></custom-meta><custom-meta><meta-name>online-first</meta-name><meta-value>false</meta-value></custom-meta><custom-meta><meta-name>pdf-file-reference</meta-name><meta-value>BodyRef/PDF/13638_2010_Article_1870.pdf</meta-value></custom-meta><custom-meta><meta-name>pdf-type</meta-name><meta-value>Typeset</meta-value></custom-meta><custom-meta><meta-name>target-type</meta-name><meta-value>OnlinePDF</meta-value></custom-meta><custom-meta><meta-name>issue-type</meta-name><meta-value>Regular</meta-value></custom-meta><custom-meta><meta-name>article-type</meta-name><meta-value>OriginalPaper</meta-value></custom-meta><custom-meta><meta-name>journal-subject-primary</meta-name><meta-value>Engineering</meta-value></custom-meta><custom-meta><meta-name>journal-subject-secondary</meta-name><meta-value>Signal,Image and Speech Processing</meta-value></custom-meta><custom-meta><meta-name>journal-subject-secondary</meta-name><meta-value>Communications Engineering, Networks</meta-value></custom-meta><custom-meta><meta-name>journal-subject-secondary</meta-name><meta-value>Information Systems Applications (incl.Internet)</meta-value></custom-meta><custom-meta><meta-name>journal-subject-collection</meta-name><meta-value>Engineering</meta-value></custom-meta><custom-meta><meta-name>open-access</meta-name><meta-value>true</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>1. Introduction</title><p>The greatest limits faced by wireless sensor networks (WSNs) are the lifetime and the scale of the deployed networks.</p><p>Currently, most of the WSNs are battery-powered, so the node's lifetime is equal to the lifetime of the battery it uses. The vast majority of the research efforts so far have focused on the development of energy-efficient MAC (medium access control) and network protocols to guarantee a lifetime of at least a couple of years with a single battery pack. Typically, batteries need to be replaced every 3 to 5 years, depending on the application the WSN is designed for. Changing the batteries of hundreds or even thousands of nodes is cumbersome, costly, and environmentally unfriendly. The manufacturing, recylcing, and disposal of batteries involves a heavy carbon footprint. Traditional battery-operated WSNs will have a tremendous impact on the environment, if large-scale deployments start to roll out. For this reason, most of the deployed battery-operated WSNs are (luckily?) limited to a small number of nodes (64 nodes in [<xref ref-type="bibr" rid="CR1">1</xref>], 100 nodes in [<xref ref-type="bibr" rid="CR2">2</xref>]). The cost of changing a node's depleted batteries can outweigh the cost of the node itself. This very high operational cost has to some extent curtailed the proliferation of WSNs.</p><p>Ongoing technical development in the field of energy harvesters led to new opportunities. energy harvesting (EH) systems scavenge solar, thermal, or mechanical energy from the ambient environment and convert it into electrical energy. At the same time, ultra low-power radios have been developed and miniaturization of the hardware is still going on. These three evolutions will enable the revolution towards long-lived, large-scale sensor networks. These wireless green-powered sensor networks (WGSNs) will no longer depend on batteries with a finite life span, allowing a wide range of (novel) large-scale applications.</p><p>Research on WGSNs implies a shift in the research efforts: network lifetime is no longer an issue. Instead we can start to focus on optimizing the application's requirements (reliability, throughput, etc.). Of course, new protocols will have to account for the unique characteristics of energy-harvesting power sources.</p><p>An implementation on a testbed and a correlated simulation is needed to evaluate an algorithm, a protocol, or a system. For our WGSN research, a generic energy-harvesting framework that is able to simulate and emulate an energy harvester was necessary. This paper describes the design of that framework (it is implemented both in the Castalia simulator and on the iLab.t WiLab testbed). Subsequently, the framework is used to evaluate the packet success rate of a large-scale energy harvesting electronic shelf labeling (EHESL) WGSN.</p><p>The novelty of this research is the ability to analyse and evaluate both novel and well-studied protocols in combination with emulated energy harvesting power sources (e.g., energy harversters). Most experimental testbeds and simulators only offer a fixed power supply or a battery model. This work will facilitate the experimental research for heterogeneous WSNs, containing a mix of mains-powered, battery-powered, and energy harvesting power supplies.</p><p>The remainder of this paper is organized as follows. The use case that inspired this research and the requirements are described in the following section. Next, we briefly discuss some of the energy-harvesting aspects that are important to understand the foundation of our energy harvesting framework (Section 4). Sections 5 and 6 give an overview of the framework's implementation on the testbed and in the simulator. We then present our experimental setup for the ESL use case in Section 7 and the performance evaluation in Section 8. Next, related work is discussed and the final section concludes this paper.</p></sec><sec id="Sec2"><title>2. An Inspiring Use Case: Large-Scale Electronic Shelf Labeling</title><p>Retailers use ESL for displaying product pricing on shelves. Each label has the following components: a power source, a display, and a communication module. The communication network (wired or wireless) enables the retailer to handle price changes automatically. No manual intervention is needed, everything can be managed from the server.</p><p>Most ESL systems use either wired communication networks or wireless communication with battery-powered labels. In our research, the communication network is a WSN and the power source of the labels is an energy harvester. A typical EHESL system would consist of several thousands indoor solar cell-powered label nodes. They form a star topology with a central mains powered controller, which is connected to a price database.</p><p>Each label node initiates one transceive cycle by initiating a CCA. If the channel is found to be clear, the label sends a request for update (<inline-formula id="IEq1"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq1_HTML.gif"/></inline-formula>, 20âbytes, 0.832âms in the air) to the controller at a random time in a periodical time interval <inline-formula id="IEq2"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq2_HTML.gif"/></inline-formula> (e.g., 300 seconds in the real use case). The controller sends back an update (<inline-formula id="IEq3"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq3_HTML.gif"/></inline-formula>, 120âbytes, 4.032âms in the air) after a fixed time (i.e., 200âms). This fixed time gap serves two purposes. First, this gap between <inline-formula id="IEq4"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq4_HTML.gif"/></inline-formula> and <inline-formula id="IEq5"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq5_HTML.gif"/></inline-formula> is needed because the controller needs to look up the (new) price in the database. Second, the label will switch off its radio chip during this lookup process. This minimizes the average energy consumption of the label.</p><p>We identified four requirements of our EHESL system.</p><p>Lifetime of the Network and Low Maintenance Cost</p><p>The expected lifetime of an EHESL system is at least 10 years, and retailers do not want a high-maintenance cost. If the presented use case works with solar cells, we will meet this requirement.</p><p>Scale</p><p>The network size is more than ten thousand nodes. Find out if CSMA-CA is sufficient for our use case and which parameters (e.g., backoff windows, clear channel assessment, retries, etc.) are important and which are not.</p><p>Critical Network Operation</p><p>Due to the fact that the labels are powered by a solar cell, a critical network operation occurs when all labels will start around the same time (e.g., after a night). In this situation, all labels will request an update and the level of network activity (the load) will be very high. The system must continue to work in this worst-case situation.</p><p>Success Rate of Price Updates</p><p>Individual success rates must be bigger than 75% if 12000 labels are requesting an individual update once every five minutes.</p></sec><sec id="Sec3"><title>3. Background</title><p>In [<xref ref-type="bibr" rid="CR3">3</xref>], we found that a CSMA-CA (carrier sense multiple access with collision avoidance) scheme is theoretically suited and sufficient to minimize collisions between the subsequent frames of the different nodes. In 2008, GreenPeak Technologies has designed a prototype (not published previously) of an electronic shelf label with segmented display and solar cells. In Figure <xref rid="Fig1" ref-type="fig">1</xref>, the block diagram is shown. <fig id="Fig1"><label>Figure 1</label><caption xml:lang="en"><p><bold>Block diagram of an energy harvesting electronic shelf label.</bold></p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig1_HTML.jpg"/></fig></p><p>The main PCB contains the following blocks: <list list-type="order"><list-item><p>GreenPeak CM09 radio modules (the new GP500C was not yet available);</p></list-item><list-item><p>printed RF antenna;</p></list-item><list-item><p>power management components;</p></list-item><list-item><p>connector to display controller board;</p></list-item><list-item><p>RS232 driver;</p></list-item><list-item><p>debugging interface.</p></list-item></list></p><p>Display controller boards will be different for various displays. As such it makes the main PCB hardware independent of the used display. The display controller board for the segmented display contains the following blocks: <list list-type="order"><list-item><p>display driver: DA8523 from dialog semiconductor;</p></list-item><list-item><p>interface connector to the main PCB;</p></list-item><list-item><p>interface connectors to the 192 segment display: 4 hirose connectors;</p></list-item><list-item><p>connectors for 2 solar cells, one connector for each solar cell.</p></list-item></list></p><p>The display used in this prototype is a special designed 192 segment display from E-Ink.</p><p>This prototype, see Figure <xref rid="Fig2" ref-type="fig">2</xref>, has proven to be fully functional each and every day, in a small-scale setup, for over one year.<fig id="Fig2"><label>Figure 2</label><caption xml:lang="en"><p><bold>Photo of a fully functional energy harvesting electronic shelf label.</bold> This label has updated the price <inline-formula id="IEq6"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq6_HTML.gif"/></inline-formula> We also see the two solar cells on this prototype.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig2_HTML.jpg"/></fig></p><p>We wanted to provide empirical evidence that the EHESL protocol can work in a large-scale setup. First, we had to extend the functionality of our testbed and the simulator with our energy harvesting framework.</p></sec><sec id="Sec4"><title>4. Energy-Harvesting Aspects</title><p>Energy harvesting is the process by which energy from the physical environment is captured and converted into usable electrical energy. Before we started to build our energy-harvester framework, we have identified the typical components of the real energy harvesters.</p><p>An energy-harvesting system generally requires an energy source (see Section 4.1) and three other key electronic components, including: <list list-type="order"><list-item><p>an energy conversion device (see Section 4.2);</p></list-item><list-item><p>an energy harvesting module that captures, stores, and manages power for the device (see Section 4.3); and</p></list-item><list-item><p>an end application such as the previously presented ESL use case.</p></list-item></list></p><p>Based on this insight, we will present the foundation of our energy harvesting framework.</p><sec id="Sec5"><title>4.1. Overview of Energy Sources</title><p>This section highlights some common sources of energy harvesting [<xref ref-type="bibr" rid="CR4">4</xref>]: <list list-type="order"><list-item><p>mechanical energy: from sources such as vibration, mechanical stress, and strain;</p></list-item><list-item><p>thermal energy: waste energy from furnaces, heaters, and friction sources;</p></list-item><list-item><p>light energy: captured from sunlight or room light via photo sensors, or solar panels;</p></list-item><list-item><p>natural energy: from the environment such as wind, water flow, and solar;</p></list-item><list-item><p>human body: a combination of mechanical and thermal energy naturally generated from bioorganisms or through actions such as walking and sitting.</p></list-item></list></p><p>These energy sources are virtually unlimited and essentially free, if they can be captured at or near the system location. They behave differently from energy reservoirs such as batteries. Where the latter can be characterized by their energy density, the former tend to provide highly fluctuating amounts of energy and therefore their primary metric for comparison is power density. Table <xref rid="Tab1" ref-type="table">1</xref> shows some of the harvesting methods with their power-generation capability and is a summary of numbers found in recent literature [<xref ref-type="bibr" rid="CR5">5</xref>]. In [<xref ref-type="bibr" rid="CR6">6</xref>], the authors have surveyed energy-harvesting sources for embedded systems.<table-wrap id="Tab1"><label>Table 1</label><caption xml:lang="en"><p>Power densities of typical energy harvesters.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><p>Energy source</p></th><th align="center"><p>Characteristics</p></th><th align="center"><p>Efficiency</p></th><th align="center"><p>Power density</p></th></tr></thead><tbody><tr><td align="left"><p>Light</p></td><td align="center"><p>Outdoor</p></td><td align="center"><p>10â25%</p></td><td align="center"><p>100âmW/<inline-formula id="IEq7"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq7_HTML.gif"/></inline-formula></p></td></tr><tr><td/><td align="center"><p>Indoor</p></td><td/><td align="center"><p>100â<inline-formula id="IEq8"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq8_HTML.gif"/></inline-formula>W/<inline-formula id="IEq9"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq9_HTML.gif"/></inline-formula></p></td></tr><tr><td align="left"><p>Thermal</p></td><td align="center"><p>Human</p></td><td align="center"><p>0.1%</p></td><td align="center"><p>60â<inline-formula id="IEq10"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq10_HTML.gif"/></inline-formula>W/<inline-formula id="IEq11"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq11_HTML.gif"/></inline-formula></p></td></tr><tr><td/><td align="center"><p>Industrial</p></td><td align="center"><p>3%</p></td><td align="center"><p>10âmW/<inline-formula id="IEq12"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq12_HTML.gif"/></inline-formula></p></td></tr><tr><td align="left"><p>Vibration</p></td><td align="center"><p>Hz-Human</p></td><td align="center"><p>25â50%</p></td><td align="center"><p>4â<inline-formula id="IEq13"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq13_HTML.gif"/></inline-formula>W/<inline-formula id="IEq14"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq14_HTML.gif"/></inline-formula></p></td></tr><tr><td/><td align="center"><p>kHz-Machines</p></td><td/><td align="center"><p>800â<inline-formula id="IEq15"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq15_HTML.gif"/></inline-formula>W/<inline-formula id="IEq16"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq16_HTML.gif"/></inline-formula></p></td></tr><tr><td align="left"><p>Radio</p></td><td align="center"><p>GSM 900âMHz</p></td><td align="center"><p>50%</p></td><td align="center"><p>0.1â<inline-formula id="IEq17"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq17_HTML.gif"/></inline-formula>W/<inline-formula id="IEq18"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq18_HTML.gif"/></inline-formula></p></td></tr><tr><td align="left"><p>frequency</p></td><td align="center"><p>WiFi 2.4âGHz</p></td><td/><td align="center"><p>0.001â<inline-formula id="IEq19"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq19_HTML.gif"/></inline-formula>W/<inline-formula id="IEq20"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq20_HTML.gif"/></inline-formula></p></td></tr></tbody></table></table-wrap></p></sec><sec id="Sec6"><title>4.2. Energy Conversion Device</title><p>Although some energy harvesters provide a stable DC output, the power output of most energy harvesters is AC or unstable DC. Since only a stabilized DC voltage is able to power our sensor nodes, an AC-DC or a DC-DC convertor is necessary to provide a constant supply voltage to the sensor node. We assume that these conversion devices are part of the energy harvester itself, whose output is as a consequence a DC current <inline-formula id="IEq21"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq21_HTML.gif"/></inline-formula>. The energy-harvesting circuits in [<xref ref-type="bibr" rid="CR7">7</xref>] show that this assumption is realistic. These circuits also consume power, so this has to be taken into account during the experiments.</p></sec><sec id="Sec7"><title>4.3. Power Storage and Management</title><p>Ambient energy sources are typically low grade and their power output is highly nonlinear in nature depending upon a variety of factors. Hence, energy harvesters provide low, variable, and sometimes unpredictable levels of power. EH energy generation (i.e., EH energy profile) seldom matches the energy required by the application or system (application profile). Figure <xref rid="Fig3" ref-type="fig">3</xref> illustrates this behavior. The application profile A of a typical monitoring application is relatively flat, except for periodical spikes (when the radio is turned on). The energy profile B has a totally different shape: one dayânight cycle is shown. An additional storage element makes it possible for B to power A. This intermediate rechargeable battery or capacitor is needed to catch temporal fluctuations on or discrepancies between both the application's and energy harvester's energy profile. The storage element is charged with the DC current <inline-formula id="IEq22"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq22_HTML.gif"/></inline-formula> from the energy harvester. Once the energy is stored, a minimal condition for an end application to work is that the average energy consumed is lower than the average energy harvested. <fig id="Fig3"><label>Figure 3</label><caption xml:lang="en"><p><bold>Energy profile of an energy harvester (EH) and its average energy generation versus an application profile and its average energy consumption.</bold> The average energy consumed must be lower than the average energy harvested.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig3_HTML.jpg"/></fig></p></sec><sec id="Sec8"><title>4.4. Energy-Harvesting Framework</title><p>All the elements needed to construct a generic EH Framework (EHF) are now present: a variable current provided by the emulated energy harvester <inline-formula id="IEq23"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq23_HTML.gif"/></inline-formula> (a) to charge an intermediate storage element (b), and an energy consuming application (c). The framework's task is to regulate a realistic balance between these elements. This is possible by virtualizing (b) and adjusting the (virtual) voltage potential over this element according to (a) and (c). This will allow us to set a real-time configured voltage instead of always using a fixed voltage (e.g., 3.0âV). An ideal (super)capacitor (most suited here due to higher charge/discharge efficiency) is characterized by (1). <inline-formula id="IEq24"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq24_HTML.gif"/></inline-formula> is the capacitance of the capacitor<disp-formula id="Equ1"><label>1</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ1_HTML.gif"/></disp-formula></p><p>The current <inline-formula id="IEq25"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq25_HTML.gif"/></inline-formula> equals the rate of change of the charge with respect to time<disp-formula id="Equ2"><label>2</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ2_HTML.gif"/></disp-formula></p><p>Physical charges cannot pass through the dielectric layer of a capacitor, but rather build up in equal and opposite quantities on the electrodes; As each electron accumulates on the negative plate, one leaves the positive plate. Thus the accumulated charge on the electrodes is equal to the integral of the current, as well as being proportional to the voltage. Combining (1) and (2) gives us the integral form of the capacitor equation<disp-formula id="Equ3"><label>3</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ3_HTML.gif"/></disp-formula></p><p><inline-formula id="IEq26"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq26_HTML.gif"/></inline-formula> represents the initial voltage. <inline-formula id="IEq27"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq27_HTML.gif"/></inline-formula> is the difference between the harvested current and the consumed current. This equation will be used to keep a record of the available energy. Note that for rechargeable batteries, another voltage law is needed, but the general principles remain the same. We can also use this framework to emulate nonrechargeable batteries, so we have the foundation for a generic tool that can emulate energy harvesters and (rechargeable) batteries.</p></sec></sec><sec id="Sec9"><title>5. Energy Harvesting Framework at Testbed</title><p>As already stated in the introduction, real-life testbeds and simulation platforms are indispensable development tools for our research. In 2008, IBBT launched a technology center, called iLab.t. One part of it is the iLab.t WiLab testbed [<xref ref-type="bibr" rid="CR8">8</xref>]. This WSN testbed consists out of 200 nodes; spread over three floors of a <inline-formula id="IEq28"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq28_HTML.gif"/></inline-formula> office building. The architecture of the testbed, as shown in Figure <xref rid="Fig4" ref-type="fig">4</xref>, is based on the widely used MoteLab testbed concept from Harvard University [<xref ref-type="bibr" rid="CR9">9</xref>]. <fig id="Fig4"><label>Figure 4</label><caption xml:lang="en"><p><bold>iLab.</bold> t WiLab testbed architecture. The central management server has an ethernet connection with all the iNodes. These iNodes provide an admin interface to the environment emulator (EE), which provides both an admin interface and a control interface to the device under test (DUT).</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig4_HTML.jpg"/></fig></p><p>The motes used are TMote Sky motes. The intermediate nodes (iNodes) are mini-PCs equipped with ethernet, USB, serial, VGA, audio, and two 802.11bg wireless network interfaces. All the iNodes are connected to the management backbone. Finally, the environment emulator (EE) sits in between the iNode and the TMote Sky sensor node (=device under test (DUT)). Both the iNode and the EE make this testbed unique and very flexible.</p><p>An EE (Figure <xref rid="Fig5" ref-type="fig">5</xref>) can emulate scenarios (e.g., battery depletion, energy harvesting power sources, node failure, sensor events, actuator events, etc.) in a real-life office environment without the need for real hardware (batteries, harvesters, temperature sensors, etc.). We will only discuss the EE, because this is the hardware/softwarel tool that enables energy harvesting emulation.<fig id="Fig5"><label>Figure 5</label><caption xml:lang="en"><p><bold>Features of the environment emulator.</bold> We have used the battery emulator and the real-time power measurements for our energy harvesting emulation.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig5_HTML.jpg"/></fig></p><sec id="Sec10"><title>5.1. Environment Emulator: Hardware</title><p>For the design of the iLab.t WiLab testbed, we created a new board, which is basicly a stripped version of the TMote Sky and we called it the environment emulator. By default, the DUT is powered via USB. If we want to use an alternative power source, the EE can tear down this USB connection, and powers the DUT via the expansion connector. Both dedicated hardware and software were needed to achieve this desired feature.</p><p>The general principles of the energy-harvesting emulator part of the EE are depicted in Figure <xref rid="Fig6" ref-type="fig">6</xref>. At the left, we can see the USB power supply of the board. In the middle, we measure the current consumed by the DUT. This is used in a feedback loop, in order to configure the output voltage for the battery interface of the DUT. The energy harvester and the storage element (e.g., ultracapacitor) are virtual, and implemented in software. The voltage drop accros this virtual capacitor is calculated as described in the next subsection. For example, our DUT will power up if the voltage is higher than 1.5âV (1.8âV according to the datasheet of the MSP430).<fig id="Fig6"><label>Figure 6</label><caption xml:lang="en"><p><bold>General principles of the energy-harvesting emulator.</bold> We measure the current consumed by the DUT, and we set the output voltage. The characteristics of the energy harvester and the storage element are implemented in software.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig6_HTML.jpg"/></fig></p><p>Figure <xref rid="Fig7" ref-type="fig">7</xref> is the schematic that is part of the EE. On the EE we connected VDD (voltage drain drain) to the USB power of the board. The ADC (analog-to-digital converter) and DAC (digital-to-analog converter) lines are connected to DAC1 and ADC4 of the EE's MSP430. Next, the DUT_BATTERY_INTERFACE lines are interfaced to the battery interface of the DUT (e.g., TMote Sky). Implementing just the schematics as it is and connect it to an existing TMote Sky or TelosB gives the same functionality (we have also added other features, like setting/getting GPIO pins of the DUT, and audio).<fig id="Fig7"><label>Figure 7</label><caption xml:lang="en"><p><bold>Electronic circuit schematic of the energy-harvesting emulator.</bold></p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig7_HTML.jpg"/></fig></p><p>The main component in the schematic is U1 which is a rail-to-rail, high-output current amplifier. U1a is used to implement a voltage follower and maps the 2.5âV coming from the DAC (maximum output of DAC1 of the MSP430) to 3.5âV (the maximum supply voltage of the DUT). Standard opamp schematics are not able to drive high capacitive loads. C1 and R10 were added in the second version of the EE and are used as inner and outer loop compensations for a better response when driving high capacitive loads. 10âuF is a typical input capacitor of a sensornode and is much higher than what an opamp (typical 200âpF) can drive without compensations. U1b is used to implement a differential amplifier and maps a current of 70âmA through R4 and R5 to 2.5âV on the input of the ADC (the maximum input voltage of ADC4 of the MSP430).</p></sec><sec id="Sec11"><title>5.2. Environment Emulator: Software</title><p>We already know that the capacitance (stated in terms of the amount of charge (Q) stored at a given voltage drop (across the capacitor)) of a capacitor is given by (1). (Note that: the SI unit of capacitance is the farad; 1 farad = 1 coulomb per volt; typical capacitances are measured in microfarads or picofarads)</p><sec id="Sec12"><title>5.2.1. The Virtual Capacitor</title><p>To implement the law of Coulomb, a TinyOS application was developed where we implemented an event <italic>ConfigStream</italic> with these parameters: <list list-type="order"><list-item><p>value_0: start value which is the DAC value at t0. The value is in the range of <inline-formula id="IEq29"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq29_HTML.gif"/></inline-formula> 4095 maps on 3.48âV.</p></list-item><list-item><p>harvestMultiplier: this defines the size of the virtual capacitor, for a given "interSampleDelay" of the current measurements, and</p></list-item><list-item><p>harvester: The unit of harvester is 70/4095âmA.</p></list-item></list></p><p>When this <italic>ConfigStream</italic> event is executed, a continous sampler will start on ADC4 with an "interSampleDelay" <inline-formula id="IEq30"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq30_HTML.gif"/></inline-formula> of 250â<inline-formula id="IEq31"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq31_HTML.gif"/></inline-formula>s (4âkHz sampling rate). On every <italic>sampler buffer done</italic> event, the next DacValue will be calculated as follows (sampler buffer size is 50 samples, so we have a reaction time of 12.5âms (80âHz))<disp-formula id="Equ4"><label>4</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ4_HTML.gif"/></disp-formula></p><p>So, the new DacValue is the sum of the old DacValue and the delta that is determined by the sum of the harvested current (greater than or equal to zero) and the consumed current (smaller or equal to zero), scaled with the harvestMultiplier.</p></sec><sec id="Sec13"><title>5.2.2. How to Determine the Equivalent Capacitance of the Virtual Capacitor?</title><p>We will show how we determine the size of the equivalent capacitance of the "harvestMultiplier" (given an "interSampleDelay"). We start from(5)<disp-formula id="Equ5"><label>5</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ5_HTML.gif"/></disp-formula></p><p><inline-formula id="IEq32"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq32_HTML.gif"/></inline-formula> is the difference in charge (in coulomb); <inline-formula id="IEq33"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq33_HTML.gif"/></inline-formula> is the capacitance of the capacitor (in farad); <inline-formula id="IEq34"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq34_HTML.gif"/></inline-formula> is the electrical potential difference across the virtual capacitor (in Volt); and <inline-formula id="IEq35"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq35_HTML.gif"/></inline-formula> is the difference between the harvested current (virtual, determined by "harvester") and the consumed current (real current measurement) in ampere over the sample period <inline-formula id="IEq36"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq36_HTML.gif"/></inline-formula>. We can rewrite (5):<disp-formula id="Equ6"><label>6</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ6_HTML.gif"/></disp-formula></p><p>The embedded software on the EE calculates (7):<disp-formula id="Equ7"><label>7</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ7_HTML.gif"/></disp-formula></p><p><inline-formula id="IEq37"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq37_HTML.gif"/></inline-formula> is the electrical potential difference across the virtual capacitor (range <inline-formula id="IEq38"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq38_HTML.gif"/></inline-formula> DAC); <inline-formula id="IEq39"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq39_HTML.gif"/></inline-formula> is the difference between the harvested current and the consumed current (range <inline-formula id="IEq40"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq40_HTML.gif"/></inline-formula> ADC)<disp-formula id="Equ8"><label>8</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ8_HTML.gif"/></disp-formula></p><p>Combining (8), it follows that<disp-formula id="Equ9"><label>9</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ9_HTML.gif"/></disp-formula></p><p>Combining (6), (7), and (9), it follows that<disp-formula id="Equ10"><label>10</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ10_HTML.gif"/></disp-formula></p><p>We round up this factor to 50 (increase with 0.58%)<disp-formula id="Equ11"><label>11</label><graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_Equ11_HTML.gif"/></disp-formula></p><p>With an "interSampleDelay" <inline-formula id="IEq41"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq41_HTML.gif"/></inline-formula> of 250â<inline-formula id="IEq42"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq42_HTML.gif"/></inline-formula>s, and a "harvestMultiplier" of 1; the unit of the equivalent capacitance of the virtual capacitor is 5â<inline-formula id="IEq43"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq43_HTML.gif"/></inline-formula>F(11) (200âk is 1F).</p></sec></sec><sec id="Sec14"><title>5.3. Validation</title><p>We have tested our implementation of the energy-harvesting framework on the testbed with two examples: battery emulation and solar cell emulation. The emulation of the power source is done on the EE, which powers the DUT. The parameters needed by our framework are managed via a web-based interface, which configures each EE. This means that the generic energy harvesting framework (on the EE) is independent from the application on the DUT. This way, the application does not need to implement an API, so any existing application can be evaluated. We have evaluated a retail application but it is possible and desirable to evaluate other application domains like agricultural machinery, building or home automation, structural health monitoring, and so forth.</p><sec id="Sec15"><title>5.3.1. Battery Emulation</title><p>For a battery emulation of 3.49âV and 2000âmAh, we could define a full battery with initial voltage of 3.49âV and a harverster which is equal to zero and a capacitor of 2063âF (<inline-formula id="IEq44"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq44_HTML.gif"/></inline-formula>3.49âV = <inline-formula id="IEq45"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq45_HTML.gif"/></inline-formula> 3600âs) or the virtual capacitor equal to 412600âk (<inline-formula id="IEq46"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq46_HTML.gif"/></inline-formula> 200âk). In Figure <xref rid="Fig8" ref-type="fig">8</xref>, the blue line is the voltage, starting at 34.9âdV and it will decrease very slowly. This demo application is sending a packet once every second. In red, we can see the average current measured by the EE.<fig id="Fig8"><label>Figure 8</label><caption xml:lang="en"><p><bold>Battery emulation on node 8: 3.</bold> 49âV and 2000âmAh capacity. The application sends one packet every 7 second (random). The available energy decreases very slowly.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig8_HTML.jpg"/></fig></p></sec><sec id="Sec16"><title>5.3.2. Solar Cell Emulation</title><p>For a small energy harvester emulation, we could define a capacitor with initial voltage of 0âV and a harverster which is equal to 0.855âmA <inline-formula id="IEq47"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq47_HTML.gif"/></inline-formula> and a capacitor of 875â<inline-formula id="IEq48"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq48_HTML.gif"/></inline-formula>F. On the DUT, the first thing to do is to check if there is enough energy and if the radio can be enabled. Failing to do this would put the DUT in an endless reboot sequence. In Figure <xref rid="Fig9" ref-type="fig">9</xref>, the blue line is the voltage, starting at 0âdV and it will increase until 35âdV (3.5âV). The application tries to send a packet, once every ten seconds (randomly chosen). Next, it will listen three times. We can see this in red. The feedback mechanism works: more current is consumed than harvested and the voltage drops. <fig id="Fig9"><label>Figure 9</label><caption xml:lang="en"><p><bold>Energy-harvester emulation.</bold> Initially, there is no available energy. The application transmits one packet and listens three times. We see that the voltage drops during the radio activities and that it increases when more energy is harvested than is consumed (until the capacitor's maximum is reached).</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig9_HTML.jpg"/></fig></p></sec></sec></sec><sec id="Sec17"><title>6. Energy Harvesting Framework at Simulator</title><p>We also wanted a high level of flexibility in the simulation environment. Castalia [<xref ref-type="bibr" rid="CR10">10</xref>] was created out of the need to have a simulator designed for WSN research. It has advanced and accurate radio and wireless channel models. Castalia is built on OMNeT++, a framework which provides the basic tools to write simulators. In Castalia, nodes are OMNet++ modules. This makes it easy to add our energy harvesting framework. We will briefly discuss the software extension, without going into details.</p><sec id="Sec18"><title>6.1. Software</title><p>Castalia's resource-manager module (Figure <xref rid="Fig10" ref-type="fig">10</xref>) manages the avalaible resources (consumed energy, CPU-time, etc.) of a simulated node. It is extended with our energy harvesting model. By providing harvesting functionality and an interface to the application (power node up, and down), a first version was implemented. This had some shortcomings; like the fact that the radio module was solely responsible for executing the harvesting function and determining the amount of harvested energy. A second problem was the unrealistic effect of the system: the adjusted model assumes that the power source is a rechargeable battery that provides always a fixed current/voltage, charges and discharges linearly, and so forth. A realistic system will not work if the supplied voltage is too low and will restart if the supplied voltage is above a threshold. Therefore, we have designed a second version, which is a generic solution. We have two elements: a configuration file <italic>resourceMgr-Energy-Harvester.ini</italic> and a function <italic>evaluateEnergy</italic>(<italic>double startTime, double amount</italic>) (the argument "amount" is the consumed charge).<fig id="Fig10"><label>Figure 10</label><caption xml:lang="en"><p><bold>Internal structure of a node composite module in the Castalia simulator.</bold> We have extended the resource manager with our energy harvesting framework.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig10_HTML.jpg"/></fig></p><p>In the configuration file, we can configure the following parameters: <list list-type="order"><list-item><p>SN.nodenodeID[nodeID].nodeResourceMgr.harvestâLevel-i: i goes from 1 to 20. These values (<inline-formula id="IEq49"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq49_HTML.gif"/></inline-formula>) determine the levels of harvested current;</p></list-item><list-item><p>SN.node[nodeID].nodeResourceMgr.harvestIntervalâTime: determines when the harvestLevel must switch to the new level;</p></list-item><list-item><p>SN.node[nodeID].nodeResourceMgr.capacitor: sets the value of the virtual capacitor;</p></list-item><list-item><p>SN.node[nodeID].nodeResourceMgr.activateHarv-ester: activate or deactivate the simulated harvester;</p></list-item><list-item><p>SN.node[nodeID].nodeResourceMgr.initialEnergy: sets the initial voltage accros the virtual capacitor.</p></list-item></list></p><p>The function <italic>evaluateEnergy</italic> (in the radio module) contains the logic of our energy harvester framework. If the voltage across the virtual capacitor goes under a threshold, a "resource mgr out of energy" message is sent to the modules. Each module that receives this message will stop handling the messages (except for the "node start up" message). Now, the resource manager has to call the <italic>evaluateEnergy</italic> function periodically (because the radio module is down). If the voltage increases again, and a threshold is passed; a "Node start up" message is sent to the modules. In Figure <xref rid="Fig11" ref-type="fig">11</xref> we see that the energy is evaluated during each radio transition, over a period D (<inline-formula id="IEq50"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq50_HTML.gif"/></inline-formula>).<fig id="Fig11"><label>Figure 11</label><caption xml:lang="en"><p><bold>The energy harvesting concept in the Castalia simulator.</bold> The energy is evaluated during each radio transition, over a period D taking into account the configured harvestLevels (HL) and the consumed energy (which is known for each radio state).</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig11_HTML.jpg"/></fig></p><p>Now we have the tools, we can provide experimental results that prove that an ESL system can work with energy harvesters (EHESL).</p></sec></sec><sec id="Sec19"><title>7. Experimental Setup</title><p>In our experiments, B-MAC [<xref ref-type="bibr" rid="CR11">11</xref>] is used. This MAC protocol uses clear channel assessments (CCA) and packet backoffs for channel arbitration We have disabled B-MAC's link layer acknowledgments and low-power listening functionality because we only want to use CSMA-CA.</p><p>An important limit of our ESL system is the number of transceive cycles per second the controller can process. We allow one controller in our network, so this limit determines the number of labels we can allow in an update interval <inline-formula id="IEq51"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq51_HTML.gif"/></inline-formula>. Suppose we want 16000 labels and <inline-formula id="IEq52"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq52_HTML.gif"/></inline-formula> is five minutes. This is an arrival rate of 53.3 RFUs per second. The experimentally determined maximum arrival rate between two testbed nodes is 49.3 RFUs per second. Of course, another hardware platform and/or software stack will have another limit. We have dimensioned our experiments so that the maximum average arrival rate is 40 RFUs per second. This corresponds with 12000 labels (<inline-formula id="IEq53"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq53_HTML.gif"/></inline-formula> âseconds). Clearly, there is a tradeoff between the number of labels and the update interval.</p><p>Since we do not have 12001 testbed nodes, we had to scale the frequency of the transceive cycles per label in such a way that the workload <inline-formula id="IEq54"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq54_HTML.gif"/></inline-formula> (RFU arrivals per second) for the controller is equivalent with a situation with more nodes (i.e., 12000 labels) transceiving at a lower frequency (i.e., once every 300 seconds). We have used 40+1 nodes, thus the <inline-formula id="IEq55"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq55_HTML.gif"/></inline-formula> is one second. One label in our testnetwork corresponds with 300 emulated labels. We have verified in the Castalia simulator that this approach is justified.</p><p>To make realistic backtracking of the experimentally achieved results possible, we have added the positions of the nodes and connectivity information (we measured both received signal strength indication and packet-reception ra-tio values on our testbed) to the Castalia simulator. The positions were added in "node_locations.ini" (SN.deploymentType = 3), and the connectivity information in "rxSignal_ConnectivityMap" and "PRR_ConnectivityMap" in the â.ini file of the wireless channel module.</p><p>First, we have tested our system without energy harvesting and always-on labels (ESL). Each ESL label sends (or tries to send) 200 RFUs to the controller, during 200 seconds. The number of succesfully received updates determines the success rate of that label. As already stated, we did not use link-layer acknowledgments or retries. The initial backoff window (IBW) is zero for both controller and labels. The congestion backoff window (CBW) is zero for the controller, and eight ms for the labels. This is summarized in Table <xref rid="Tab2" ref-type="table">2</xref>. Next, we have applied our energy harvesting framework, and we have tested our system again (EHESL).<table-wrap id="Tab2"><label>Table 2</label><caption xml:lang="en"><p>Parameters.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><p>Parameter</p></th><th align="center"><p>Label</p></th><th align="center"><p>Controller</p></th></tr></thead><tbody><tr><td align="left"><p>Link-layer acknowledgments?</p></td><td align="center"><p>No</p></td><td align="center"><p>No</p></td></tr><tr><td align="left"><p>Retries?</p></td><td align="center"><p>No</p></td><td align="center"><p>No</p></td></tr><tr><td align="left"><p><inline-formula id="IEq56"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq56_HTML.gif"/></inline-formula> (ms)</p></td><td align="center"><p>0</p></td><td align="center"><p>0</p></td></tr><tr><td align="left"><p><inline-formula id="IEq57"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq57_HTML.gif"/></inline-formula> (ms)</p></td><td align="center"><p>8</p></td><td align="center"><p>0</p></td></tr></tbody></table></table-wrap></p></sec><sec id="Sec20"><title>8. Analysis of Experiments</title><p>The average success rate (<inline-formula id="IEq58"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq58_HTML.gif"/></inline-formula>) is 91% on the tesbed and 91.5% in Castalia. Although the average success rate is stable, individual success rates (<inline-formula id="IEq59"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq59_HTML.gif"/></inline-formula>) are not: temporal and spatial fluctuations tend to have a huge impact and can exclude certain nodes from the network temporarily or permanently. A very high <inline-formula id="IEq60"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq60_HTML.gif"/></inline-formula> is needed to have a working system, but also individual success rates of all the different ESL labels must be high enough. The average negative deviation of the <inline-formula id="IEq61"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq61_HTML.gif"/></inline-formula> compared to the <inline-formula id="IEq62"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq62_HTML.gif"/></inline-formula> is 3% (testbed) and 3.5% (simulator); the maximum negative deviation is 11.5% (testbed) and 12% (simulator).</p><p>The <inline-formula id="IEq63"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq63_HTML.gif"/></inline-formula> varies between 80% and 100%. Figures <xref rid="Fig12" ref-type="fig">12</xref> and <xref rid="Fig13" ref-type="fig">13</xref> show the spatial distribution of the individual success rate <inline-formula id="IEq64"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq64_HTML.gif"/></inline-formula> of each label on the testbed and in the simulator. Depending on the success rate, the results were divided in four categories.<fig id="Fig12"><label>Figure 12</label><caption xml:lang="en"><p><bold>Spatial distribution of the individual success rate on the third floor of the iLab.</bold> t WiLab testbed. 4 categories: green = best, yellow, orange, and red (worst). The blue node is the controller.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig12_HTML.jpg"/></fig><fig id="Fig13"><label>Figure 13</label><caption xml:lang="en"><p><bold>Spatial distribution of the individual success rate in the Castalia simulator.</bold> 4 categories: green = best, yellow, orange, and red (least good). The blue nodes are not used.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig13_HTML.jpg"/></fig></p><p>Figure <xref rid="Fig14" ref-type="fig">14</xref> gives an overview of the messages between one controller and three labels (A, B, and C). It is important to know when collisions can occur. We have identified four potential collisions.</p><p>(1)<italic>Label sending an RFU - label sending an RFU:</italic> label A and label C are hidden nodes. Therefore it is possible that both <italic>RFUs</italic> collide at the controller.</p><p>(2)<italic>Receiving an RFU - sending a scheduled update:</italic> If the controller's radio is busy receiving an <inline-formula id="IEq65"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq65_HTML.gif"/></inline-formula>, it cannot send the scheduled update. This is a problem because the label will only listen to the medium for a short time. If the update from the controller cannot be sent to the label, the label is out of energy due to idle listening.</p><p>(3)<italic>Sending two scheduled updates:</italic> This "collision" is possible because the length of an <inline-formula id="IEq66"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq66_HTML.gif"/></inline-formula> is six times smaller than the length of an update. It will be impossible to send updates to labels that have sent an <inline-formula id="IEq67"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq67_HTML.gif"/></inline-formula> within 3.2 ms after another label's <inline-formula id="IEq68"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq68_HTML.gif"/></inline-formula>, because the controller will be busy sending the update. If we could schedule all the <inline-formula id="IEq69"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq69_HTML.gif"/></inline-formula>, the throughput of the controller would be 124 <inline-formula id="IEq70"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq70_HTML.gif"/></inline-formula>/updates in 1 second. We will see that our experimental setup has a much lower controller's throughput (49.2 <inline-formula id="IEq71"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq71_HTML.gif"/></inline-formula>/updates in 1 second). Since it is impossible to synchronize all the green-powered labels, it is a good thing that the controller's real throughput is limited to 39.7% of the ideal schedule. This will increase the success rate of the random <inline-formula id="IEq72"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq72_HTML.gif"/></inline-formula>/update transceive cycles.</p><p>(4)<italic>Sending a scheduled update - receiving an RFU:</italic> The controller does not know when <inline-formula id="IEq73"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq73_HTML.gif"/></inline-formula> are sent. If transmission of an update is busy, the controller will not receive the <inline-formula id="IEq74"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq74_HTML.gif"/></inline-formula>.</p><p><fig id="Fig14"><label>Figure 14</label><caption xml:lang="en"><p><bold>Transmit (Tx) and receive (Rx) timeline for one controller and three labels.</bold> Labels send a request for update (RFU) to the controller, the controller replies with an Update (U) after 200âms. Four potential collisions of messages are identified.</p></caption><graphic specific-use="web" mime-subtype="JPEG" xlink:href="MediaObjects/13638_2010_Article_1870_Fig14_HTML.jpg"/></fig></p><p>We have also noticed that labels located at the corners and/or extremes of the floor have lower individual success rates. Labels in the neighborhood of the controller have the highest success rate. We have two explanations. <list list-type="order"><list-item><p>If the distance between label and controller increases, more packets get lost due to path loss.</p></list-item><list-item><p>Labels situated at the corners or extremes of the floor have less connectivity with the other labels in the network. The hidden node problem occurs when a label is visible from a controller, but not from other labels communicating with the controller. This leads to reduced individual success rates.</p></list-item></list></p><p>Some other conclusions of our experiments are the following: <list list-type="order"><list-item><p>Clear channel assessments are very important for achieving a high success rate in a dense network. Without CCAs, the <inline-formula id="IEq75"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq75_HTML.gif"/></inline-formula> is 74.5%.</p></list-item><list-item><p>Backoff window sizes did not have a substantial impact on the success rate (explained by the fact that the labels wake-up randomly already, so there is no need to add initial backoffs at the MAC layer). The benefits of using larger contention backoff sizes will become bigger with a higher network load.</p></list-item><list-item><p>When transmissions collide a first arriving one will be received correctly as long as the second arriving one is received at a sufficiently lower level. This favors the labels that have a smaller distance to the controller.</p></list-item></list></p></sec><sec id="Sec21"><title>9. Related Work</title><p>EnergyBucket [<xref ref-type="bibr" rid="CR12">12</xref>] is a tool for power profiling and debugging of sensor nodes. It is designed for empirical measurements of energy consumptions accross 5 decades of current draw and facilitates easy score-keeping of energy consumption between different parts of a target application. This tool can decide when a bucket of 1.22âmJ is used (the resolution of our tool is 12.81ânJ per 0.25âms (if we use the same voltage supply)). The disadvantages are that <inline-formula id="IEq76"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq76_HTML.gif"/></inline-formula> it is expensive (TMote Sky + COTS components with a total price of 150 euro), <inline-formula id="IEq77"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq77_HTML.gif"/></inline-formula> it is not suited for a whole testbed, and <inline-formula id="IEq78"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq78_HTML.gif"/></inline-formula> it delivers a constant volatage of 3.0âV to the target system (it is not capable to emulate power sources).</p><p>PowerBench [<xref ref-type="bibr" rid="CR13">13</xref>] is a scalable testbed infrastructure for benchmarking power consumption. This 24-node tesbed is capable of recording the power consumption of all nodes with a 5âkHz sampling rate and 30â<inline-formula id="IEq79"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq79_HTML.gif"/></inline-formula>A resolution. This is accomplished by means of low-cost interface board, similar to the one we presented. The disadvantages are that <inline-formula id="IEq80"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq80_HTML.gif"/></inline-formula> it also measures the current used by the USB circuit that powers the DUT, <inline-formula id="IEq81"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq81_HTML.gif"/></inline-formula> it suffers from instabilities at higer measured currents (comparible with the first version of the presented EE, which we solved in the second version), and <inline-formula id="IEq82"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq82_HTML.gif"/></inline-formula> it delivers a constant voltage of 3.0âV to the target system (like Energy Bucket, is not capable to emulate power sources).</p><p>Both EnergyBucket and PowerBench share the disadvantage that it is not possible to feedback the measured current to the power supply regulator. This way, both supply a constant voltage. The EE can power the target system via its battery interface with a <italic>variable</italic> voltage supply. The EE has all the advantages, except for EnergyBucket's hardware annotation of program sections (we could add this functionality because we have extra I/O pins available on the EE). With the EE, it is also possible to disable the USB circuit, we have deployed in on 200 nodes, it is less expensive (70 euro), it records the power consumption on all nodes with a sampling rate of 4âkHz <inline-formula id="IEq83"><inline-graphic specific-use="web" mime-subtype="GIF" xlink:href="MediaObjects/13638_2010_Article_1870_IEq83_HTML.gif"/></inline-formula> and it can supply the voltage with a rate of 80âHz (12.5âms). Therefore, the EE is beyond the state-of-the-art, and it is the first tool that enables testbed experiments of WGSNs. It is also very flexible because each energy harvester can be emulated.</p><p>EHESL is not the only use case using energy harvesting. Examples of energy harvesting sensor networks include the following:</p><p><list list-type="order"><list-item><p>WSN-HEAP [<xref ref-type="bibr" rid="CR14">14</xref>] (WSN-powered solely by ambient energy harvesting) uses piezoelectric devices to transform ambient vibrations into electric energy. It uses a star topology with multiple sinks. The sinks are (mains powered) wireless nodes. This solution is deployed to monitor the health of railroad infrastructure. The energy harvesting devices uses vibrations induces by passing trains to gain power. They control the transmit power of the energy harvesting devices in order to achieve an optimal node lifetime and throughput.</p></list-item><list-item><p>Indoor solar energy harvesting for sensor network router nodes [<xref ref-type="bibr" rid="CR15">15</xref>]: this paper describes a solution for wireless patient health monitoring in hospitals. The wireless sensing nodes are battery powered and attached to the patient. The wireless network infrastructure nodes use solar cells to transform indoor light into electrical energy. They insure connectivity by using node pairs each with a duty cycle of 50%.</p></list-item><list-item><p>An environmental energy-harvesting framework for sensor networks [<xref ref-type="bibr" rid="CR16">16</xref>] gives a theoretical approach for using the changes in environmental characteristics to extend the networks lifetime. They extract more work out of the same energy environment by adapting the task distribution among nodes in accordance with the detailed characteristics of environmental energy availability. This is a distributed framework where sensor nodes adaptively learn how much energy they can extract from the environment and which tasks they can perform with the given energy.</p></list-item><list-item><p>Energy harvesting in a mobile sensor network [<xref ref-type="bibr" rid="CR17">17</xref>] uses a different approach compared to the previously described solutions. They exploit the use of mobile devices to supply energy across the network. These mobile devices or robots can do this while performing another task. The robots are charged in a docking station. When the robots are operational they localize the sensor node with the highest energy requirement and recharge this sensor node. They do this until their energy is nearly depleted.</p><p>None of these have the same requirements of the presented EHESL use case. We have focussed on the packet success rate in a large-scale star topology.</p></list-item></list></p></sec><sec id="Sec22"><title>10. Conclusion</title><p>This paper presents our energy harvesting framework. We have described the design of this framework and the implementation on our testbed and in the Castalia simulator. Extending the testbed was possible thanks to the earlier developed hardware platform (the environment emulator) that is now used to implement the emulation of energy harvesters (and power sources in general). We have used two features of the EE. First, the EE can disconnect the USB power of the device under test (DUT) and it can power the DUT via its battery interface with a variable voltage supply. Second, by measuring the current at a high sample rate and using this information to control the voltage supply we can build a controlled loop feedback mechanism. To emulate the real behavior of an energy harvester, we implemented the law of Coulomb as a feedback mechanism. Furthermore, we can determine the exact power consumption as we are at all times aware of the consumed current by the DUT and the tuned voltage.</p><p>We have successfully applied this energy harvesting framework to the inspiring ESL use case. The challenge was: let 12000 nodes request a price update every five minutes and achieve individual success rates higher than 75%. We have showed that the minimum individual success rate was 80%.</p><p>Finally, we achieved a very good correlation of simulation and (scaled) experimental results. This is important because very large-scale testbed (i.e., more than 10000 nodes) are too expensive to deploy. The presented framework and the correlation between the testbed and the simulator will contribute to the design, implementation, and evaluation of a broad range of wireless green-powered sensor networks.</p></sec></body><back><ref-list id="Bib1"><title>References</title><ref-list><ref id="CR1"><label>1.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>S</given-names></name><name><surname>Pakzad</surname><given-names>S</given-names></name><name><surname>Culler</surname><given-names>D</given-names></name><name><surname>Demmel</surname><given-names>J</given-names></name><name><surname>Fenves</surname><given-names>G</given-names></name><name><surname>Glaser</surname><given-names>S</given-names></name><name><surname>Turon</surname><given-names>M</given-names></name></person-group><article-title xml:lang="en">Health monitoring of civil infrastructures using wireless sensor networks</article-title><source>Proceedings of the 6th International Symposium on Information Processing in Sensor Networks (IPSN '07)</source><year>2007</year><fpage>254</fpage><lpage>263</lpage><comment>April</comment></mixed-citation></ref><ref id="CR2"><label>2.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Murty</surname><given-names>RN</given-names></name><name><surname>Mainland</surname><given-names>G</given-names></name><name><surname>Rose</surname><given-names>I</given-names></name><name><surname>Chowdhury</surname><given-names>AR</given-names></name><name><surname>Gosain</surname><given-names>A</given-names></name><name><surname>Bers</surname><given-names>J</given-names></name><name><surname>Welsh</surname><given-names>M</given-names></name></person-group><article-title xml:lang="en">CitySense: an urban-scale wireless sensor network and testbed</article-title><source>Proceedings of the IEEE International Conference on Technologies for Homeland Security (HST '08)</source><year>2008</year><fpage>583</fpage><lpage>588</lpage><comment>May</comment></mixed-citation></ref><ref id="CR3"><label>3.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Steenbergen</surname><given-names>K</given-names></name><name><surname>Kamerman</surname><given-names>A</given-names></name></person-group><article-title xml:lang="en">Scalable wireless sensor networks based on green energy</article-title><source>Wireless Congress: Systems and Applications</source><year>2008</year><comment>, Munchen, Germany</comment></mixed-citation></ref><ref id="CR4"><label>4.</label><mixed-citation publication-type="other"><ext-link xlink:href="http://energyharvesting.net/" ext-link-type="uri">http://energyharvesting.net/</ext-link></mixed-citation></ref><ref id="CR5"><label>5.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Valenzuela</surname><given-names>A</given-names></name></person-group><source>Batteryless energy harvesting for embedded designs</source><year>2009</year><comment>http://www.embedded.com/218600144</comment></mixed-citation></ref><ref id="CR6"><label>6.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Chalasani</surname><given-names>S</given-names></name><name><surname>Conrad</surname><given-names>JM</given-names></name></person-group><article-title xml:lang="en">A survey of energy harvesting sources for embedded systems</article-title><source>IEEE Southeastcon</source><year>2008</year><fpage>442</fpage><lpage>447</lpage><comment>April , Huntsville, Ala, USA</comment></mixed-citation></ref><ref id="CR7"><label>7.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Guan</surname><given-names>MJ</given-names></name><name><surname>Liao</surname><given-names>WH</given-names></name></person-group><article-title xml:lang="en">Characteristics of energy storage devices in piezoelectric energy harvesting systems</article-title><source>Journal of Intelligent Material Systems and Structures</source><year>2008</year><volume>19</volume><issue>6</issue><fpage>671</fpage><lpage>680</lpage><pub-id pub-id-type="doi">10.1177/1045389X07078969</pub-id></mixed-citation></ref><ref id="CR8"><label>8.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Tytgat</surname><given-names>L</given-names></name><name><surname>Jooris</surname><given-names>B</given-names></name><name><surname>De Mil</surname><given-names>P</given-names></name><etal/></person-group><article-title xml:lang="en">Demo abstract: WiLab, a real-life wireless sensor testbed with environment emulation</article-title><source>Proceedings of the European Conference on Wireless Sensor Networks (EWSN '09)</source><year>2009</year><comment>http://ewsn09.v6testbed.net/posters.html, Cork, Ireland</comment></mixed-citation></ref><ref id="CR9"><label>9.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Werner-Allen</surname><given-names>G</given-names></name><name><surname>Swieskowski</surname><given-names>P</given-names></name><name><surname>Welsh</surname><given-names>M</given-names></name></person-group><article-title xml:lang="en">MoteLab: a wireless sensor network testbed</article-title><source>Proceedings of the 4th International Symposium on Information Processing in Sensor Networks (IPSN '05)</source><year>2005</year><fpage>483</fpage><lpage>488</lpage><comment>April</comment></mixed-citation></ref><ref id="CR10"><label>10.</label><mixed-citation publication-type="other">Castalia Simulator <ext-link xlink:href="http://castalia.npc.nicta.com.au/" ext-link-type="uri">http://castalia.npc.nicta.com.au/</ext-link></mixed-citation></ref><ref id="CR11"><label>11.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Polastre</surname><given-names>J</given-names></name><name><surname>Hill</surname><given-names>J</given-names></name><name><surname>Culler</surname><given-names>D</given-names></name></person-group><article-title xml:lang="en">Versatile low power media access for wireless sensor networks</article-title><source>Proceedings of the 2nd International Conference on Embedded Networked Sensor Systems (SenSys '04)</source><year>2004</year><fpage>95</fpage><lpage>107</lpage><pub-id pub-id-type="doi">10.1145/1031495.1031508</pub-id><comment>November , New York, NY, USA</comment></mixed-citation></ref><ref id="CR12"><label>12.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Andersen</surname><given-names>J</given-names></name><name><surname>Hansen</surname><given-names>MT</given-names></name></person-group><article-title xml:lang="en">Energy Bucket: a tool for power profiling and debugging of sensor nodes</article-title><source>Proceedings of the 3rd International Conference on Sensor Technologies and Applications (SENSORCOMM '09)</source><year>2009</year><fpage>132</fpage><lpage>138</lpage><comment>June</comment></mixed-citation></ref><ref id="CR13"><label>13.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Haratcherev</surname><given-names>I</given-names></name><name><surname>Halkes</surname><given-names>G</given-names></name><name><surname>Parker</surname><given-names>T</given-names></name><name><surname>Visser</surname><given-names>O</given-names></name><name><surname>Langendoen</surname><given-names>K</given-names></name></person-group><article-title xml:lang="en">PowerBench: a scalable testbed infrastructure for benchmarking power consumption</article-title><source>Proceedings of the International Workshop on Sensor Network Engineering (IWSNE '08)</source><year>2008</year></mixed-citation></ref><ref id="CR14"><label>14.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Seah</surname><given-names>WKG</given-names></name><name><surname>Zhi</surname><given-names>AE</given-names></name><name><surname>Tan</surname><given-names>H-P</given-names></name></person-group><article-title xml:lang="en">Wireless sensor networks powered by ambient energy harvesting (WSN-HEAP)âsurvey and challenges</article-title><source>Proceedings of the 1st International Conference on Wireless Communication, Vehicular Technology, Information Theory and Aerospace and Electronic Systems Technology, Wireless (VITAE '09)</source><year>2009</year><fpage>1</fpage><lpage>5</lpage><pub-id pub-id-type="doi">10.1109/WIRELESSVITAE.2009.5172411</pub-id><comment>May</comment></mixed-citation></ref><ref id="CR15"><label>15.</label><mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hande</surname><given-names>A</given-names></name><name><surname>Polk</surname><given-names>T</given-names></name><name><surname>Walker</surname><given-names>W</given-names></name><name><surname>Bhatia</surname><given-names>D</given-names></name></person-group><article-title xml:lang="en">Indoor solar energy harvesting for sensor network router nodes</article-title><source>Microprocessors and Microsystems</source><year>2007</year><volume>31</volume><issue>6</issue><fpage>420</fpage><lpage>432</lpage><pub-id pub-id-type="doi">10.1016/j.micpro.2007.02.006</pub-id></mixed-citation></ref><ref id="CR16"><label>16.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Kansal</surname><given-names>A</given-names></name><name><surname>Srivastava</surname><given-names>MB</given-names></name></person-group><article-title xml:lang="en">An environmental energy harvesting framework for sensor networks</article-title><source>Proceedings of the International Symposium on Low Power Electronics and Design</source><year>2003</year><fpage>481</fpage><lpage>486</lpage><comment>August , Seoul, Korea</comment></mixed-citation></ref><ref id="CR17"><label>17.</label><mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Rahimi</surname><given-names>M</given-names></name><name><surname>Shah</surname><given-names>H</given-names></name><name><surname>Sukhatme</surname><given-names>GS</given-names></name><name><surname>Heideman</surname><given-names>J</given-names></name><name><surname>Estrin</surname><given-names>D</given-names></name></person-group><article-title xml:lang="en">Studying the feasibility of energy harvesting in a mobile sensor network</article-title><source>Proceedings of the IEEE International Conference on Robotics and Automation (ICRA '03)</source><year>2003</year><fpage>19</fpage><lpage>24</lpage><comment>September , Taipei, Taiwan</comment></mixed-citation></ref></ref-list></ref-list></back></article></records><facets><facet name="subject"><facet-value count="1">Communications Engineering, Networks</facet-value><facet-value count="1">Engineering</facet-value><facet-value count="1">Information Systems Applications (incl.Internet)</facet-value><facet-value count="1">Signal,Image and Speech Processing</facet-value></facet><facet name="keyword"><facet-value count="1">Energy Harvester</facet-value><facet-value count="1">Receive Signal Strength Indication</facet-value><facet-value count="1">Sensor Network</facet-value><facet-value count="1">Sensor Node</facet-value><facet-value count="1">Wireless Sensor Network</facet-value></facet><facet name="pub"><facet-value count="1">EURASIP Journal on Wireless Communications and Networking</facet-value></facet><facet name="year"><facet-value count="1">2010</facet-value></facet><facet name="country"><facet-value count="1">Belgium</facet-value><facet-value count="1">Netherlands</facet-value></facet><facet name="type"><facet-value count="1">Journal</facet-value></facet></facets></response>
